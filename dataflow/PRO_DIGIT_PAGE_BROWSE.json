{
	"name": "PRO_DIGIT_PAGE_BROWSE",
	"properties": {
		"folder": {
			"name": "Pro"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "vw_latest_mon_event_param_union_log",
						"type": "DatasetReference"
					},
					"name": "IngestRawMonEventUnionLog"
				},
				{
					"dataset": {
						"referenceName": "vw_latest_mon_visit_log",
						"type": "DatasetReference"
					},
					"name": "IngestRawMonVisitLog"
				},
				{
					"dataset": {
						"referenceName": "PUB_CDM_CUSTOMER_MAPPING",
						"type": "DatasetReference"
					},
					"name": "IngestCDMCUSTOMERMAPPING"
				},
				{
					"dataset": {
						"referenceName": "PUB_REF_APP",
						"type": "DatasetReference"
					},
					"name": "IngestMonApp"
				},
				{
					"dataset": {
						"referenceName": "vw_latest_mon_event_param_value_log",
						"type": "DatasetReference"
					},
					"name": "ValueLog"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_PRO_DIGIT_PAGE_BROWSE",
						"type": "DatasetReference"
					},
					"name": "SinkToProcessTable"
				},
				{
					"dataset": {
						"referenceName": "TEMP_SFMC_DIGIT_PAGE_BROWSE",
						"type": "DatasetReference"
					},
					"name": "SinktoTempforSFTP"
				}
			],
			"transformations": [
				{
					"name": "FilterEventID"
				},
				{
					"name": "JoinMonVisitLog"
				},
				{
					"name": "DropColumnFromMonVisitLog"
				},
				{
					"name": "AddColumn"
				},
				{
					"name": "JoinCDMCUSTOMERMAPPING"
				},
				{
					"name": "JoinMonApp"
				},
				{
					"name": "DropColumnFromMonApp"
				},
				{
					"name": "Dedup"
				},
				{
					"name": "DropCount"
				},
				{
					"name": "FilterLatestUnion"
				},
				{
					"name": "FilterVisit"
				},
				{
					"name": "JoinValue"
				},
				{
					"name": "DedupValue"
				},
				{
					"name": "SetNullto0"
				},
				{
					"name": "AddUID"
				}
			],
			"scriptLines": [
				"parameters{",
				"     input_event_id as string ('1196'),",
				"     input_app_id as string ('133159590442264'),",
				"     Start_Date as string",
				"}",
				"source(output(",
				"          id as long,",
				"          app_id as long,",
				"          session_id as long,",
				"          visitor_id as long,",
				"          user_id as string,",
				"          member_id as string,",
				"          page_id as long,",
				"          title_id as long,",
				"          event_log_id as long,",
				"          event_id as integer,",
				"          sort as integer,",
				"          time_of_min as integer,",
				"          time_of_hour as integer,",
				"          time_of_day as long,",
				"          time_of_week as long,",
				"          time_of_month as long,",
				"          createtime as integer,",
				"          custom_field_1 as long,",
				"          custom_field_2 as long,",
				"          custom_field_3 as long,",
				"          custom_field_4 as long,",
				"          custom_field_5 as long,",
				"          custom_field_6 as long,",
				"          custom_field_7 as long,",
				"          custom_field_8 as long,",
				"          custom_field_9 as long,",
				"          custom_field_10 as long,",
				"          custom_field_11 as long,",
				"          custom_field_12 as long,",
				"          custom_field_13 as long,",
				"          custom_field_14 as long,",
				"          custom_field_15 as long,",
				"          custom_field_16 as long,",
				"          custom_field_17 as long,",
				"          custom_field_18 as long,",
				"          custom_field_19 as long,",
				"          custom_field_20 as long,",
				"          custom_field_21 as long,",
				"          custom_field_22 as long,",
				"          custom_field_23 as long,",
				"          custom_field_24 as long,",
				"          custom_field_25 as long,",
				"          custom_field_26 as long,",
				"          custom_field_27 as long,",
				"          custom_field_28 as long,",
				"          custom_field_29 as long,",
				"          custom_field_30 as long,",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     batchSize: 1000,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestRawMonEventUnionLog",
				"source(output(",
				"          id as long,",
				"          app_id as long,",
				"          session_id as long,",
				"          visitor_id as long,",
				"          user_id as string,",
				"          member_id as string,",
				"          host_id as long,",
				"          page_id as long,",
				"          title_id as long,",
				"          channel_id as integer,",
				"          share_id as long,",
				"          share_channel_id as integer,",
				"          share_from_user_id as string,",
				"          share_level as integer,",
				"          sort as integer,",
				"          duration as integer,",
				"          is_landing_page as integer,",
				"          is_exit_page as integer,",
				"          k_id as integer,",
				"          k_type as integer,",
				"          k_index as integer,",
				"          referrer_id as long,",
				"          time_of_min as integer,",
				"          time_of_hour as integer,",
				"          time_of_day as long,",
				"          time_of_week as long,",
				"          time_of_month as long,",
				"          createtime as integer,",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     batchSize: 10000,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestRawMonVisitLog",
				"source(output(",
				"          Customer_UID as string,",
				"          K11PRC_Member_ID as string,",
				"          Union_ID as string,",
				"          KDP_ID as string,",
				"          CL_ID as string,",
				"          KGO_ID as string,",
				"          New_KGO_ID as string,",
				"          manual_tag_id as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string,",
				"          Hashed_Member_ID as string,",
				"          Hashed_VIP_Code as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestCDMCUSTOMERMAPPING",
				"source(output(",
				"          App_Unique_ID as integer,",
				"          Account_ID as long,",
				"          App_ID as long,",
				"          Area_ID as integer,",
				"          App_Name as string,",
				"          App_Period as integer,",
				"          Start_Time as timestamp,",
				"          End_Time as timestamp,",
				"          Landing_Page_Url as string,",
				"          App_Budget as integer,",
				"          Event_Url as string,",
				"          App_Desc as string,",
				"          App_Status as integer,",
				"          Trigger_Switch as integer,",
				"          Debug_Switch as integer,",
				"          App_Create_Time as timestamp,",
				"          App_Update_Time as timestamp,",
				"          Coupon_Count as integer,",
				"          App_Type as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string,",
				"          BU_Source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestMonApp",
				"source(output(",
				"          id as long,",
				"          dim_key as string,",
				"          app_id as long,",
				"          event_id as integer,",
				"          param_id as integer,",
				"          value_id as long,",
				"          value as string,",
				"          status as integer,",
				"          createtime as integer,",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> ValueLog",
				"IngestRawMonEventUnionLog filter(toString(event_id)==$input_event_id && toString(app_id) == $input_app_id) ~> FilterEventID",
				"JoinValue, FilterVisit join(IngestRawMonEventUnionLog@session_id == IngestRawMonVisitLog@session_id",
				"     && IngestRawMonEventUnionLog@app_id == IngestRawMonVisitLog@app_id",
				"     && IngestRawMonEventUnionLog@visitor_id == IngestRawMonVisitLog@visitor_id",
				"     && IngestRawMonEventUnionLog@user_id == IngestRawMonVisitLog@user_id",
				"     && IngestRawMonEventUnionLog@page_id == IngestRawMonVisitLog@page_id",
				"     && IngestRawMonEventUnionLog@title_id == IngestRawMonVisitLog@title_id",
				"     && IngestRawMonEventUnionLog@member_id == IngestRawMonVisitLog@member_id",
				"     && IngestRawMonEventUnionLog@sort == IngestRawMonVisitLog@sort,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinMonVisitLog",
				"JoinMonVisitLog select(mapColumn(",
				"          id = IngestRawMonEventUnionLog@id,",
				"          Visit_ID = IngestRawMonVisitLog@id,",
				"          app_id = IngestRawMonEventUnionLog@app_id,",
				"          session_id = IngestRawMonEventUnionLog@session_id,",
				"          visitor_id = IngestRawMonEventUnionLog@visitor_id,",
				"          user_id = IngestRawMonEventUnionLog@user_id,",
				"          member_id = IngestRawMonEventUnionLog@member_id,",
				"          page_id = IngestRawMonEventUnionLog@page_id,",
				"          title_id = IngestRawMonEventUnionLog@title_id,",
				"          event_log_id,",
				"          event_id = IngestRawMonEventUnionLog@event_id,",
				"          sort = IngestRawMonEventUnionLog@sort,",
				"          time_of_min = IngestRawMonEventUnionLog@time_of_min,",
				"          time_of_hour = IngestRawMonEventUnionLog@time_of_hour,",
				"          time_of_day = IngestRawMonEventUnionLog@time_of_day,",
				"          time_of_week = IngestRawMonEventUnionLog@time_of_week,",
				"          time_of_month = IngestRawMonEventUnionLog@time_of_month,",
				"          createtime = IngestRawMonEventUnionLog@createtime,",
				"          View_Page = custom_field_1,",
				"          View_Page_Name = custom_field_2,",
				"          Area_ID = custom_field_5,",
				"          Product_SN = value,",
				"          Product_Channel = custom_field_7,",
				"          Land_Page = custom_field_9,",
				"          Land_Page_Time = custom_field_10,",
				"          duration,",
				"          is_landing_page,",
				"          is_exit_page,",
				"          channel_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropColumnFromMonVisitLog",
				"DropColumnFromMonVisitLog derive(Start_Date = toDate($Start_Date, 'yyyyMMdd'),",
				"          End_Date = toDate(toString(null())),",
				"          Is_Current = 1,",
				"          BU_Source = 'K11 PRC',",
				"          createtime = toTimestamp((toInteger(toString(createtime))+28800)*1000l,'yyyy-MM-dd HH:mm:ss'),",
				"          Land_Page_Time = toTimestamp((toInteger(toString(Land_Page_Time))+28800)*1000l,'yyyy-MM-dd HH:mm:ss'),",
				"          Visit_ID = iif(isNull(Visit_ID)==true(),0,toInteger(Visit_ID))) ~> AddColumn",
				"AddColumn, IngestCDMCUSTOMERMAPPING join(member_id == K11PRC_Member_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinCDMCUSTOMERMAPPING",
				"JoinCDMCUSTOMERMAPPING, IngestMonApp join(DropColumnFromMonVisitLog@app_id == IngestMonApp@App_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinMonApp",
				"JoinMonApp select(mapColumn(",
				"          id,",
				"          app_id = DropColumnFromMonVisitLog@app_id,",
				"          session_id,",
				"          visitor_id,",
				"          user_id,",
				"          member_id = Hashed_Member_ID,",
				"          page_id,",
				"          title_id,",
				"          event_log_id,",
				"          event_id,",
				"          sort,",
				"          time_of_min,",
				"          time_of_hour,",
				"          time_of_day,",
				"          time_of_week,",
				"          time_of_month,",
				"          createtime,",
				"          View_Page,",
				"          View_Page_Name,",
				"          Area_ID = DropColumnFromMonVisitLog@Area_ID,",
				"          Product_SN,",
				"          Product_Channel,",
				"          Land_Page,",
				"          Land_Page_Time,",
				"          duration,",
				"          is_landing_page,",
				"          is_exit_page,",
				"          Start_Date = AddColumn@Start_Date,",
				"          End_Date = AddColumn@End_Date,",
				"          Is_Current = AddColumn@Is_Current,",
				"          BU_Source = AddColumn@BU_Source,",
				"          Customer_UID,",
				"          K11PRC_Member_ID,",
				"          Union_ID,",
				"          KDP_ID,",
				"          CL_ID,",
				"          Start_Date = IngestCDMCUSTOMERMAPPING@Start_Date,",
				"          End_Date = IngestCDMCUSTOMERMAPPING@End_Date,",
				"          Is_Current = IngestCDMCUSTOMERMAPPING@Is_Current,",
				"          App_Name,",
				"          channel_id,",
				"          Visit_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropColumnFromMonApp",
				"DropColumnFromMonApp aggregate(groupBy(id,",
				"          app_id,",
				"          session_id,",
				"          visitor_id,",
				"          user_id,",
				"          member_id,",
				"          page_id,",
				"          title_id,",
				"          event_log_id,",
				"          event_id,",
				"          time_of_min,",
				"          time_of_hour,",
				"          time_of_day,",
				"          time_of_week,",
				"          time_of_month,",
				"          createtime,",
				"          View_Page,",
				"          View_Page_Name,",
				"          Area_ID,",
				"          Product_SN,",
				"          Product_Channel,",
				"          Land_Page,",
				"          is_landing_page,",
				"          is_exit_page,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current,",
				"          BU_Source,",
				"          Customer_UID,",
				"          App_Name,",
				"          Land_Page_Time,",
				"          channel_id,",
				"          Visit_ID),",
				"     count = count(),",
				"          duration = sum(duration)) ~> Dedup",
				"Dedup select(mapColumn(",
				"          id,",
				"          app_id,",
				"          session_id,",
				"          visitor_id,",
				"          user_id,",
				"          member_id,",
				"          page_id,",
				"          title_id,",
				"          event_log_id,",
				"          event_id,",
				"          time_of_min,",
				"          time_of_hour,",
				"          time_of_day,",
				"          time_of_week,",
				"          time_of_month,",
				"          createtime,",
				"          View_Page,",
				"          View_Page_Name,",
				"          Area_ID,",
				"          Product_SN,",
				"          Product_Channel,",
				"          Land_Page,",
				"          Land_Page_Time,",
				"          duration,",
				"          is_landing_page,",
				"          is_exit_page,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current,",
				"          BU_Source,",
				"          Customer_UID,",
				"          App_Name,",
				"          channel_id,",
				"          Visit_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropCount",
				"FilterEventID filter(toDate(Insert_Date)>=addDays(toDate(currentUTC()+hours(8)),0)) ~> FilterLatestUnion",
				"IngestRawMonVisitLog filter(toDate(Insert_Date)>=addDays(toDate(currentUTC()+hours(8)),0)) ~> FilterVisit",
				"FilterLatestUnion, DedupValue join(custom_field_6 == value_id",
				"     && IngestRawMonEventUnionLog@app_id == DedupValue@app_id",
				"     && IngestRawMonEventUnionLog@event_id == DedupValue@event_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinValue",
				"ValueLog aggregate(groupBy(app_id,",
				"          event_id,",
				"          value_id,",
				"          value),",
				"     count = count()) ~> DedupValue",
				"DropCount derive(Visit_ID = iif(isNull(Visit_ID)==true(),0,toInteger(Visit_ID))) ~> SetNullto0",
				"SetNullto0 derive(Browse_UID = concat(toString(id),toString(Visit_ID)),",
				"          null_string = toString(null())) ~> AddUID",
				"DropCount sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Browse_ID as long,",
				"          Customer_UID as string,",
				"          BU_Source as string,",
				"          Session_ID as long,",
				"          Page_ID as long,",
				"          Title_ID as long,",
				"          App_ID as long,",
				"          Visitor_ID as long,",
				"          User_ID as string,",
				"          Member_ID as string,",
				"          Event_Log_ID as long,",
				"          Event_ID as integer,",
				"          Create_Time as timestamp,",
				"          View_Page as long,",
				"          View_Page_Name as long,",
				"          Area_ID as long,",
				"          App_Name as string,",
				"          Product_SN as string,",
				"          Product_Channel as long,",
				"          Land_Page as long,",
				"          Is_Landing_Page as integer,",
				"          Land_Page_Time as timestamp,",
				"          Browse_Duration as long,",
				"          Is_Exit_Page as integer,",
				"          Start_Date as date,",
				"          End_Date as date,",
				"          Is_Current as integer,",
				"          Channel_ID as integer,",
				"          Visit_ID as long",
				"     ),",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Browse_ID = id,",
				"          Customer_UID,",
				"          BU_Source,",
				"          Session_ID = session_id,",
				"          Page_ID = page_id,",
				"          Title_ID = title_id,",
				"          App_ID = app_id,",
				"          Visitor_ID = visitor_id,",
				"          User_ID = user_id,",
				"          Member_ID = member_id,",
				"          Event_Log_ID = event_log_id,",
				"          Event_ID = event_id,",
				"          Create_Time = createtime,",
				"          View_Page,",
				"          View_Page_Name,",
				"          Area_ID,",
				"          App_Name,",
				"          Product_SN,",
				"          Product_Channel,",
				"          Land_Page,",
				"          Is_Landing_Page = is_landing_page,",
				"          Land_Page_Time,",
				"          Browse_Duration = duration,",
				"          Is_Exit_Page = is_exit_page,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current,",
				"          App_Name,",
				"          Channel_ID = channel_id,",
				"          Visit_ID",
				"     )) ~> SinkToProcessTable",
				"AddUID sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Browse_ID = id,",
				"          Customer_UID,",
				"          BU_Source,",
				"          App_ID = app_id,",
				"          App_Name,",
				"          Session_IS = session_id,",
				"          Visitor_ID = visitor_id,",
				"          User_ID = user_id,",
				"          Member_ID = member_id,",
				"          Page_ID = page_id,",
				"          Title_ID = title_id,",
				"          Event_Log_ID = event_log_id,",
				"          Event_ID = event_id,",
				"          Create_Time = createtime,",
				"          View_Page,",
				"          View_Page_Name,",
				"          Area_ID,",
				"          Product_SN,",
				"          Product_Channel,",
				"          Land_Page,",
				"          Land_Page_Time,",
				"          Browse_Duration = duration,",
				"          Is_Landing_Page = is_landing_page,",
				"          Is_Exit_Page = is_exit_page,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current,",
				"          Channel_ID = channel_id,",
				"          Visit_ID,",
				"          Browse_UID",
				"     )) ~> SinktoTempforSFTP"
			]
		}
	}
}