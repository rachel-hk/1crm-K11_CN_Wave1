{
	"name": "PUB_CDM_CUSTOMER_MAPPING_Old",
	"properties": {
		"folder": {
			"name": "Pub"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CDM_CUSTOMER_MAPPING",
						"type": "DatasetReference"
					},
					"name": "IngestionfromCDMCUSTOMERMAPPING"
				},
				{
					"dataset": {
						"referenceName": "raw_u_user_identity",
						"type": "DatasetReference"
					},
					"name": "ImportNewKGOMapping"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_PRO_CDM_CUSTOMER_MAPPING",
						"type": "DatasetReference"
					},
					"name": "SinktoPublishedTable",
					"description": "Export data to PUB_CDM_PERSONAL_PIPL"
				}
			],
			"transformations": [
				{
					"name": "FilterLatestData"
				},
				{
					"name": "JoinNewKGOMapping"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Customer_UID as string,",
				"          K11PRC_Member_ID as string,",
				"          Union_ID as string,",
				"          KDP_ID as string,",
				"          CL_ID as string,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestionfromCDMCUSTOMERMAPPING",
				"source(output(",
				"          id as long,",
				"          user_id as long,",
				"          identity_type_code as long,",
				"          pay_password as string,",
				"          pay_salt as string,",
				"          pay_salt_update_time as timestamp,",
				"          is_new_member as integer,",
				"          source_type as integer,",
				"          country as string,",
				"          province as string,",
				"          city as string,",
				"          subscribe as integer,",
				"          subscribe_time as timestamp,",
				"          personal_signature as string,",
				"          is_available as integer,",
				"          is_deleted as integer,",
				"          version_no as integer,",
				"          create_userid as long,",
				"          create_username as string,",
				"          create_usermac as string,",
				"          create_time as timestamp,",
				"          create_time_db as timestamp,",
				"          server_ip as string,",
				"          update_userid as long,",
				"          update_username as string,",
				"          update_userip as string,",
				"          update_usermac as string,",
				"          update_time as timestamp,",
				"          update_time_db as timestamp,",
				"          client_versionno as string,",
				"          company_id as long,",
				"          constellation as string,",
				"          education as string,",
				"          animal_sign as string,",
				"          signature as string,",
				"          shopping_guider_remark as string,",
				"          platform_remark as string,",
				"          bound_store_id as long,",
				"          bound_store_code as string,",
				"          bound_store_name as string,",
				"          create_userip as string,",
				"          member_type_id as long,",
				"          member_level_id as long,",
				"          card_id as string,",
				"          member_level_end_time as timestamp,",
				"          user_account_flow_id as long,",
				"          order_point_update_time as timestamp,",
				"          normal_invite_user_id as long,",
				"          u_employee_id as long,",
				"          u_employee_bind_time as timestamp,",
				"          mobile as string,",
				"          nickname as string,",
				"          email as string,",
				"          remarks as string,",
				"          sex as integer,",
				"          head_pic_url as string,",
				"          birthday as timestamp,",
				"          birthday_year as integer,",
				"          birthday_month as integer,",
				"          birthday_date as integer,",
				"          ext_field1 as string,",
				"          ext_field2 as string,",
				"          ext_field3 as string,",
				"          ext_field4 as string,",
				"          ext_field5 as string,",
				"          notify_type_exclude as string,",
				"          final_interests as binary,",
				"          has_update as integer,",
				"          identity_card_no as string,",
				"          identity_card_name as string,",
				"          identity_verify_status as integer,",
				"          identity_verify_failure_num as integer,",
				"          member_id as string,",
				"          member_code as string,",
				"          kdp_bind_status as integer,",
				"          kdp_member_id as string,",
				"          kdp_bind_time as timestamp,",
				"          mall_code as string,",
				"          fail_message as string,",
				"          wx_card_code as string,",
				"          wx_event_time as string,",
				"          wx_auth_type as string,",
				"          wx_auth_status as integer,",
				"          sync_crm_flag as integer,",
				"          new_invite as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ImportNewKGOMapping",
				"JoinNewKGOMapping filter(toDate(Start_Date)==currentDate()) ~> FilterLatestData",
				"IngestionfromCDMCUSTOMERMAPPING, ImportNewKGOMapping join(K11PRC_Member_ID == member_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinNewKGOMapping",
				"FilterLatestData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Customer_UID,",
				"          K11PRC_Member_ID,",
				"          Union_ID,",
				"          KDP_ID,",
				"          CL_ID,",
				"          New_KGO_ID = user_id,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current",
				"     )) ~> SinktoPublishedTable"
			]
		}
	}
}