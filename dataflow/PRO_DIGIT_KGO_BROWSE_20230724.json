{
	"name": "PRO_DIGIT_KGO_BROWSE_20230724",
	"properties": {
		"folder": {
			"name": "Pro"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "vw_latest_foot_step",
						"type": "DatasetReference"
					},
					"name": "IngestFootStep"
				},
				{
					"dataset": {
						"referenceName": "PUB_CDM_CUSTOMER_MAPPING",
						"type": "DatasetReference"
					},
					"name": "IngestCDMCUSTOMERMAPPING"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_PRO_DIGIT_KGO_BROWSE",
						"type": "DatasetReference"
					},
					"name": "SinkToDIGITSHOPCART",
					"rejectedDataLinkedService": {
						"referenceName": "1crmTagMgmtRawProd",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "AddColumn"
				},
				{
					"name": "JoinMapping"
				},
				{
					"name": "DropUnwantColumn"
				},
				{
					"name": "Dedup"
				},
				{
					"name": "DropCount"
				},
				{
					"name": "FilterLatest"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Start_Date as string",
				"}",
				"source(output(",
				"          id as long,",
				"          user_id as long,",
				"          domain_info_id as long,",
				"          parent_id as long,",
				"          mp_id as long,",
				"          merchant_id as long,",
				"          store_id as long,",
				"          browsing_time as timestamp,",
				"          platform_id as integer,",
				"          business_type as integer,",
				"          is_available as integer,",
				"          is_deleted as integer,",
				"          create_userid as long,",
				"          create_username as string,",
				"          create_time as timestamp,",
				"          create_time_db as timestamp,",
				"          server_ip as string,",
				"          update_userid as long,",
				"          update_username as string,",
				"          update_time as timestamp,",
				"          update_time_db as timestamp,",
				"          company_id as long,",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestFootStep",
				"source(output(",
				"          Customer_UID as string,",
				"          K11PRC_Member_ID as string,",
				"          Union_ID as string,",
				"          KDP_ID as string,",
				"          CL_ID as string,",
				"          KGO_ID as string,",
				"          New_KGO_ID as long,",
				"          manual_tag_id as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string,",
				"          Hashed_Member_ID as string,",
				"          Hashed_VIP_Code as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestCDMCUSTOMERMAPPING",
				"DropUnwantColumn derive(BU_Source = 'K11 PRC',",
				"          Start_Date = toDate($Start_Date, 'yyyyMMdd'),",
				"          End_Date = toTimestamp(toString(null())),",
				"          Is_Current = 1) ~> AddColumn",
				"FilterLatest, IngestCDMCUSTOMERMAPPING join(user_id == New_KGO_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinMapping",
				"JoinMapping select(mapColumn(",
				"          id,",
				"          user_id,",
				"          domain_info_id,",
				"          parent_id,",
				"          mp_id,",
				"          merchant_id,",
				"          store_id,",
				"          browsing_time,",
				"          platform_id,",
				"          business_type,",
				"          is_available,",
				"          is_deleted,",
				"          create_userid,",
				"          create_username,",
				"          create_time,",
				"          create_time_db,",
				"          server_ip,",
				"          update_userid,",
				"          update_username,",
				"          update_time,",
				"          update_time_db,",
				"          company_id,",
				"          File_Path,",
				"          Insert_Date,",
				"          Customer_UID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropUnwantColumn",
				"AddColumn aggregate(groupBy(id,",
				"          user_id,",
				"          domain_info_id,",
				"          parent_id,",
				"          mp_id,",
				"          merchant_id,",
				"          store_id,",
				"          browsing_time,",
				"          platform_id,",
				"          business_type,",
				"          is_available,",
				"          is_deleted,",
				"          create_userid,",
				"          create_username,",
				"          create_time,",
				"          create_time_db,",
				"          server_ip,",
				"          update_userid,",
				"          update_username,",
				"          update_time,",
				"          update_time_db,",
				"          company_id,",
				"          Customer_UID,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current,",
				"          BU_Source),",
				"     count = count()) ~> Dedup",
				"Dedup select(mapColumn(",
				"          id,",
				"          user_id,",
				"          domain_info_id,",
				"          parent_id,",
				"          mp_id,",
				"          merchant_id,",
				"          store_id,",
				"          browsing_time,",
				"          platform_id,",
				"          business_type,",
				"          is_available,",
				"          is_deleted,",
				"          create_userid,",
				"          create_username,",
				"          create_time,",
				"          create_time_db,",
				"          server_ip,",
				"          update_userid,",
				"          update_time,",
				"          update_time_db,",
				"          company_id,",
				"          Customer_UID,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current,",
				"          BU_Source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropCount",
				"IngestFootStep filter(toDate(Insert_Date)==addDays(currentDate(),-1)) ~> FilterLatest",
				"DropCount sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Browse_ID = id,",
				"          Customer_UID,",
				"          BU_Source,",
				"          Platform_ID = platform_id,",
				"          User_ID = user_id,",
				"          Domain_Info_ID = domain_info_id,",
				"          Parent_ID = parent_id,",
				"          Mp_ID = mp_id,",
				"          Merchant_ID = merchant_id,",
				"          Store_ID = store_id,",
				"          Browsing_Time = browsing_time,",
				"          Business_Type = business_type,",
				"          Is_Available = is_available,",
				"          Is_Deleted = is_deleted,",
				"          Create_Time = create_time,",
				"          Create_Time_Db = create_time_db,",
				"          Update_Time = update_time,",
				"          Update_Time_Db = update_time_db,",
				"          Company_ID = company_id,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current",
				"     )) ~> SinkToDIGITSHOPCART"
			]
		}
	}
}