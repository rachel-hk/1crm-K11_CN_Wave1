{
	"name": "PUB_TRAN_GIFT_RECORD",
	"properties": {
		"folder": {
			"name": "Pub"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TRAN_GIFT_RECORD",
						"type": "DatasetReference"
					},
					"name": "IngestionfromTRANGIFTRECORD"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "PUB_TRAN_GIFT_RECORD",
						"type": "DatasetReference"
					},
					"name": "SinktoPublishedTable",
					"description": "Export data to PUB_CDM_PERSONAL_PIPL"
				}
			],
			"transformations": [
				{
					"name": "FilterLatestData"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Gift_ID as integer,",
				"          Customer_UID as string,",
				"          Account_ID as integer,",
				"          Customer_ID as string,",
				"          BU_Source as string,",
				"          Tier_ID as integer,",
				"          Exchange_No as string,",
				"          Gift_Cate as integer,",
				"          Event_Code as string,",
				"          Event_Name as string,",
				"          Gift_Type as integer,",
				"          Gift_Code as string,",
				"          Gift_Name as string,",
				"          Coupon_ID as string,",
				"          Parti_Amount as decimal(18,0),",
				"          Gift_Quan as integer,",
				"          Exchange_Time as integer,",
				"          Gift_Amount as decimal(18,0),",
				"          Is_Master as integer,",
				"          Gift_Status as integer,",
				"          Gift_Remark as string,",
				"          From_Fz as integer,",
				"          Create_At as timestamp,",
				"          Update_At as timestamp,",
				"          Is_Deleted as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestionfromTRANGIFTRECORD",
				"IngestionfromTRANGIFTRECORD filter(toDate(Start_Date)==currentDate()) ~> FilterLatestData",
				"FilterLatestData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Gift_ID as integer,",
				"          Customer_UID as string,",
				"          Account_ID as integer,",
				"          Customer_ID as string,",
				"          BU_Source as string,",
				"          Tier_ID as integer,",
				"          Exchange_No as string,",
				"          Gift_Cate as integer,",
				"          Event_Code as string,",
				"          Event_Name as string,",
				"          Gift_Type as integer,",
				"          Gift_Code as string,",
				"          Gift_Name as string,",
				"          Coupon_ID as string,",
				"          Parti_Amount as decimal(18,0),",
				"          Gift_Quan as integer,",
				"          Exchange_Time as timestamp,",
				"          Gift_Amount as decimal(18,0),",
				"          Is_Master as integer,",
				"          Gift_Status as integer,",
				"          Gift_Remark as string,",
				"          From_Fz as integer,",
				"          Create_At as timestamp,",
				"          Update_At as timestamp,",
				"          Is_Deleted as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: false,",
				"     preSQLs:['DELETE FROM TRAN_GIFT_RECORD WHERE Start_Date = FORMAT(GetDate(), \\'yyyy-MM-dd\\');'],",
				"     postSQLs:['WITH TEMP AS (\\nSELECT [Gift_ID], ROW_NUMBER() OVER (PARTITION BY \\n[Customer_UID]\\n,[Account_ID]\\n,[Customer_ID]\\n,[BU_Source]\\n,[Tier_ID]\\n,[Exchange_No]\\n,[Gift_Cate]\\n,[Event_Code]\\n,[Event_Name]\\n,[Gift_Type]\\n,[Gift_Code]\\n,[Gift_Name]\\n,[Coupon_ID]\\n,[Parti_Amount]\\n,[Gift_Quan]\\n,[Exchange_Time]\\n,[Gift_Amount]\\n,[Is_Master]\\n,[Gift_Status]\\n,[Gift_Remark]\\n,[From_Fz]\\n,[Create_At]\\n,[Update_At]\\n,[Is_Deleted] ORDER BY Start_Date DESC) AS SEQUENCE \\n FROM [dbo].[TRAN_GIFT_RECORD])\\n\\nDelete from [TRAN_GIFT_RECORD] where CONCAT([Gift_ID],START_DATE) in (select CONCAT([Gift_ID],START_DATE) from TEMP where SEQUENCE > 1);'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Gift_ID,",
				"          Customer_UID,",
				"          Account_ID,",
				"          Customer_ID,",
				"          BU_Source,",
				"          Tier_ID,",
				"          Exchange_No,",
				"          Gift_Cate,",
				"          Event_Code,",
				"          Event_Name,",
				"          Gift_Type,",
				"          Gift_Code,",
				"          Gift_Name,",
				"          Coupon_ID,",
				"          Parti_Amount,",
				"          Gift_Quan,",
				"          Exchange_Time,",
				"          Gift_Amount,",
				"          Is_Master,",
				"          Gift_Status,",
				"          Gift_Remark,",
				"          From_Fz,",
				"          Create_At,",
				"          Update_At,",
				"          Is_Deleted,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current",
				"     )) ~> SinktoPublishedTable"
			]
		}
	}
}