{
	"name": "SFMC_SHAREABLE_TAG",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "GROUP_AUTO_TAG_parquet_in",
						"type": "DatasetReference"
					},
					"name": "SHAREABLEAUTOTAG"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_GROUP_AUTO_TAG",
						"type": "DatasetReference"
					},
					"name": "SinkToParquet"
				}
			],
			"transformations": [
				{
					"name": "PivotTag"
				},
				{
					"name": "FixPipe"
				},
				{
					"name": "AddK11CustomerUID"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Customer_UID as string,",
				"          Member_ID as string,",
				"          Tag_Name as string,",
				"          Tag_Value as string,",
				"          Tag_Type as string,",
				"          Tag_Category as string,",
				"          Updated_Date as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SHAREABLEAUTOTAG",
				"select1 pivot(groupBy(Customer_UID,",
				"          Member_ID,",
				"          Union_ID),",
				"     pivotBy(Tag_Name),",
				"     {} = max(Tag_Value),",
				"     columnNaming: '$V$N',",
				"     lateral: false) ~> PivotTag",
				"AddK11CustomerUID derive(Tag_Value = replace(Tag_Value,\"|\",\"'\\'|\"),",
				"          Union_ID = toString(null()),",
				"          null_string = toString(null())) ~> FixPipe",
				"SHAREABLEAUTOTAG derive(K11_Customer_UID = concat('K11PRC',Member_ID)) ~> AddK11CustomerUID",
				"FixPipe select(mapColumn(",
				"          ID = null_string,",
				"          Member_ID,",
				"          Union_ID,",
				"          BU_Source = null_string,",
				"          Tag_Name,",
				"          Tag_Value,",
				"          Tag_Type,",
				"          Tag_Scope = null_string,",
				"          Updated_Date,",
				"          Customer_UID = K11_Customer_UID",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> select1",
				"PivotTag sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Customer_UID as string,",
				"          Member_ID as string,",
				"          Union_ID as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Art_Design} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Beauty} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Dining} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Dressing} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Fashion} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Health_Wellness} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Investment} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Jewelry} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Property} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Shopping} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Sports} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Travel} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Watches} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Wine} as string,",
				"          {FACT_BASIC_DEMO_OCCUPATION.Com_District} as string,",
				"          {FACT_BASIC_DEMO_OCCUPATION.Member_Occupation} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Age_Range} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Birth_Month} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Chinese_Tourist} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Edu_level} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Gender} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Res_City} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Res_District} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Res_Province} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Res_Region} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Whether_driver} as string,",
				"          {FACT_BASIC_SOCIAL_FAMILY.Marriage_Status} as string,",
				"          {FACT_BASIC_SOCIAL_FAMILY.Number_of_Kids} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Member_Tier_K11} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_Artus} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_BabyKingdom} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_Dpark} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_FTLife} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_FreeDuty} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_GTA} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_HKTicketing} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_Humansa} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_Humansa_Noah} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_KLUB_11_HK} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_KLUB_11_PRC} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_NWC} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_NWCL} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_NWDS} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_PassageN} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Source_NWC} as string,",
				"          {FACT_MEMBER_REGIST_PROG.MAtelier_Customer} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_Artists_club} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_Artus} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_BabyKingdom} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_CTF_Edu_Group} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_Dmind} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_Dpark} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_FTLife} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_FreeDuty} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_GTA} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_HKTicketing} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_KLUB_11_HK} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_KLUB_11_PRC} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_NWC} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_NWCL} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_NWDS} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_PassageN} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_Prog} as string,",
				"          {FACT_MEMBER_REGIST_PROG.No_Member_Prog_Joined} as string,",
				"          {FACT_MEMBER_TIER.Member_Tier_NWC} as string,",
				"          {FACT_MEMBER_TIER.Member_Tier_NWCL} as string,",
				"          {FACT_PROP_RES_ASSET.No_Res_Prop} as string,",
				"          {FACT_PROP_RES_ASSET.Purchase_Type_Prop1} as string,",
				"          {FACT_PROP_VEHICLE.Whether_Carpark_User} as string,",
				"          {FACT_PROP_VEHICLE.Whether_Has_Car} as string",
				"     ),",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SinkToParquet"
			]
		}
	}
}