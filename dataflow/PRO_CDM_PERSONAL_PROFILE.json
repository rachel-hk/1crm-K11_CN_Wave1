{
	"name": "PRO_CDM_PERSONAL_PROFILE",
	"properties": {
		"folder": {
			"name": "Pro"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "PRE_CDM_PERSONAL_PROFILE",
						"type": "DatasetReference"
					},
					"name": "IngestPRECDMPERSONALPROFILE"
				},
				{
					"dataset": {
						"referenceName": "PUB_CDM_PERSONAL_PROFILE",
						"type": "DatasetReference"
					},
					"name": "ExistingCDMPERSONALPROFILE"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_PRO_CDM_PERSONAL_PROFILE",
						"type": "DatasetReference"
					},
					"name": "CDMCUSTOMERPROFILESink"
				}
			],
			"transformations": [
				{
					"name": "AddHashInput"
				},
				{
					"name": "AddHashExisting"
				},
				{
					"name": "FilterForActive"
				},
				{
					"name": "AddKey"
				},
				{
					"name": "NewAndUpdated"
				},
				{
					"name": "JoinWithMaxSurrogateKey"
				},
				{
					"name": "GetMaxSurrogateKey"
				},
				{
					"name": "FilterForUpdated"
				},
				{
					"name": "AddDimensionColumn"
				},
				{
					"name": "DropUnwantedColsInput"
				},
				{
					"name": "MarkAsInsert"
				},
				{
					"name": "UnionAllData"
				},
				{
					"name": "UpdateObsolete"
				},
				{
					"name": "MarkAsUpdate"
				},
				{
					"name": "DropUnwantedColumn"
				},
				{
					"name": "FilterNullCustomerUID"
				},
				{
					"name": "Dedup"
				},
				{
					"name": "DropCount"
				}
			],
			"scriptLines": [
				"parameters{",
				"     PrimaryKey as string (Customer_UID),",
				"     Columns as string ('Year_Income,Tel_No,Level_Name,Res_Zone,Res_Province,Res_Country,Res_City,Res_Address,Reg_Sub_Origin,Reg_Origin,Prefer_language,Phone_No,Phone_Code,Person_Zip,Person_Weibo,Person_Title,Person_Status,Person_Religion,Person_QQ,Person_Phone2,Person_Job,Person_Industry,Person_Hobby,Person_Gender,Person_Ethnic,Person_Email,Person_Company,Person_Birthday,Person_Address3,Person_Address2,Nick_Name,Name_En,Name_Cn,Month_Income,License_Plate,Level_ID,Issue_At,Is_Special_Level,Is_Marry,Is_Mail_Market,Fav_Prod,Fav_Item,Family_Monthly_Income,Expire_At,Edu_Level,Cycle_At,Company_Size,Birthday_Short,Area_ID,Is_Deleted')",
				"}",
				"source(output(",
				"          Customer_UID as string,",
				"          Personal_Customer_ID as string,",
				"          Area_ID as integer,",
				"          BU_Source as string,",
				"          Name_Cn as string,",
				"          Nick_Name as string,",
				"          Name_En as string,",
				"          Person_Title as string,",
				"          Phone_No as string,",
				"          Phone_Code as string,",
				"          Tel_No as string,",
				"          Level_ID as integer,",
				"          Level_Name as string,",
				"          Is_Special_Level as integer,",
				"          Union_ID as string,",
				"          Is_Marry as integer,",
				"          Expire_At as timestamp,",
				"          Cycle_At as timestamp,",
				"          Issue_At as timestamp,",
				"          Person_Status as integer,",
				"          Res_Zone as string,",
				"          Res_City as string,",
				"          Res_Province as string,",
				"          Res_Country as string,",
				"          Res_Address as string,",
				"          Person_Zip as string,",
				"          Person_Gender as integer,",
				"          Person_Birthday as timestamp,",
				"          Birthday_Short as timestamp,",
				"          Fav_Prod as string,",
				"          Person_Hobby as string,",
				"          Fav_Item as string,",
				"          Month_Income as integer,",
				"          Year_Income as integer,",
				"          Family_Monthly_Income as integer,",
				"          Person_Address2 as string,",
				"          Person_Address3 as string,",
				"          Person_Phone2 as string,",
				"          Person_Email as string,",
				"          Person_QQ as string,",
				"          Person_Weibo as string,",
				"          Person_Company as string,",
				"          Person_Industry as string,",
				"          Person_Job as string,",
				"          Is_Mail_Market as string,",
				"          Company_Size as integer,",
				"          Edu_Level as string,",
				"          Reg_Origin as integer,",
				"          Reg_Sub_Origin as integer,",
				"          License_Plate as string,",
				"          Prefer_language as long,",
				"          Person_Religion as string,",
				"          Person_Ethnic as string,",
				"          Is_Deleted as integer,",
				"          Start_Date as timestamp,",
				"          Reg_at as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestPRECDMPERSONALPROFILE",
				"source(output(",
				"          Customer_UID as string,",
				"          Personal_Customer_ID as string,",
				"          Area_ID as integer,",
				"          BU_Source as string,",
				"          Name_Cn as string,",
				"          Nick_Name as string,",
				"          Name_En as string,",
				"          Person_Title as string,",
				"          Phone_No as string,",
				"          Phone_Code as string,",
				"          Tel_No as string,",
				"          Level_ID as integer,",
				"          Level_Name as string,",
				"          Is_Special_Level as integer,",
				"          Union_ID as string,",
				"          Is_Marry as integer,",
				"          Expire_At as timestamp,",
				"          Cycle_At as timestamp,",
				"          Issue_At as timestamp,",
				"          Person_Status as integer,",
				"          Res_Zone as string,",
				"          Res_City as string,",
				"          Res_Province as string,",
				"          Res_Country as string,",
				"          Res_Address as string,",
				"          Person_Zip as string,",
				"          Person_Gender as integer,",
				"          Person_Birthday as timestamp,",
				"          Birthday_Short as timestamp,",
				"          Fav_Prod as string,",
				"          Person_Hobby as string,",
				"          Fav_Item as string,",
				"          Month_Income as integer,",
				"          Year_Income as integer,",
				"          Family_Monthly_Income as integer,",
				"          Person_Address2 as string,",
				"          Person_Address3 as string,",
				"          Person_Phone2 as string,",
				"          Person_Email as string,",
				"          Person_QQ as string,",
				"          Person_Weibo as string,",
				"          Person_Company as string,",
				"          Person_Industry as string,",
				"          Person_Job as string,",
				"          Is_Mail_Market as string,",
				"          Company_Size as integer,",
				"          Edu_Level as string,",
				"          Reg_Origin as integer,",
				"          Reg_Sub_Origin as integer,",
				"          License_Plate as string,",
				"          Prefer_language as long,",
				"          Person_Religion as string,",
				"          Person_Ethnic as string,",
				"          Is_Deleted as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> ExistingCDMPERSONALPROFILE",
				"IngestPRECDMPERSONALPROFILE derive(id_hash = $PrimaryKey,",
				"          column_hash = md5(byNames(split($Columns,',')))) ~> AddHashInput",
				"FilterForActive derive(id_hash = $PrimaryKey,",
				"          column_hash = md5(byNames(split($Columns,',')))) ~> AddHashExisting",
				"ExistingCDMPERSONALPROFILE filter(toInteger(byName('Is_Current')) ==1) ~> FilterForActive",
				"NewAndUpdated keyGenerate(output(SGKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> AddKey",
				"AddHashInput, AddHashExisting exists(AddHashInput@id_hash == AddHashExisting@id_hash",
				"     && AddHashInput@column_hash == AddHashExisting@column_hash,",
				"     negate:true,",
				"     broadcast: 'auto')~> NewAndUpdated",
				"AddKey, GetMaxSurrogateKey join(AddHashInput@id_hash == GetMaxSurrogateKey@id_hash,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinWithMaxSurrogateKey",
				"AddHashExisting aggregate(groupBy(id_hash),",
				"     MaxSurrogateKey = max(toInteger(byName('SGKey')))) ~> GetMaxSurrogateKey",
				"AddHashExisting, NewAndUpdated exists(AddHashExisting@id_hash == AddHashInput@id_hash,",
				"     negate:false,",
				"     broadcast: 'auto')~> FilterForUpdated",
				"JoinWithMaxSurrogateKey derive(SGKey = SGKey+iifNull(MaxSurrogateKey,0),",
				"          Start_Date = Start_Date,",
				"          Is_Current = 1,",
				"          End_Date = toTimestamp(toString(null()))) ~> AddDimensionColumn",
				"AddDimensionColumn select(mapColumn(",
				"          Customer_UID,",
				"          Personal_Customer_ID,",
				"          Area_ID,",
				"          BU_Source,",
				"          Name_Cn,",
				"          Nick_Name,",
				"          Name_En,",
				"          Person_Title,",
				"          Phone_No,",
				"          Phone_Code,",
				"          Tel_No,",
				"          Level_ID,",
				"          Level_Name,",
				"          Is_Special_Level,",
				"          Union_ID,",
				"          Is_Marry,",
				"          Expire_At,",
				"          Cycle_At,",
				"          Issue_At,",
				"          Reg_at,",
				"          Person_Status,",
				"          Res_Zone,",
				"          Res_City,",
				"          Res_Province,",
				"          Res_Country,",
				"          Res_Address,",
				"          Person_Zip,",
				"          Person_Gender,",
				"          Person_Birthday,",
				"          Birthday_Short,",
				"          Fav_Prod,",
				"          Person_Hobby,",
				"          Fav_Item,",
				"          Month_Income,",
				"          Year_Income,",
				"          Family_Monthly_Income,",
				"          Person_Address2,",
				"          Person_Address3,",
				"          Person_Phone2,",
				"          Person_Email,",
				"          Person_QQ,",
				"          Person_Weibo,",
				"          Person_Company,",
				"          Person_Industry,",
				"          Person_Job,",
				"          Is_Mail_Market,",
				"          Company_Size,",
				"          Edu_Level,",
				"          Reg_Origin,",
				"          Reg_Sub_Origin,",
				"          License_Plate,",
				"          Prefer_language,",
				"          Person_Religion,",
				"          Person_Ethnic,",
				"          Is_Deleted,",
				"          Start_Date,",
				"          id_hash = AddHashInput@id_hash,",
				"          column_hash,",
				"          SGKey,",
				"          id_hash = GetMaxSurrogateKey@id_hash,",
				"          MaxSurrogateKey,",
				"          Is_Current,",
				"          End_Date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropUnwantedColsInput",
				"DropUnwantedColsInput alterRow(insertIf(true())) ~> MarkAsInsert",
				"MarkAsInsert, DropUnwantedColumn union(byName: true)~> UnionAllData",
				"FilterForUpdated derive(Is_Current = 0,",
				"          End_Date = currentUTC()) ~> UpdateObsolete",
				"UpdateObsolete alterRow(updateIf(true())) ~> MarkAsUpdate",
				"MarkAsUpdate select(mapColumn(",
				"          Customer_UID,",
				"          Personal_Customer_ID,",
				"          Area_ID,",
				"          BU_Source,",
				"          Name_Cn,",
				"          Nick_Name,",
				"          Name_En,",
				"          Person_Title,",
				"          Phone_No,",
				"          Phone_Code,",
				"          Tel_No,",
				"          Level_ID,",
				"          Level_Name,",
				"          Is_Special_Level,",
				"          Union_ID,",
				"          Is_Marry,",
				"          Expire_At,",
				"          Cycle_At,",
				"          Issue_At,",
				"          Person_Status,",
				"          Res_Zone,",
				"          Res_City,",
				"          Res_Province,",
				"          Res_Country,",
				"          Res_Address,",
				"          Person_Zip,",
				"          Person_Gender,",
				"          Person_Birthday,",
				"          Birthday_Short,",
				"          Fav_Prod,",
				"          Person_Hobby,",
				"          Fav_Item,",
				"          Month_Income,",
				"          Year_Income,",
				"          Family_Monthly_Income,",
				"          Person_Address2,",
				"          Person_Address3,",
				"          Person_Phone2,",
				"          Person_Email,",
				"          Person_QQ,",
				"          Person_Weibo,",
				"          Person_Company,",
				"          Person_Industry,",
				"          Person_Job,",
				"          Is_Mail_Market,",
				"          Company_Size,",
				"          Edu_Level,",
				"          Reg_Origin,",
				"          Reg_Sub_Origin,",
				"          License_Plate,",
				"          Prefer_language,",
				"          Person_Religion,",
				"          Person_Ethnic,",
				"          Is_Deleted,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current,",
				"          id_hash,",
				"          column_hash",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropUnwantedColumn",
				"UnionAllData filter(isNull(byName('Customer_UID'))==false()) ~> FilterNullCustomerUID",
				"FilterNullCustomerUID aggregate(groupBy(Customer_UID,",
				"          Personal_Customer_ID,",
				"          Area_ID,",
				"          BU_Source,",
				"          Name_Cn,",
				"          Nick_Name,",
				"          Name_En,",
				"          Person_Title,",
				"          Phone_No,",
				"          Phone_Code,",
				"          Tel_No,",
				"          Level_ID,",
				"          Level_Name,",
				"          Is_Special_Level,",
				"          Union_ID,",
				"          Is_Marry,",
				"          Expire_At,",
				"          Cycle_At,",
				"          Issue_At,",
				"          Reg_at,",
				"          Person_Status,",
				"          Res_Zone,",
				"          Res_City,",
				"          Res_Province,",
				"          Res_Country,",
				"          Res_Address,",
				"          Person_Zip,",
				"          Person_Gender,",
				"          Person_Birthday,",
				"          Birthday_Short,",
				"          Fav_Prod,",
				"          Person_Hobby,",
				"          Fav_Item,",
				"          Month_Income,",
				"          Year_Income,",
				"          Family_Monthly_Income,",
				"          Person_Address2,",
				"          Person_Address3,",
				"          Person_Phone2,",
				"          Person_Email,",
				"          Person_QQ,",
				"          Person_Weibo,",
				"          Person_Company,",
				"          Person_Industry,",
				"          Person_Job,",
				"          Is_Mail_Market,",
				"          Company_Size,",
				"          Edu_Level,",
				"          Reg_Origin,",
				"          Reg_Sub_Origin,",
				"          License_Plate,",
				"          Prefer_language,",
				"          Person_Religion,",
				"          Person_Ethnic,",
				"          Is_Deleted,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current),",
				"     count = count()) ~> Dedup",
				"Dedup select(mapColumn(",
				"          Customer_UID,",
				"          Personal_Customer_ID,",
				"          Area_ID,",
				"          BU_Source,",
				"          Name_Cn,",
				"          Nick_Name,",
				"          Name_En,",
				"          Person_Title,",
				"          Phone_No,",
				"          Phone_Code,",
				"          Tel_No,",
				"          Level_ID,",
				"          Level_Name,",
				"          Is_Special_Level,",
				"          Union_ID,",
				"          Is_Marry,",
				"          Expire_At,",
				"          Cycle_At,",
				"          Issue_At,",
				"          Reg_at,",
				"          Person_Status,",
				"          Res_Zone,",
				"          Res_City,",
				"          Res_Province,",
				"          Res_Country,",
				"          Res_Address,",
				"          Person_Zip,",
				"          Person_Gender,",
				"          Person_Birthday,",
				"          Birthday_Short,",
				"          Fav_Prod,",
				"          Person_Hobby,",
				"          Fav_Item,",
				"          Month_Income,",
				"          Year_Income,",
				"          Family_Monthly_Income,",
				"          Person_Address2,",
				"          Person_Address3,",
				"          Person_Phone2,",
				"          Person_Email,",
				"          Person_QQ,",
				"          Person_Weibo,",
				"          Person_Company,",
				"          Person_Industry,",
				"          Person_Job,",
				"          Is_Mail_Market,",
				"          Company_Size,",
				"          Edu_Level,",
				"          Reg_Origin,",
				"          Reg_Sub_Origin,",
				"          License_Plate,",
				"          Prefer_language,",
				"          Person_Religion,",
				"          Person_Ethnic,",
				"          Is_Deleted,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropCount",
				"DropCount sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Customer_UID,",
				"          Personal_Customer_ID,",
				"          Area_ID,",
				"          BU_Source,",
				"          Name_Cn,",
				"          Nick_Name,",
				"          Name_En,",
				"          Person_Title,",
				"          Phone_No,",
				"          Phone_Code,",
				"          Tel_No,",
				"          Level_ID,",
				"          Is_Special_Level,",
				"          Union_ID,",
				"          Is_Marry,",
				"          Expire_At,",
				"          Cycle_At,",
				"          Issue_At,",
				"          Reg_at,",
				"          Person_Status,",
				"          Res_Zone,",
				"          Res_City,",
				"          Res_Province,",
				"          Res_Country,",
				"          Res_Address,",
				"          Person_Zip,",
				"          Person_Gender,",
				"          Person_Birthday,",
				"          Birthday_Short,",
				"          Fav_Prod,",
				"          Person_Hobby,",
				"          Fav_Item,",
				"          Month_Income,",
				"          Year_Income,",
				"          Family_Monthly_Income,",
				"          Person_Address2,",
				"          Person_Address3,",
				"          Person_Phone2,",
				"          Person_Email,",
				"          Person_QQ,",
				"          Person_Weibo,",
				"          Person_Company,",
				"          Person_Industry,",
				"          Person_Job,",
				"          Is_Mail_Market,",
				"          Company_Size,",
				"          Edu_Level,",
				"          Reg_Origin,",
				"          Reg_Sub_Origin,",
				"          License_Plate,",
				"          Prefer_language,",
				"          Person_Religion,",
				"          Person_Ethnic,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current,",
				"          Level_Name,",
				"          Is_Deleted",
				"     ),",
				"     partitionBy('roundRobin', 5)) ~> CDMCUSTOMERPROFILESink"
			]
		}
	}
}