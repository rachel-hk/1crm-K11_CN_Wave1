{
	"name": "PUB_TRAN_ORDER",
	"properties": {
		"folder": {
			"name": "Pub"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TRAN_ORDER",
						"type": "DatasetReference"
					},
					"name": "IngestionfromTRANORDER"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_PUB_TRAN_ORDER",
						"type": "DatasetReference"
					},
					"name": "SinktoPublishedTable",
					"description": "Export data to PUB_CDM_PERSONAL_PIPL"
				}
			],
			"transformations": [
				{
					"name": "FilterLatestData"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Order_SID as integer,",
				"          Order_Code as string,",
				"          Customer_UID as string,",
				"          Member_ID as string,",
				"          BU_Source as string,",
				"          Union_ID as string,",
				"          Tier_ID as integer,",
				"          Special_Tier_ID as integer,",
				"          Provider_Key as string,",
				"          Trans_Channel as integer,",
				"          Special_Level_Time as timestamp,",
				"          Order_Channel as string,",
				"          Area_ID as integer,",
				"          Origin_Order_Code as string,",
				"          Origin_Parent_Order_Code as string,",
				"          Wechat_Pay_Code as string,",
				"          Store_Code as string,",
				"          Store_Name as string,",
				"          Origin_Amount as decimal(18,4),",
				"          Not_Discount_Amount as decimal(18,4),",
				"          Sales_Amount as decimal(18,4),",
				"          Real_Amount as decimal(18,4),",
				"          Kpoint_Amount as decimal(18,4),",
				"          GV_Amount as decimal(18,4),",
				"          Bonus_Point as integer,",
				"          Bonus_Type as string,",
				"          Order_At as timestamp,",
				"          Order_Source as integer,",
				"          Order_Status as integer,",
				"          Cancel_At as timestamp,",
				"          Order_Remark as string,",
				"          Return_Amount as decimal(18,4),",
				"          Return_Bonus_Point as integer,",
				"          Central_Store_Code as string,",
				"          Online_Type as string,",
				"          KPos_Input as integer,",
				"          Order_Prom_Discount as decimal(18,4),",
				"          Order_Delivery_Fee as decimal(18,4),",
				"          Pay_Type as string,",
				"          Used_Kpoint as integer,",
				"          Prom_ID as integer,",
				"          Prom_Name as string,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestionfromTRANORDER",
				"IngestionfromTRANORDER filter(toDate(Start_Date)==currentDate()) ~> FilterLatestData",
				"FilterLatestData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Order_Code,",
				"          Customer_UID,",
				"          Member_ID,",
				"          BU_Source,",
				"          Tier_ID,",
				"          Special_Tier_ID,",
				"          Provider_Key,",
				"          Trans_Channel,",
				"          Special_Level_Time,",
				"          Order_Channel,",
				"          Area_ID,",
				"          Union_ID,",
				"          Origin_Order_Code,",
				"          Origin_Parent_Order_Code,",
				"          Wechat_Pay_Code,",
				"          Store_Code,",
				"          Store_Name,",
				"          Origin_Amount,",
				"          Not_Discount_Amount,",
				"          Sales_Amount,",
				"          Real_Amount,",
				"          Kpoint_Amount,",
				"          GV_Amount,",
				"          Bonus_Point,",
				"          Bonus_Type,",
				"          Order_At,",
				"          Order_Source,",
				"          Order_Status,",
				"          Order_Remark,",
				"          Return_Amount,",
				"          Return_Bonus_Point,",
				"          Central_Store_Code,",
				"          Online_Type,",
				"          KPos_Input,",
				"          Order_Prom_Discount,",
				"          Order_Delivery_Fee,",
				"          Pay_Type,",
				"          Used_Kpoint,",
				"          Prom_ID,",
				"          Prom_Name,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current,",
				"          Order_SID,",
				"          Cancel_At",
				"     )) ~> SinktoPublishedTable"
			]
		}
	}
}