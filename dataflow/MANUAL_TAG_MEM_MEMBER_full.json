{
	"name": "MANUAL_TAG_MEM_MEMBER_full",
	"properties": {
		"description": "toDate(Start_Date) == addDays(currentDate(),0)",
		"folder": {
			"name": "Manual_Tag"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "PUB_vw_CDM_PERSONAL_PROFILE",
						"type": "DatasetReference"
					},
					"name": "IngestCDMPERSONALPROFILE"
				},
				{
					"dataset": {
						"referenceName": "PUB_vw_CDM_PERSONAL_PROFILE_EXTRA",
						"type": "DatasetReference"
					},
					"name": "IngestCDMPERSONALPROFILEEXTRA"
				},
				{
					"dataset": {
						"referenceName": "CDM_PERSONAL_PIPL",
						"type": "DatasetReference"
					},
					"name": "IngestCDMPERSONALPIPL"
				},
				{
					"dataset": {
						"referenceName": "PUB_vw_CDM_TIER_UPGRADE",
						"type": "DatasetReference"
					},
					"name": "IngestCDMTIERUPGRADE"
				},
				{
					"dataset": {
						"referenceName": "PUB_REF_AREA",
						"type": "DatasetReference"
					},
					"name": "IngestREFAREA"
				},
				{
					"dataset": {
						"referenceName": "PUB_CDM_CUSTOMER_MAPPING",
						"type": "DatasetReference"
					},
					"name": "IngestCDMCUSTOMERMAPPING"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_MANUAL_TAG_MEM_MEMBER",
						"type": "DatasetReference"
					},
					"name": "SinkToMemMember",
					"rejectedDataLinkedService": {
						"referenceName": "1crmTagMgmtRawProd",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "JoinEXTRA"
				},
				{
					"name": "JoinPIPL"
				},
				{
					"name": "AddColumnAndTransfromation"
				},
				{
					"name": "JoinTIER"
				},
				{
					"name": "JoinArea"
				},
				{
					"name": "JoinMapping"
				},
				{
					"name": "Dedup"
				},
				{
					"name": "RenamedColumn"
				},
				{
					"name": "DropRank"
				},
				{
					"name": "Add8Hours"
				},
				{
					"name": "Replace8"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Customer_UID as string,",
				"          Personal_Customer_ID as string,",
				"          Area_ID as integer,",
				"          BU_Source as string,",
				"          Name_Cn as string,",
				"          Nick_Name as string,",
				"          Name_En as string,",
				"          Person_Title as string,",
				"          Phone_No as string,",
				"          Phone_Code as string,",
				"          Tel_No as string,",
				"          Level_ID as integer,",
				"          Level_Name as string,",
				"          Is_Special_Level as integer,",
				"          Union_ID as string,",
				"          Is_Marry as integer,",
				"          Expire_At as timestamp,",
				"          Cycle_At as timestamp,",
				"          Issue_At as timestamp,",
				"          Person_Status as integer,",
				"          Res_Zone as string,",
				"          Res_City as string,",
				"          Res_Province as string,",
				"          Res_Country as string,",
				"          Res_Address as string,",
				"          Person_Zip as string,",
				"          Person_Gender as integer,",
				"          Person_Birthday as date,",
				"          Birthday_Short as date,",
				"          Fav_Prod as string,",
				"          Person_Hobby as string,",
				"          Fav_Item as string,",
				"          Month_Income as integer,",
				"          Year_Income as integer,",
				"          Family_Monthly_Income as integer,",
				"          Person_Address2 as string,",
				"          Person_Address3 as string,",
				"          Person_Phone2 as string,",
				"          Person_Email as string,",
				"          Person_QQ as string,",
				"          Person_Weibo as string,",
				"          Person_Company as string,",
				"          Person_Industry as string,",
				"          Person_Job as string,",
				"          Is_Mail_Market as string,",
				"          Company_Size as integer,",
				"          Edu_Level as string,",
				"          Reg_Origin as integer,",
				"          Reg_Sub_Origin as integer,",
				"          License_Plate as string,",
				"          Prefer_language as long,",
				"          Person_Religion as string,",
				"          Person_Ethnic as string,",
				"          Is_Deleted as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestCDMPERSONALPROFILE",
				"source(output(",
				"          Record_ID as string,",
				"          Customer_UID as string,",
				"          Personal_Customer_ID as string,",
				"          BU_Source as string,",
				"          VIP_Code as string,",
				"          Union_ID as string,",
				"          First_Pay as timestamp,",
				"          Last_Pay as timestamp,",
				"          Is_K11 as integer,",
				"          From_Know as string,",
				"          Is_Main_Card as integer,",
				"          Card_Type as integer,",
				"          VIP_Card_Type as integer,",
				"          Up_Origin as integer,",
				"          Operator_Type as integer,",
				"          Member_Kpoint as integer,",
				"          Expire_Kpoint as timestamp,",
				"          Clear_Kpoint as timestamp,",
				"          Member_Spoint as integer,",
				"          Expire_Spoint as timestamp,",
				"          Clear_Spoint as timestamp,",
				"          Spoint_Times as integer,",
				"          Member_Balance as integer,",
				"          Sales_Total as decimal(18,0),",
				"          Sales_Times as integer,",
				"          Create_At as timestamp,",
				"          Member_Deleted as integer,",
				"          Update_Operator as string,",
				"          Upgrade_Type as integer,",
				"          Is_HK_Member as integer,",
				"          To_China_Times as string,",
				"          To_China_Reason as string,",
				"          Name_On_Card as string,",
				"          Visit_K11_Reason as string,",
				"          Company_Share_Info as string,",
				"          Member_References as string,",
				"          VIP_Club as string,",
				"          Join_Club_Date as timestamp,",
				"          SMS_Contact as string,",
				"          Email_Contact as integer,",
				"          Phone_Contact as integer,",
				"          Post_Contact as integer,",
				"          Allow_EDM as string,",
				"          Allow_Share_Info as string,",
				"          EDM_Type as string,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestCDMPERSONALPROFILEEXTRA",
				"source(output(",
				"          Customer_UID as string,",
				"          Member_ID as string,",
				"          BU_Source as string,",
				"          Policy_Ver as integer,",
				"          Account_ID as integer,",
				"          Create_At as integer,",
				"          Update_At as integer,",
				"          Is_Deleted as integer,",
				"          Start_Date as date,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestCDMPERSONALPIPL",
				"source(output(",
				"          Tier_Upgrade_Unique_ID as string,",
				"          Customer_UID as string,",
				"          Area_ID as integer,",
				"          Member_ID as string,",
				"          BU_Source as string,",
				"          Account_ID as integer,",
				"          Open_ID as string,",
				"          Tier_ID as integer,",
				"          Tier_Name as string,",
				"          Tier_ID_Old as integer,",
				"          Tier_Name_Old as string,",
				"          Tier_Remark as string,",
				"          Upgrade_Origin as integer,",
				"          Create_At as date,",
				"          Update_At as date,",
				"          Submit_At as date,",
				"          Reach_At as date,",
				"          Is_Deleted as integer,",
				"          VIP_Code as string,",
				"          VIP_Code_Old as string,",
				"          Store_Code as string,",
				"          Upgrade_Type as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestCDMTIERUPGRADE",
				"source(output(",
				"          Area_ID as integer,",
				"          Area_Name as string,",
				"          Area_Alias as string,",
				"          Create_At as timestamp,",
				"          Update_At as timestamp,",
				"          Is_Delete as integer,",
				"          Area_Grp as integer,",
				"          Partner_Code as string,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestREFAREA",
				"source(output(",
				"          Customer_UID as string,",
				"          K11PRC_Member_ID as string,",
				"          Union_ID as string,",
				"          KDP_ID as string,",
				"          CL_ID as string,",
				"          KGO_ID as string,",
				"          New_KGO_ID as string,",
				"          manual_tag_id as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string,",
				"          Hashed_Member_ID as string,",
				"          Hashed_VIP_Code as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestCDMCUSTOMERMAPPING",
				"IngestCDMPERSONALPROFILE, IngestCDMPERSONALPROFILEEXTRA join(IngestCDMPERSONALPROFILE@Customer_UID == IngestCDMPERSONALPROFILEEXTRA@Customer_UID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinEXTRA",
				"JoinEXTRA, IngestCDMPERSONALPIPL join(IngestCDMPERSONALPROFILE@Customer_UID == IngestCDMPERSONALPIPL@Customer_UID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinPIPL",
				"Add8Hours derive(birthday_year = year(Person_Birthday),",
				"          birthday_month = month(Person_Birthday),",
				"          birthday_day = dayOfMonth(Person_Birthday),",
				"          active_flag = iif(Is_Delete==1, 0, 1),",
				"          create_by = 1,",
				"          create_date = fromUTC(currentUTC(), \"YYYY-MM-DD HH:mm:ss\"),",
				"          tier_effective_from_date_utc = toTimestamp(concat(toString(byName('Reach_At'),'yyyy-MM-dd\\'T\\'HH:mm:ss'),' +08:00'), 'yyyy-MM-dd\\'T\\'HH:mm:ss')-hours(8),",
				"          tier_effective_to_date_utc = toTimestamp(concat(toString(byName('Expire_At'),'yyyy-MM-dd\\'T\\'HH:mm:ss'),' +08:00'), 'yyyy-MM-dd\\'T\\'HH:mm:ss')-hours(8),",
				"          tier_effective_from_date_str = concat(toString((Reach_At),'yyyy-MM-dd\\'T\\'HH:mm:ss'),'+00:00'),",
				"          tier_effective_to_date_str = concat(toString(Expire_At,'yyyy-MM-dd\\'T\\'HH:mm:ss'),'+00:00'),",
				"          register_date_utc = Create_At-hours(8),",
				"          register_date_local = Create_At,",
				"          register_date_str = concat(toString(Create_At,'yyyy-MM-dd\\'T\\'HH:mm:ss'),'+00:00'),",
				"          id = toLong(IngestCDMPERSONALPROFILE@Personal_Customer_ID),",
				"          record_id = uuid(),",
				"          mobile_region_code = concat(\"+\", Phone_Code),",
				"          search_static_content = concat(IngestCDMPERSONALPROFILE@Personal_Customer_ID, concat(\"&\",concat(concat(toString(Name_Cn),\"&\"), concat(concat(toString(Phone_No),\"&\"),Person_Email)))),",
				"          Full_Name = toString(Name_Cn),",
				"          k11_member_id = toString(IngestCDMPERSONALPROFILE@Personal_Customer_ID),",
				"          Person_Status = Person_Status+1,",
				"          keep_official_accounts = 0,",
				"          register_location_id = IngestCDMPERSONALPROFILE@Area_ID,",
				"          register_location_name = Area_Alias,",
				"          Person_Birthday = case(toString(Person_Birthday, 'yyyy-MM-dd HH:mm:ss')==toString(toDate('1970-01-01'), 'yyyy-MM-dd HH:mm:ss'),toString(null()),toString(Person_Birthday, 'yyyy-MM-dd HH:mm:ss'))) ~> AddColumnAndTransfromation",
				"JoinPIPL, IngestCDMTIERUPGRADE join(IngestCDMPERSONALPROFILE@Customer_UID == IngestCDMTIERUPGRADE@Customer_UID",
				"     && Level_ID == Tier_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinTIER",
				"JoinTIER, IngestREFAREA join(IngestCDMPERSONALPROFILE@Area_ID == IngestREFAREA@Area_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinArea",
				"JoinArea, IngestCDMCUSTOMERMAPPING join(IngestCDMPERSONALPROFILE@Customer_UID == IngestCDMCUSTOMERMAPPING@Customer_UID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinMapping",
				"Replace8 aggregate(groupBy(manual_tag_id,",
				"          Hashed_Member_ID,",
				"          Level_ID,",
				"          Person_Status,",
				"          Name_Cn,",
				"          Phone_No,",
				"          Person_Gender,",
				"          birthday_year,",
				"          birthday_month,",
				"          birthday_day,",
				"          Person_Birthday = toTimestamp(Person_Birthday,'yyyy-MM-dd HH:mm:ss'),",
				"          Person_Email,",
				"          register_date_utc,",
				"          register_date_local,",
				"          register_date_str,",
				"          Res_Country,",
				"          Person_Zip,",
				"          Res_Address,",
				"          active_flag,",
				"          create_by,",
				"          create_date,",
				"          Res_Province,",
				"          Res_City,",
				"          Res_Zone,",
				"          Member_Kpoint,",
				"          tier_effective_from_date_utc,",
				"          Reach_At,",
				"          tier_effective_from_date_str,",
				"          tier_effective_to_date_utc,",
				"          Expire_At,",
				"          tier_effective_to_date_str,",
				"          Phone_Code,",
				"          search_static_content,",
				"          IngestCDMPERSONALPROFILE@Start_Date,",
				"          IngestCDMPERSONALPROFILE@Customer_UID,",
				"          k11_member_id,",
				"          IngestCDMPERSONALPROFILE@Union_ID,",
				"          Card_Type,",
				"          IngestCDMPERSONALPROFILE@Area_ID,",
				"          Area_Alias,",
				"          keep_official_accounts,",
				"          register_location_id,",
				"          register_location_name),",
				"     count = count(),",
				"          Policy_Ver = max(Policy_Ver)) ~> Dedup",
				"Dedup select(mapColumn(",
				"          id = manual_tag_id,",
				"          member_code = Hashed_Member_ID,",
				"          member_tier_id = Level_ID,",
				"          member_status_id = Person_Status,",
				"          full_name = Name_Cn,",
				"          mobile = Phone_No,",
				"          gender_id = Person_Gender,",
				"          birthday_year,",
				"          birthday_month,",
				"          birthday_day,",
				"          birthday = Person_Birthday,",
				"          email = Person_Email,",
				"          register_date_utc,",
				"          register_date_local,",
				"          register_date_str,",
				"          zip_code = Person_Zip,",
				"          address = Res_Address,",
				"          active_flag,",
				"          create_by,",
				"          create_date,",
				"          province_dictionary_name = Res_Province,",
				"          city_dictionary_name = Res_City,",
				"          district_dictionary_name = Res_Zone,",
				"          point = Member_Kpoint,",
				"          tier_effective_from_date_utc,",
				"          tier_effective_from_date_local = Reach_At,",
				"          tier_effective_from_date_str,",
				"          tier_effective_to_date_utc,",
				"          tier_effective_to_date_local = Expire_At,",
				"          tier_effective_to_date_str,",
				"          policies_version = Policy_Ver,",
				"          mobile_region_code = Phone_Code,",
				"          search_static_content,",
				"          ts = Start_Date,",
				"          azure_id = Customer_UID,",
				"          k11_member_id,",
				"          union_id = Union_ID,",
				"          special_card_type = Card_Type,",
				"          area_id = Area_ID,",
				"          area_name = Area_Alias,",
				"          country_dictionary_name = Res_Country,",
				"          keep_official_accounts,",
				"          register_location_name,",
				"          register_location_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RenamedColumn",
				"RenamedColumn select(mapColumn(",
				"          id,",
				"          member_code,",
				"          member_tier_id,",
				"          member_status_id,",
				"          full_name,",
				"          mobile,",
				"          gender_id,",
				"          birthday_year,",
				"          birthday_month,",
				"          birthday_day,",
				"          birthday,",
				"          email,",
				"          register_date_utc,",
				"          register_date_local,",
				"          register_date_str,",
				"          zip_code,",
				"          address,",
				"          active_flag,",
				"          create_by,",
				"          create_date,",
				"          province_dictionary_name,",
				"          city_dictionary_name,",
				"          district_dictionary_name,",
				"          point,",
				"          tier_effective_from_date_utc,",
				"          tier_effective_from_date_local,",
				"          tier_effective_from_date_str,",
				"          tier_effective_to_date_utc,",
				"          tier_effective_to_date_local,",
				"          tier_effective_to_date_str,",
				"          policies_version,",
				"          mobile_region_code,",
				"          search_static_content,",
				"          ts,",
				"          azure_id,",
				"          k11_member_id,",
				"          union_id,",
				"          special_card_type,",
				"          area_id,",
				"          area_name,",
				"          register_location_id,",
				"          country_dictionary_name,",
				"          register_location_name,",
				"          keep_official_accounts",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropRank",
				"JoinMapping derive(Reach_At_8 = toTimestamp(Reach_At)+hours(8),",
				"          Expire_At_8 = Expire_At+hours(8),",
				"          Create_At = case(isNull(IngestCDMPERSONALPROFILEEXTRA@Create_At)==true(),currentUTC(),IngestCDMPERSONALPROFILEEXTRA@Create_At),",
				"          Create_At_8 = case(isNull(IngestCDMPERSONALPROFILEEXTRA@Create_At)==true(),currentUTC()+hours(8),IngestCDMPERSONALPROFILEEXTRA@Create_At+hours(8)),",
				"          Name_Cn = case(isNull(Name_Cn)==true(),\"\",Name_Cn),",
				"          Phone_No = case(isNull(Phone_No)==true(),\"\",Phone_No),",
				"          Person_Email = case(isNull(Person_Email)==true(),\"\",Person_Email)) ~> Add8Hours",
				"AddColumnAndTransfromation derive(tier_effective_from_date_str = replace(tier_effective_from_date_str,\"+00:00\",\"+00:00\"),",
				"          tier_effective_to_date_str = replace(tier_effective_to_date_str,\"+00:00\",\"+00:00\"),",
				"          register_date_str = replace(register_date_str,\"+00:00\",\"+00:00\")) ~> Replace8",
				"DropRank sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as long,",
				"          member_code as string,",
				"          member_tier_id as integer,",
				"          member_status_id as integer,",
				"          full_name as string,",
				"          mobile as string,",
				"          gender_id as integer,",
				"          birthday_year as integer,",
				"          birthday_month as integer,",
				"          birthday_day as integer,",
				"          birthday as date,",
				"          email as string,",
				"          register_date_utc as timestamp,",
				"          register_date_local as timestamp,",
				"          register_date_str as string,",
				"          zip_code as string,",
				"          address as string,",
				"          active_flag as integer,",
				"          create_by as integer,",
				"          create_date as timestamp,",
				"          province_dictionary_name as string,",
				"          city_dictionary_name as string,",
				"          district_dictionary_name as string,",
				"          point as integer,",
				"          tier_effective_from_date_utc as timestamp,",
				"          tier_effective_from_date_local as timestamp,",
				"          tier_effective_from_date_str as string,",
				"          tier_effective_to_date_utc as timestamp,",
				"          tier_effective_to_date_local as timestamp,",
				"          tier_effective_to_date_str as string,",
				"          policies_version as integer,",
				"          mobile_region_code as string,",
				"          search_static_content as string,",
				"          ts as timestamp,",
				"          azure_id as string,",
				"          k11_member_id as string,",
				"          union_id as string,",
				"          special_card_type as integer,",
				"          area_id as integer,",
				"          area_name as string",
				"     ),",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SinkToMemMember"
			]
		}
	}
}