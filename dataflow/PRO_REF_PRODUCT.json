{
	"name": "PRO_REF_PRODUCT",
	"properties": {
		"folder": {
			"name": "Pro"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "vw_Latest_product",
						"type": "DatasetReference"
					},
					"name": "IngestRawProduct"
				},
				{
					"dataset": {
						"referenceName": "vw_Latest_product_info",
						"type": "DatasetReference"
					},
					"name": "IngestRawProductInfo"
				},
				{
					"dataset": {
						"referenceName": "vw_Latest_mall_goods",
						"type": "DatasetReference"
					},
					"name": "IngestRawMallGood"
				},
				{
					"dataset": {
						"referenceName": "PUB_REF_PRODUCT_CATEGORY",
						"type": "DatasetReference"
					},
					"name": "IngestCategory"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_PRO_REF_PRODUCT",
						"type": "DatasetReference"
					},
					"name": "SinkToProcessTable"
				}
			],
			"transformations": [
				{
					"name": "JoinProductAndProductInfo"
				},
				{
					"name": "DropUnwantColumnFromProduct"
				},
				{
					"name": "DropColumnFromProductInfo"
				},
				{
					"name": "UnionKGOAndNewKGO"
				},
				{
					"name": "SelectColumn"
				},
				{
					"name": "AddColumnKGO"
				},
				{
					"name": "AddColumnNewKGO"
				},
				{
					"name": "RemapColumn"
				},
				{
					"name": "AddColumn"
				},
				{
					"name": "FilterLatest"
				},
				{
					"name": "FilterLatestKGO"
				},
				{
					"name": "JoinCategotu"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "Dedup"
				},
				{
					"name": "FilterDeleted"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Start_Date as string",
				"}",
				"source(output(",
				"          id as long,",
				"          merchant_id as long,",
				"          merchant_product_id as long,",
				"          code as string,",
				"          parent_code as string,",
				"          parent_id as long,",
				"          source_type as integer,",
				"          status as integer,",
				"          channel_code as string,",
				"          freight_template_id as long,",
				"          operation_area_code as string,",
				"          is_available as integer,",
				"          is_deleted as integer,",
				"          version_no as integer,",
				"          create_time as timestamp,",
				"          update_time as timestamp,",
				"          company_id as long,",
				"          audit_message as string,",
				"          store_id as string,",
				"          data_type as integer,",
				"          price_level as integer,",
				"          first_shelf_time as timestamp,",
				"          sub_type_of_product as integer,",
				"          type_of_product as integer,",
				"          can_sale as integer,",
				"          can_sale_type as integer,",
				"          ref_id as long,",
				"          category_id as long,",
				"          brand_id as string,",
				"          third_merchant_product_code as string,",
				"          pricing_method as integer,",
				"          ext_field1 as string,",
				"          ext_field2 as string,",
				"          ext_field3 as string,",
				"          ext_field4 as string,",
				"          ext_field5 as string,",
				"          can_trace as integer,",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestRawProduct",
				"source(output(",
				"          id as long,",
				"          merchant_prod_volume as decimal(38,18),",
				"          shelfLife_days as integer,",
				"          return_days as integer,",
				"          english_name as string,",
				"          merchant_category_id as long,",
				"          gross_weight as decimal(38,18),",
				"          subtitle as string,",
				"          art_no as string,",
				"          replacement_days as integer,",
				"          remark as string,",
				"          merchant_prod_length as decimal(38,18),",
				"          merchant_prod_height as decimal(38,18),",
				"          type as integer,",
				"          net_weight as decimal(38,18),",
				"          net_weight_start as decimal(38,18),",
				"          chinese_name as string,",
				"          guarantee_days as integer,",
				"          merchant_prod_width as decimal(38,18),",
				"          sale_calc_unit_id as long,",
				"          is_inner_supplier as integer,",
				"          supplier_code as string,",
				"          supplier_id as long,",
				"          supplier_name as string,",
				"          merchant_id as long,",
				"          store_id as long,",
				"          tax_code as string,",
				"          is_available as integer,",
				"          is_deleted as integer,",
				"          version_no as integer,",
				"          create_username as string,",
				"          create_time as timestamp,",
				"          update_username as string,",
				"          update_time as timestamp,",
				"          client_versionno as string,",
				"          company_id as long,",
				"          category_id as long,",
				"          brand_id as long,",
				"          warehouse_type as integer,",
				"          subtitle_lan2 as string,",
				"          use_type as integer,",
				"          machining_type as integer,",
				"          combine_type as integer,",
				"          place_origin_name as string,",
				"          fast_code as string,",
				"          mp_model as long,",
				"          category_full_id_path as string,",
				"          is_invoice as integer,",
				"          is_force_invoice as integer,",
				"          is_vat_invoice as integer,",
				"          expiry_date_type as integer,",
				"          expiry_date_value as integer,",
				"          expiry_date_unit as integer,",
				"          expiry_date_time as timestamp,",
				"          face_value as decimal(38,18),",
				"          batch_strategy_id as long,",
				"          outbound_strategy as integer,",
				"          purchase_limit_type as integer,",
				"          purchase_limit_interval_type as integer,",
				"          purchase_limit_interval as integer,",
				"          purchase_limit_date_start as timestamp,",
				"          purchase_limit_date_end as timestamp,",
				"          purchase_limit_per_user as integer,",
				"          auto_refund as integer,",
				"          selling_points as string,",
				"          is_drop_shipping as integer,",
				"          ext_field1 as string,",
				"          ext_field2 as string,",
				"          ext_field3 as string,",
				"          ext_field4 as string,",
				"          ext_field5 as string,",
				"          use_desc as string,",
				"          use_address as string,",
				"          end_use_time as timestamp,",
				"          start_use_time as timestamp,",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          coupon_product_type as string,",
				"          shelf_display_flag as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestRawProductInfo",
				"source(output(",
				"          id as long,",
				"          area_id as string,",
				"          title as string,",
				"          goods_sn as string,",
				"          guide as string,",
				"          guide_weight as integer,",
				"          guide_color as string,",
				"          intro as string,",
				"          mer_id as integer,",
				"          store_code as string,",
				"          brand_id as string,",
				"          type as integer,",
				"          cash_type as integer,",
				"          member_cash_type as integer,",
				"          card_type as integer,",
				"          cate_id as integer,",
				"          effect_type as integer,",
				"          on_time as long,",
				"          off_time as long,",
				"          buy_limit_type as integer,",
				"          buy_limit as long,",
				"          is_shipping as integer,",
				"          shipping_express as integer,",
				"          shipping_store as integer,",
				"          return_time as integer,",
				"          services as string,",
				"          is_on_sale as integer,",
				"          whole_is_on_sale as integer,",
				"          is_recommend as integer,",
				"          wx_share as integer,",
				"          sort_by as integer,",
				"          min_price as decimal(38,18),",
				"          max_price as decimal(38,18),",
				"          quantity as integer,",
				"          total_quantity as integer,",
				"          purchase as integer,",
				"          spec_num as integer,",
				"          sales as integer,",
				"          pviews as integer,",
				"          tag_kp_cash as integer,",
				"          tag_kp_multiple as integer,",
				"          is_cart as integer,",
				"          is_special as integer,",
				"          is_profitsharing as integer,",
				"          invoice as integer,",
				"          is_search as integer,",
				"          unique_id as string,",
				"          create_at as long,",
				"          update_at as long,",
				"          create_by as string,",
				"          update_by as string,",
				"          deleted as integer,",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestRawMallGood",
				"source(output(",
				"          Cate_ID as long,",
				"          Buckle_Point as decimal(18,0),",
				"          Category_Code as string,",
				"          Cate_Code as string,",
				"          Cate_Desc as string,",
				"          Full_ID_Path as string,",
				"          Full_Name_Path as string,",
				"          Is_Highlight as integer,",
				"          Is_Visible as integer,",
				"          Is_Leaves as integer,",
				"          Product_Level as integer,",
				"          List_Sort as integer,",
				"          Merchant_ID as long,",
				"          Cate_Name as string,",
				"          Parent_ID as long,",
				"          Third_Code as string,",
				"          Cate_Type as integer,",
				"          First_Category_Id as long,",
				"          Enable_Add_Att as integer,",
				"          High_Price as decimal(18,0),",
				"          Low_Price as decimal(18,0),",
				"          High_Gross_Margin as decimal(18,0),",
				"          Low_Gross_Margin as decimal(18,0),",
				"          Tax_Code as string,",
				"          Is_Available as integer,",
				"          Is_Deleted as long,",
				"          Version_No as integer,",
				"          Create_Userid as long,",
				"          Create_Username as string,",
				"          Create_Userip as string,",
				"          Create_Usermac as string,",
				"          Create_Time as timestamp,",
				"          Create_Time_Db as timestamp,",
				"          Update_Userid as long,",
				"          Update_Username as string,",
				"          Update_Userip as string,",
				"          Update_Usermac as string,",
				"          Update_Time as timestamp,",
				"          Update_Time_Db as timestamp,",
				"          Company_ID as long,",
				"          Store_ID as long,",
				"          Ref_ID as long,",
				"          Full_Name_Path_Lan2 as string,",
				"          Name_Lan2 as string,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestCategory",
				"DropUnwantColumnFromProduct, DropColumnFromProductInfo join(ref_id == DropColumnFromProductInfo@id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinProductAndProductInfo",
				"IngestRawProduct select(mapColumn(",
				"          id,",
				"          merchant_id,",
				"          merchant_product_id,",
				"          code,",
				"          parent_code,",
				"          parent_id,",
				"          source_type,",
				"          status,",
				"          channel_code,",
				"          freight_template_id,",
				"          operation_area_code,",
				"          is_available,",
				"          is_deleted,",
				"          version_no,",
				"          create_time,",
				"          update_time,",
				"          company_id,",
				"          audit_message,",
				"          store_id,",
				"          data_type,",
				"          price_level,",
				"          first_shelf_time,",
				"          sub_type_of_product,",
				"          type_of_product,",
				"          can_sale,",
				"          can_sale_type,",
				"          ref_id,",
				"          brand_id,",
				"          third_merchant_product_code,",
				"          pricing_method,",
				"          category_id,",
				"          product_Insert_Date = Insert_Date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropUnwantColumnFromProduct",
				"FilterDeleted select(mapColumn(",
				"          id,",
				"          return_days,",
				"          english_name,",
				"          subtitle,",
				"          art_no,",
				"          replacement_days,",
				"          remark,",
				"          type,",
				"          chinese_name,",
				"          guarantee_days,",
				"          sale_calc_unit_id,",
				"          is_inner_supplier,",
				"          is_available,",
				"          is_deleted,",
				"          create_username,",
				"          create_time,",
				"          update_username,",
				"          update_time,",
				"          company_id,",
				"          brand_id,",
				"          subtitle_lan2,",
				"          use_type,",
				"          machining_type,",
				"          combine_type,",
				"          place_origin_name,",
				"          fast_code,",
				"          mp_model,",
				"          category_full_id_path,",
				"          is_invoice,",
				"          is_force_invoice,",
				"          is_vat_invoice,",
				"          expiry_date_type,",
				"          expiry_date_value,",
				"          expiry_date_unit,",
				"          expiry_date_time,",
				"          face_value,",
				"          batch_strategy_id,",
				"          outbound_strategy,",
				"          purchase_limit_type,",
				"          purchase_limit_interval_type,",
				"          purchase_limit_interval,",
				"          purchase_limit_date_start,",
				"          purchase_limit_date_end,",
				"          purchase_limit_per_user,",
				"          auto_refund,",
				"          selling_points,",
				"          is_drop_shipping,",
				"          info_Insert_Date = Insert_Date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropColumnFromProductInfo",
				"AddColumnNewKGO, AddColumnKGO union(byName: true)~> UnionKGOAndNewKGO",
				"FilterLatestKGO select(mapColumn(",
				"          Product_ID = id,",
				"          Oper_Area_Code = area_id,",
				"          CN_Name = title,",
				"          Product_SerialCode = goods_sn,",
				"          Merchant_ID = mer_id,",
				"          Store_ID = store_code,",
				"          Brand_ID = brand_id,",
				"          Product_Type = type,",
				"          Pur_Limit_Per_User = buy_limit,",
				"          Return_Days = return_time,",
				"          Pricing_Method = cash_type,",
				"          Product_Remark = intro,",
				"          quantity,",
				"          total_quantity",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumn",
				"SelectColumn derive(Product_Source = 'KGO',",
				"          Return_Days = Return_Days/86400) ~> AddColumnKGO",
				"RemapColumn derive(Product_Source = 'New KGO') ~> AddColumnNewKGO",
				"FilterLatest select(mapColumn(",
				"          Product_ID = DropUnwantColumnFromProduct@id,",
				"          Merchant_ID = DropUnwantColumnFromProduct@merchant_id,",
				"          Merchant_Product_ID = merchant_product_id,",
				"          Product_SerialCode = code,",
				"          parent_code,",
				"          parent_id = DropUnwantColumnFromProduct@parent_id,",
				"          source_type,",
				"          status,",
				"          channel_code,",
				"          freight_template_id,",
				"          Oper_Area_Code = operation_area_code,",
				"          is_available = DropUnwantColumnFromProduct@is_available,",
				"          is_deleted = DropUnwantColumnFromProduct@is_deleted,",
				"          version_no = DropUnwantColumnFromProduct@version_no,",
				"          create_time = DropUnwantColumnFromProduct@create_time,",
				"          update_time = DropUnwantColumnFromProduct@update_time,",
				"          company_id = DropUnwantColumnFromProduct@company_id,",
				"          audit_message,",
				"          Store_ID = DropUnwantColumnFromProduct@store_id,",
				"          data_type,",
				"          price_level,",
				"          first_shelf_time,",
				"          sub_type_of_product,",
				"          type_of_product,",
				"          Can_Sale = can_sale,",
				"          can_sale_type,",
				"          ref_id = DropUnwantColumnFromProduct@ref_id,",
				"          Cate_ID = category_id,",
				"          Brand_ID = DropUnwantColumnFromProduct@brand_id,",
				"          third_merchant_product_code,",
				"          Pricing_Method = pricing_method,",
				"          return_days,",
				"          english_name,",
				"          subtitle,",
				"          art_no,",
				"          replacement_days,",
				"          remark,",
				"          Product_Type = type,",
				"          CN_Name = chinese_name,",
				"          guarantee_days,",
				"          sale_calc_unit_id,",
				"          is_inner_supplier,",
				"          is_available = DropUnwantColumnFromProduct@is_available,",
				"          is_deleted = DropUnwantColumnFromProduct@is_deleted,",
				"          version_no = DropUnwantColumnFromProduct@version_no,",
				"          client_versionno = IngestCategory@Version_No,",
				"          company_id = DropUnwantColumnFromProduct@company_id,",
				"          category_id,",
				"          brand_id = DropUnwantColumnFromProduct@brand_id,",
				"          subtitle_lan2,",
				"          use_type,",
				"          machining_type,",
				"          combine_type,",
				"          place_origin_name,",
				"          fast_code,",
				"          mp_model,",
				"          category_full_id_path,",
				"          is_invoice,",
				"          is_force_invoice,",
				"          is_vat_invoice,",
				"          expiry_date_type,",
				"          expiry_date_value,",
				"          expiry_date_unit,",
				"          expiry_date_time,",
				"          face_value,",
				"          batch_strategy_id,",
				"          outbound_strategy,",
				"          purchase_limit_type,",
				"          purchase_limit_interval_type,",
				"          purchase_limit_interval,",
				"          purchase_limit_date_start,",
				"          purchase_limit_date_end,",
				"          Pur_Limit_Per_User = purchase_limit_per_user,",
				"          auto_refund,",
				"          selling_points,",
				"          is_drop_shipping,",
				"          Cate_Remark = Cate_Desc,",
				"          Cate_Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemapColumn",
				"UnionKGOAndNewKGO derive(Start_Date = toDate($Start_Date, 'yyyyMMdd'),",
				"          End_Date = toDate(toString(null())),",
				"          Is_Current = 1,",
				"          Source_BU = 'K11 PRC',",
				"          Trade_Cate = \"\",",
				"          SubTrade_Cate = \"\",",
				"          Brand_Style = \"\",",
				"          CN_Name = replace(CN_Name,'|',''),",
				"          english_name = replace(english_name,'|','')) ~> AddColumn",
				"JoinCategotu filter(toDate(product_Insert_Date)>=addDays(toDate(currentUTC()+hours(8)),0)||toDate(info_Insert_Date)>=addDays(toDate(currentUTC()+hours(8)),0)) ~> FilterLatest",
				"IngestRawMallGood filter(toDate(Insert_Date)>=addDays(toDate(currentUTC()+hours(8)),0)) ~> FilterLatestKGO",
				"JoinProductAndProductInfo, IngestCategory join(category_id == Cate_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinCategotu",
				"AddColumn derive(create_time = case(isNull(create_time)==true(), toTimestamp(Start_Date), create_time)) ~> derivedColumn1",
				"derivedColumn1 aggregate(groupBy(Product_ID,",
				"          Product_SerialCode,",
				"          Source_BU,",
				"          Product_Source,",
				"          Merchant_ID,",
				"          Merchant_Product_ID,",
				"          parent_code,",
				"          parent_id,",
				"          CN_Name,",
				"          english_name,",
				"          subtitle_lan2,",
				"          subtitle,",
				"          source_type,",
				"          status,",
				"          channel_code,",
				"          freight_template_id,",
				"          Oper_Area_Code,",
				"          is_available,",
				"          company_id,",
				"          audit_message,",
				"          Store_ID,",
				"          data_type,",
				"          price_level,",
				"          first_shelf_time,",
				"          sub_type_of_product,",
				"          type_of_product,",
				"          Can_Sale,",
				"          can_sale_type,",
				"          ref_id,",
				"          Brand_ID,",
				"          Pricing_Method,",
				"          UnionKGOAndNewKGO@Return_Days,",
				"          replacement_days,",
				"          Product_Remark,",
				"          Product_Type,",
				"          guarantee_days,",
				"          sale_calc_unit_id,",
				"          is_inner_supplier,",
				"          use_type,",
				"          machining_type,",
				"          combine_type,",
				"          place_origin_name,",
				"          fast_code,",
				"          mp_model,",
				"          category_full_id_path,",
				"          is_invoice,",
				"          is_force_invoice,",
				"          is_vat_invoice,",
				"          expiry_date_type,",
				"          expiry_date_value,",
				"          expiry_date_unit,",
				"          expiry_date_time,",
				"          face_value,",
				"          batch_strategy_id,",
				"          outbound_strategy,",
				"          purchase_limit_type,",
				"          purchase_limit_interval_type,",
				"          purchase_limit_interval,",
				"          purchase_limit_date_start,",
				"          purchase_limit_date_end,",
				"          Pur_Limit_Per_User,",
				"          auto_refund,",
				"          selling_points,",
				"          is_drop_shipping,",
				"          is_deleted,",
				"          create_time,",
				"          update_time,",
				"          quantity,",
				"          total_quantity,",
				"          Trade_Cate,",
				"          SubTrade_Cate,",
				"          Brand_Style,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current,",
				"          Cate_ID,",
				"          Cate_Remark,",
				"          Cate_Name),",
				"     count = count()) ~> Dedup",
				"IngestRawProductInfo filter(is_deleted ==0) ~> FilterDeleted",
				"Dedup sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Product_ID,",
				"          Product_SerialCode,",
				"          Source_BU,",
				"          Product_Source,",
				"          Merchant_ID,",
				"          Merchant_Product_ID,",
				"          Parent_Code = parent_code,",
				"          Parent_ID = parent_id,",
				"          CN_Name,",
				"          EN_Name = english_name,",
				"          Subtitle_Lan2 = subtitle_lan2,",
				"          Product_Subtitle = subtitle,",
				"          Source_Type = source_type,",
				"          Product_Status = status,",
				"          Channel_Code = channel_code,",
				"          Freight_Template_ID = freight_template_id,",
				"          Oper_Area_Code,",
				"          Is_Available = is_available,",
				"          Company_ID = company_id,",
				"          Audit_Message = audit_message,",
				"          Store_ID,",
				"          Data_Type = data_type,",
				"          Price_LV = price_level,",
				"          First_Shelf_Time = first_shelf_time,",
				"          Sub_Type_Product = sub_type_of_product,",
				"          Type_Of_Product = type_of_product,",
				"          Can_Sale,",
				"          Can_Sale_Type = can_sale_type,",
				"          Ref_ID = ref_id,",
				"          Brand_ID,",
				"          Cate_ID,",
				"          Cate_Name,",
				"          Cate_Remark,",
				"          Pricing_Method,",
				"          Quantity = quantity,",
				"          Total_Quantity = total_quantity,",
				"          Return_Days,",
				"          Replace_Days = replacement_days,",
				"          Product_Remark,",
				"          Product_Type,",
				"          Guarantee_Days = guarantee_days,",
				"          Sale_Calc_Unit_ID = sale_calc_unit_id,",
				"          Is_Inner_Supplier = is_inner_supplier,",
				"          Use_Type = use_type,",
				"          Machining_Type = machining_type,",
				"          Combine_Type = combine_type,",
				"          Place_Origin_Name = place_origin_name,",
				"          Fast_Code = fast_code,",
				"          Mp_Model = mp_model,",
				"          Cate_Full_ID_Path = category_full_id_path,",
				"          Is_Invoice = is_invoice,",
				"          Is_Force_Invoice = is_force_invoice,",
				"          Is_Vat_Invoice = is_vat_invoice,",
				"          Expiry_Date_Type = expiry_date_type,",
				"          Expiry_Date_Value = expiry_date_value,",
				"          Expiry_Date_Unit = expiry_date_unit,",
				"          Expiry_Date_Time = expiry_date_time,",
				"          Card_Value = face_value,",
				"          Batch_Strategy_ID = batch_strategy_id,",
				"          Outbound_Strategy = outbound_strategy,",
				"          Pur_Limit_Type = purchase_limit_type,",
				"          Pur_Limit_Interval_Type = purchase_limit_interval_type,",
				"          Pur_Limit_Interval = purchase_limit_interval,",
				"          Pur_Limit_Date_Start = purchase_limit_date_start,",
				"          Pur_Limit_Date_End = purchase_limit_date_end,",
				"          Pur_Limit_Per_User,",
				"          Auto_Refund = auto_refund,",
				"          Selling_Points = selling_points,",
				"          Is_Drop_Ship = is_drop_shipping,",
				"          Is_Deleted = is_deleted,",
				"          Create_Time = create_time,",
				"          Update_Time = update_time,",
				"          Trade_Cate,",
				"          SubTrade_Cate,",
				"          Brand_Style,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current",
				"     )) ~> SinkToProcessTable"
			]
		}
	}
}