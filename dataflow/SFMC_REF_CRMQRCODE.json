{
	"name": "SFMC_REF_CRMQRCODE",
	"properties": {
		"folder": {
			"name": "SFMC"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "PUB_REF_QRCODE",
						"type": "DatasetReference"
					},
					"name": "REFQRCODE"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TEMP_SFMC_REF_CRMQRCode",
						"type": "DatasetReference"
					},
					"name": "SinkToDataLake"
				},
				{
					"dataset": {
						"referenceName": "SFMC_RECORD_COUNT",
						"type": "DatasetReference"
					},
					"name": "SinkToRecordCount"
				}
			],
			"transformations": [
				{
					"name": "FilterLatest"
				},
				{
					"name": "RecordCount"
				},
				{
					"name": "AddColumns"
				},
				{
					"name": "TruncateSpecialCharacter"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Start_Date as string",
				"}",
				"source(output(",
				"          Qrcode_ID as integer,",
				"          Source_BU as string,",
				"          Account_ID as integer,",
				"          App_ID as string,",
				"          Qrcode_Ticket as string,",
				"          Ticket_Hash as string,",
				"          Code_Cate as string,",
				"          Code_Type as integer,",
				"          Code_Expire as integer,",
				"          Code_Name as string,",
				"          Scene_ID as long,",
				"          Scene_Str as string,",
				"          Code_Desc as string,",
				"          Delay_Day as integer,",
				"          Effect_Time as timestamp,",
				"          Trigger_Type as integer,",
				"          Trigger_ID as integer,",
				"          Trigger_Rule_Count as integer,",
				"          Trigger_Status as integer,",
				"          Code_Status as integer,",
				"          Data_From as integer,",
				"          Create_Time as timestamp,",
				"          Update_Time as timestamp,",
				"          Group_ID as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> REFQRCODE",
				"TruncateSpecialCharacter filter(toDate(Start_Date) == toDate($Start_Date,'yyyyMMdd')) ~> FilterLatest",
				"REFQRCODE aggregate(groupBy({1} = 1),",
				"     Record_Count = count(1)) ~> RecordCount",
				"RecordCount derive(Name = 'Azure_Ref_QRCode',",
				"          Insert_Date = currentUTC()+hours(8)) ~> AddColumns",
				"REFQRCODE derive(Code_Name = replace(replace(Code_Name,\"|\",\"|\"),'\"',\"'\"),",
				"          Code_Desc = replace(replace(Code_Desc,\"|\",\"|\"),'\"',\"'\")) ~> TruncateSpecialCharacter",
				"FilterLatest sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SinkToDataLake",
				"AddColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Name as string,",
				"          Record_Count as integer,",
				"          Insert_Date as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SinkToRecordCount"
			]
		}
	}
}