{
	"name": "MANUAL_TAG_MEM_MEMBER_OPTION",
	"properties": {
		"folder": {
			"name": "Manual_Tag"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MANUAL_TAG_MEM_MEMBER",
						"type": "DatasetReference"
					},
					"name": "IngestMEMMEMBER"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_MANUAL_TAG_MEM_MEMBER_OPTION",
						"type": "DatasetReference"
					},
					"name": "SinkToMemMemberOption"
				}
			],
			"transformations": [
				{
					"name": "MemberCodeToMemberID"
				},
				{
					"name": "RenameColumn"
				},
				{
					"name": "Dedup"
				},
				{
					"name": "DropCount"
				},
				{
					"name": "FilterCreateDate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as long,",
				"          member_code as string,",
				"          member_tier_id as integer,",
				"          member_status_id as integer,",
				"          full_name as string,",
				"          mobile as string,",
				"          gender_id as integer,",
				"          birthday_year as integer,",
				"          birthday_month as integer,",
				"          birthday_day as integer,",
				"          birthday as date,",
				"          email as string,",
				"          register_date_utc as timestamp,",
				"          register_date_local as timestamp,",
				"          register_date_str as string,",
				"          zip_code as string,",
				"          address as string,",
				"          active_flag as integer,",
				"          create_by as integer,",
				"          create_date as timestamp,",
				"          tenant_id as string,",
				"          point as integer,",
				"          tier_effective_from_date_utc as timestamp,",
				"          tier_effective_from_date_local as timestamp,",
				"          tier_effective_from_date_str as string,",
				"          tier_effective_to_date_utc as timestamp,",
				"          tier_effective_to_date_local as timestamp,",
				"          tier_effective_to_date_str as string,",
				"          policies_version as integer,",
				"          mobile_region_code as string,",
				"          search_static_content as string,",
				"          ts as timestamp,",
				"          azure_id as string,",
				"          k11_member_id as string,",
				"          union_id as string,",
				"          special_card_type as integer,",
				"          area_id as integer,",
				"          area_name as string,",
				"          province_dictionary_name as string,",
				"          city_dictionary_name as string,",
				"          district_dictionary_name as string,",
				"          country_dictionary_name as string,",
				"          register_location_id as integer,",
				"          register_location_name as string,",
				"          keep_official_accounts as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestMEMMEMBER",
				"RenameColumn derive(option_type = 1,",
				"          option_value = 1,",
				"          tenant_id = 1,",
				"          member_id = id,",
				"          active_flag = 1) ~> MemberCodeToMemberID",
				"FilterCreateDate select(mapColumn(",
				"          id,",
				"          member_code,",
				"          member_tier_id,",
				"          member_status_id,",
				"          full_name,",
				"          mobile,",
				"          gender_id,",
				"          birthday_year,",
				"          birthday_month,",
				"          birthday_day,",
				"          birthday,",
				"          email,",
				"          register_date_utc,",
				"          register_date_local,",
				"          register_date_str,",
				"          zip_code,",
				"          address,",
				"          active_flag,",
				"          create_by,",
				"          create_date,",
				"          province_dictionary_name,",
				"          city_dictionary_name,",
				"          district_dictionary_name,",
				"          point,",
				"          tier_effective_from_date_utc,",
				"          tier_effective_from_date_local,",
				"          tier_effective_from_date_str,",
				"          tier_effective_to_date_utc,",
				"          tier_effective_to_date_local,",
				"          tier_effective_to_date_str,",
				"          policies_version,",
				"          mobile_region_code,",
				"          search_static_content,",
				"          ts,",
				"          azure_id,",
				"          k11_member_id,",
				"          union_id,",
				"          special_card_type,",
				"          area_id,",
				"          area_name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RenameColumn",
				"MemberCodeToMemberID aggregate(groupBy(id,",
				"          member_id,",
				"          option_type,",
				"          option_value,",
				"          tenant_id,",
				"          active_flag,",
				"          create_by,",
				"          create_date),",
				"     count = count()) ~> Dedup",
				"Dedup select(mapColumn(",
				"          id,",
				"          member_id,",
				"          option_type,",
				"          option_value,",
				"          tenant_id,",
				"          active_flag,",
				"          create_by,",
				"          create_date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropCount",
				"IngestMEMMEMBER filter(toDate(create_date) == addDays(currentDate(),0)) ~> FilterCreateDate",
				"DropCount sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          member_id,",
				"          id,",
				"          option_type,",
				"          option_value,",
				"          tenant_id,",
				"          create_by,",
				"          create_date,",
				"          active_flag",
				"     )) ~> SinkToMemMemberOption"
			]
		}
	}
}