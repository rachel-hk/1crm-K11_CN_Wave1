{
	"name": "PRO_DIGIT_CLICK",
	"properties": {
		"folder": {
			"name": "Pro"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "vw_latest_mon_event_param_union_log",
						"type": "DatasetReference"
					},
					"name": "IngestRawEventUnionLog"
				},
				{
					"dataset": {
						"referenceName": "PUB_CDM_CUSTOMER_MAPPING",
						"type": "DatasetReference"
					},
					"name": "IngestCDMCUSTOMERMAPPING"
				},
				{
					"dataset": {
						"referenceName": "PUB_REF_APP",
						"type": "DatasetReference"
					},
					"name": "IngestRawMonApp"
				},
				{
					"dataset": {
						"referenceName": "vw_latest_mon_visit_log",
						"type": "DatasetReference"
					},
					"name": "VisitLog"
				},
				{
					"dataset": {
						"referenceName": "vw_latest_mon_event_param_value_log",
						"type": "DatasetReference"
					},
					"name": "ValueLog"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_PRO_DIGIT_CLICK",
						"type": "DatasetReference"
					},
					"name": "SinkToProcessTable",
					"rejectedDataLinkedService": {
						"referenceName": "1crmTagMgmtRawProd",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "AddColumn"
				},
				{
					"name": "JoinMapping"
				},
				{
					"name": "DropUnwantColumn"
				},
				{
					"name": "FilterEventID"
				},
				{
					"name": "JoinRefApp"
				},
				{
					"name": "DropColumnFromMonApp"
				},
				{
					"name": "JoinVisitLog"
				},
				{
					"name": "Dedup"
				},
				{
					"name": "FilterLatestUnion"
				},
				{
					"name": "FilterVisit"
				},
				{
					"name": "JoinValue"
				},
				{
					"name": "DedupValue"
				}
			],
			"scriptLines": [
				"parameters{",
				"     input_event_id as string ('1197'),",
				"     input_app_id as string ('133159590442264'),",
				"     Start_Date as string",
				"}",
				"source(output(",
				"          id as long,",
				"          app_id as long,",
				"          session_id as long,",
				"          visitor_id as long,",
				"          user_id as string,",
				"          member_id as string,",
				"          page_id as long,",
				"          title_id as long,",
				"          event_log_id as long,",
				"          event_id as integer,",
				"          sort as integer,",
				"          time_of_min as integer,",
				"          time_of_hour as integer,",
				"          time_of_day as long,",
				"          time_of_week as long,",
				"          time_of_month as long,",
				"          createtime as integer,",
				"          custom_field_1 as long,",
				"          custom_field_2 as long,",
				"          custom_field_3 as long,",
				"          custom_field_4 as long,",
				"          custom_field_5 as long,",
				"          custom_field_6 as long,",
				"          custom_field_7 as long,",
				"          custom_field_8 as long,",
				"          custom_field_9 as long,",
				"          custom_field_10 as long,",
				"          custom_field_11 as long,",
				"          custom_field_12 as long,",
				"          custom_field_13 as long,",
				"          custom_field_14 as long,",
				"          custom_field_15 as long,",
				"          custom_field_16 as long,",
				"          custom_field_17 as long,",
				"          custom_field_18 as long,",
				"          custom_field_19 as long,",
				"          custom_field_20 as long,",
				"          custom_field_21 as long,",
				"          custom_field_22 as long,",
				"          custom_field_23 as long,",
				"          custom_field_24 as long,",
				"          custom_field_25 as long,",
				"          custom_field_26 as long,",
				"          custom_field_27 as long,",
				"          custom_field_28 as long,",
				"          custom_field_29 as long,",
				"          custom_field_30 as long,",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestRawEventUnionLog",
				"source(output(",
				"          Customer_UID as string,",
				"          K11PRC_Member_ID as string,",
				"          Union_ID as string,",
				"          KDP_ID as string,",
				"          CL_ID as string,",
				"          KGO_ID as string,",
				"          New_KGO_ID as string,",
				"          manual_tag_id as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string,",
				"          Hashed_Member_ID as string,",
				"          Hashed_VIP_Code as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestCDMCUSTOMERMAPPING",
				"source(output(",
				"          App_Unique_ID as integer,",
				"          Account_ID as long,",
				"          App_ID as long,",
				"          Area_ID as integer,",
				"          App_Name as string,",
				"          App_Period as integer,",
				"          Start_Time as timestamp,",
				"          End_Time as timestamp,",
				"          Landing_Page_Url as string,",
				"          App_Budget as integer,",
				"          Event_Url as string,",
				"          App_Desc as string,",
				"          App_Status as integer,",
				"          Trigger_Switch as integer,",
				"          Debug_Switch as integer,",
				"          App_Create_Time as timestamp,",
				"          App_Update_Time as timestamp,",
				"          Coupon_Count as integer,",
				"          App_Type as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string,",
				"          BU_Source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestRawMonApp",
				"source(output(",
				"          id as long,",
				"          app_id as long,",
				"          session_id as long,",
				"          visitor_id as long,",
				"          user_id as string,",
				"          member_id as string,",
				"          host_id as long,",
				"          page_id as long,",
				"          title_id as long,",
				"          channel_id as integer,",
				"          share_id as long,",
				"          share_channel_id as integer,",
				"          share_from_user_id as string,",
				"          share_level as integer,",
				"          sort as integer,",
				"          duration as integer,",
				"          is_landing_page as integer,",
				"          is_exit_page as integer,",
				"          k_id as integer,",
				"          k_type as integer,",
				"          k_index as integer,",
				"          referrer_id as long,",
				"          time_of_min as integer,",
				"          time_of_hour as integer,",
				"          time_of_day as long,",
				"          time_of_week as long,",
				"          time_of_month as long,",
				"          createtime as integer,",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> VisitLog",
				"source(output(",
				"          id as long,",
				"          dim_key as string,",
				"          app_id as long,",
				"          event_id as integer,",
				"          param_id as integer,",
				"          value_id as long,",
				"          value as string,",
				"          status as integer,",
				"          createtime as integer,",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> ValueLog",
				"Dedup derive(BU_Source = 'K11 PRC',",
				"          Start_Date = toDate($Start_Date, 'yyyyMMdd'),",
				"          End_Date = toTimestamp(toString(null())),",
				"          Is_Current = 1,",
				"          Create_Time = toTimestamp((toInteger(toString(createtime))+28800)*1000l,'yyyy-MM-dd HH:mm:ss'),",
				"          Visit_ID = iif(isNull(Visit_ID)==true(),0,toInteger(Visit_ID))) ~> AddColumn",
				"JoinValue, IngestCDMCUSTOMERMAPPING join(member_id == K11PRC_Member_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinMapping",
				"JoinVisitLog select(mapColumn(",
				"          id = IngestRawEventUnionLog@id,",
				"          Visit_ID = VisitLog@id,",
				"          app_id = IngestRawEventUnionLog@app_id,",
				"          session_id = IngestRawEventUnionLog@session_id,",
				"          visitor_id = IngestRawEventUnionLog@visitor_id,",
				"          user_id = IngestRawEventUnionLog@user_id,",
				"          member_id = Hashed_Member_ID,",
				"          page_id = IngestRawEventUnionLog@page_id,",
				"          title_id = IngestRawEventUnionLog@title_id,",
				"          event_log_id,",
				"          event_id = IngestRawEventUnionLog@event_id,",
				"          createtime = IngestRawEventUnionLog@createtime,",
				"          View_Page_Name = custom_field_1,",
				"          Area_ID = custom_field_2,",
				"          Place_Name = custom_field_3,",
				"          Buttom_Name = custom_field_4,",
				"          MiniProgram_Remark = custom_field_5,",
				"          View_Page = value,",
				"          Customer_UID,",
				"          Channel_ID = channel_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropUnwantColumn",
				"FilterLatestUnion filter(toString(byName('event_id')) ==$input_event_id && toString(byName('app_id')) == $input_app_id) ~> FilterEventID",
				"DropUnwantColumn, IngestRawMonApp join(DropUnwantColumn@app_id == IngestRawMonApp@App_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinRefApp",
				"JoinRefApp select(mapColumn(",
				"          id,",
				"          app_id = DropUnwantColumn@app_id,",
				"          session_id,",
				"          visitor_id,",
				"          user_id,",
				"          member_id,",
				"          page_id,",
				"          title_id,",
				"          event_log_id,",
				"          event_id,",
				"          createtime,",
				"          View_Page_Name,",
				"          Area_ID = DropUnwantColumn@Area_ID,",
				"          Place_Name,",
				"          Buttom_Name,",
				"          MiniProgram_Remark,",
				"          View_Page,",
				"          Customer_UID,",
				"          App_Name,",
				"          Channel_ID,",
				"          Visit_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropColumnFromMonApp",
				"JoinMapping, FilterVisit join(IngestRawEventUnionLog@app_id == VisitLog@app_id",
				"     && IngestRawEventUnionLog@session_id == VisitLog@session_id",
				"     && IngestRawEventUnionLog@visitor_id == VisitLog@visitor_id",
				"     && IngestRawEventUnionLog@user_id == VisitLog@user_id",
				"     && IngestRawEventUnionLog@member_id == VisitLog@member_id",
				"     && IngestRawEventUnionLog@page_id == VisitLog@page_id",
				"     && IngestRawEventUnionLog@title_id == VisitLog@title_id",
				"     && IngestRawEventUnionLog@sort == VisitLog@sort,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinVisitLog",
				"DropColumnFromMonApp aggregate(groupBy(id,",
				"          app_id,",
				"          session_id,",
				"          visitor_id,",
				"          user_id,",
				"          member_id,",
				"          page_id,",
				"          title_id,",
				"          event_log_id,",
				"          event_id,",
				"          createtime,",
				"          View_Page_Name,",
				"          Area_ID,",
				"          Place_Name,",
				"          Buttom_Name,",
				"          MiniProgram_Remark,",
				"          View_Page,",
				"          Customer_UID,",
				"          App_Name,",
				"          Channel_ID,",
				"          Visit_ID),",
				"     count = count()) ~> Dedup",
				"IngestRawEventUnionLog filter(toDate(Insert_Date)>=addDays(toDate(currentUTC()+hours(8)),0)) ~> FilterLatestUnion",
				"VisitLog filter(toDate(Insert_Date)>=addDays(toDate(currentUTC()+hours(8)),0)) ~> FilterVisit",
				"FilterEventID, DedupValue join(IngestRawEventUnionLog@app_id == DedupValue@app_id",
				"     && IngestRawEventUnionLog@event_id == DedupValue@event_id",
				"     && custom_field_6 == value_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinValue",
				"ValueLog aggregate(groupBy(app_id,",
				"          event_id,",
				"          value_id,",
				"          value),",
				"     count = count()) ~> DedupValue",
				"AddColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Click_ID = id,",
				"          Customer_UID,",
				"          BU_Source,",
				"          App_ID = app_id,",
				"          Session_ID = session_id,",
				"          Visitor_ID = visitor_id,",
				"          User_ID = user_id,",
				"          Member_ID = member_id,",
				"          Page_ID = page_id,",
				"          Title_ID = title_id,",
				"          Event_Log_ID = event_log_id,",
				"          Create_Time,",
				"          View_Page,",
				"          View_Page_Name,",
				"          Area_ID,",
				"          Place_Name,",
				"          Button_Name = Buttom_Name,",
				"          MiniProgram_Remark,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current,",
				"          App_Name,",
				"          event_id,",
				"          Channel_ID,",
				"          Visit_ID",
				"     )) ~> SinkToProcessTable"
			]
		}
	}
}