{
	"name": "Pre_PRO_CDM_PERSONAL_PROFILE_20230808",
	"properties": {
		"folder": {
			"name": "Pro"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "vw_temp_incremental_com_member",
						"type": "DatasetReference"
					},
					"name": "RawComMemberIngest"
				},
				{
					"dataset": {
						"referenceName": "vw_temp_incremental_com_member_extend",
						"type": "DatasetReference"
					},
					"name": "RawComMemberExtendIngest"
				},
				{
					"dataset": {
						"referenceName": "PUB_REF_CUSTOMER_LEVEL",
						"type": "DatasetReference"
					},
					"name": "RawREFCUSTOMERLEVEL"
				},
				{
					"dataset": {
						"referenceName": "PUB_CDM_CUSTOMER_MAPPING",
						"type": "DatasetReference"
					},
					"name": "CDMCUSTOMRTMAPPING"
				},
				{
					"dataset": {
						"referenceName": "temp_crm_vip_encryptdata",
						"type": "DatasetReference"
					},
					"name": "PhoneNumberMapping"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_PRE_CDM_PERSONAL_PROFILE",
						"type": "DatasetReference"
					},
					"name": "SinkPreCDMPERSONALPROFILE"
				}
			],
			"transformations": [
				{
					"name": "JoinComMemberExtend"
				},
				{
					"name": "SelectRelatedColumn",
					"description": "Renaming JoinComMemberExtend to SelectRelatedColumn with columns 'member_ID\n, area_ID\n, real_name\n, nick_name\n, en_name\n, xf_title\n, phone\n, phone_code\n,  tel\n, level_ID\n, is_special_level\n, union_id\n, is_marry\n, expire_at\n, cycle_at\n, issue_at\n, status\n, zone\n, city\n, province\n, country\n, addr\n, zip\n, sex\n, birthday,\nbirthday_short\n, fav_prod\n, hobby\n, fav_item\n, month_income\n, year_income\n, xf_monthyincome\n, addr2\n, addr3\n, phone2\n, email\n, qq\n, weibo\n, company\n, industry\n, job\n, is_mail_market\n, company_size\n, xf_educationcode\n, ref_origin\n, ref_sub_orgin\n,xf_language'"
				},
				{
					"name": "SelectRelatedColumnfromCar"
				},
				{
					"name": "AddColumn"
				},
				{
					"name": "JoinREFCUSTOMERLEVEL"
				},
				{
					"name": "DropFromLevel"
				},
				{
					"name": "FilterNormal"
				},
				{
					"name": "Dedup"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "JoinHashed"
				},
				{
					"name": "GetPhoneNumber"
				},
				{
					"name": "LatestDataInsert"
				},
				{
					"name": "GetLatestData"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Start_Date as string",
				"}",
				"source(output(",
				"          id as long,",
				"          member_id as string,",
				"          area_id as integer,",
				"          real_name as string,",
				"          nick_name as string,",
				"          en_name as string,",
				"          phone as string,",
				"          phone_code as string,",
				"          tel as string,",
				"          head_img as string,",
				"          level_id as integer,",
				"          is_special_level as integer,",
				"          vip_code as string,",
				"          vip_pass as string,",
				"          union_id as string,",
				"          is_marry as integer,",
				"          reg_at as long,",
				"          expire_at as long,",
				"          first_pay as long,",
				"          last_pay as long,",
				"          cycle_at as decimal(38,18),",
				"          issue_at as long,",
				"          status as integer,",
				"          zone as string,",
				"          city as string,",
				"          province as string,",
				"          country as string,",
				"          addr as string,",
				"          zip as string,",
				"          sex as integer,",
				"          birthday as long,",
				"          birthday_short as integer,",
				"          age as integer,",
				"          email as string,",
				"          wechat_id as string,",
				"          reg_origin as integer,",
				"          reg_sub_origin as integer,",
				"          up_origin as integer,",
				"          up_at as integer,",
				"          operator_type as integer,",
				"          operator_id as integer,",
				"          operator_name as string,",
				"          kpoint as integer,",
				"          expire_kp as integer,",
				"          clear_kp as integer,",
				"          spoint as integer,",
				"          expire_sp as integer,",
				"          clear_sp as integer,",
				"          sp_times as integer,",
				"          balance as integer,",
				"          sales_total as decimal(38,18),",
				"          sales_times as integer,",
				"          eform_status as integer,",
				"          create_at as long,",
				"          update_at as long,",
				"          deleted as integer,",
				"          update_operator as string,",
				"          upgrade_type as integer,",
				"          is_hk_member as integer,",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          level_change_type as long,",
				"          level_down_pre as long,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> RawComMemberIngest",
				"source(output(",
				"          id as long,",
				"          member_id as string,",
				"          kids as integer,",
				"          kids_age as integer,",
				"          fav_prod as string,",
				"          hobby as string,",
				"          fav_item as string,",
				"          month_income as integer,",
				"          year_income as integer,",
				"          kid1_sex as integer,",
				"          kid1_birthday as integer,",
				"          kid2_sex as integer,",
				"          kid2_birthday as integer,",
				"          from_know as string,",
				"          addr2 as string,",
				"          addr3 as string,",
				"          phone2 as string,",
				"          qq as string,",
				"          weibo as string,",
				"          alipay as string,",
				"          company as string,",
				"          industry as string,",
				"          job as string,",
				"          remark as string,",
				"          bank_number as string,",
				"          bank_name as string,",
				"          is_mail_market as integer,",
				"          company_size as integer,",
				"          is_k11 as integer,",
				"          customer_leader as string,",
				"          update_at as integer,",
				"          deleted as integer,",
				"          xf_vipid as string,",
				"          xf_issuetillid as string,",
				"          xf_groupid16 as string,",
				"          xf_groupid18 as string,",
				"          xf_lastmodby as string,",
				"          xf_lastmodtime as long,",
				"          xf_issuetime as long,",
				"          xf_newaccumpur as long,",
				"          xf_newttlpurcount as integer,",
				"          xf_ismainvip as integer,",
				"          xf_vipcardtype as integer,",
				"          xf_club as string,",
				"          xf_joinclubdate as long,",
				"          xf_infosource as string,",
				"          xf_applicationid as string,",
				"          xf_applicationdate as long,",
				"          xf_certificatetype as string,",
				"          xf_passwordflag as string,",
				"          xf_zone as string,",
				"          xf_region as string,",
				"          xf_educationcode as string,",
				"          xf_smscontact as integer,",
				"          xf_emailcontact as integer,",
				"          xf_phonecontact as integer,",
				"          xf_postcontact as integer,",
				"          xf_lastupdowndate as long,",
				"          xf_lastexpirydate as long,",
				"          xf_language as integer,",
				"          xf_tochinatimes as string,",
				"          xf_tochinareason as string,",
				"          xf_nameoncard as string,",
				"          xf_title as string,",
				"          xf_monthlyincome as string,",
				"          xf_companyname as string,",
				"          xf_businesstitle as string,",
				"          xf_occupation as string,",
				"          xf_visitk11reason as string,",
				"          xf_allowsendpromomsg as string,",
				"          xf_catofpromomsg as string,",
				"          xf_allowsharemyinfo as string,",
				"          xf_compofsharemyinfo as string,",
				"          xf_agegroup as string,",
				"          xf_references as string,",
				"          xf_childagegroup as string,",
				"          xf_terminalip as string,",
				"          xf_requested as string,",
				"          xf_likeproductother as string,",
				"          xf_interestother as string,",
				"          xf_tradesources as string,",
				"          xf_shownameoncardtype as integer,",
				"          xf_currentrewardbonus_cs as string,",
				"          active as integer,",
				"          first_name as string,",
				"          last_name as string,",
				"          join_show as string,",
				"          avg_expense as integer,",
				"          trip_mode as string,",
				"          fz_bonus_expire_at as decimal(38,18),",
				"          fz_expire_at as decimal(38,18),",
				"          xf_populationattribute as string,",
				"          xf_memberstatus as integer,",
				"          person as string,",
				"          requested_source as string,",
				"          employeeno as string,",
				"          activityname as string,",
				"          xf_storecode as string,",
				"          xf_employeeno as string,",
				"          xf_requested_relationship as string,",
				"          xf_references_phone as string,",
				"          push_classification as string,",
				"          xf_remark as string,",
				"          xf_special_remark as string,",
				"          xf_sales_ticket as string,",
				"          xf_head_img as string,",
				"          xf_vipaccountno as string,",
				"          xf_kpoint_total as integer,",
				"          xf_personal_needs as string,",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          create_at as integer,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> RawComMemberExtendIngest",
				"source(output(",
				"          Tier_Code as integer,",
				"          System_ID as integer,",
				"          Source_BU as string,",
				"          Account_ID as integer,",
				"          App_ID as string,",
				"          Card_ID as string,",
				"          Card_BD as string,",
				"          Name_Fenze as string,",
				"          Tier_Name as string,",
				"          Valid_Type as integer,",
				"          Start_At as timestamp,",
				"          Expire_At as timestamp,",
				"          Upgrade_Rule as integer,",
				"          Upgrade_Model as integer,",
				"          Kpoint_Rate as decimal(18,0),",
				"          Spoint_Rate as decimal(18,0),",
				"          Tier_Discount as integer,",
				"          Is_Sync as integer,",
				"          Create_At as timestamp,",
				"          Update_At as timestamp,",
				"          Is_Deleted as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> RawREFCUSTOMERLEVEL",
				"source(output(",
				"          Customer_UID as string,",
				"          K11PRC_Member_ID as string,",
				"          Union_ID as string,",
				"          KDP_ID as string,",
				"          CL_ID as string,",
				"          KGO_ID as string,",
				"          New_KGO_ID as string,",
				"          manual_tag_id as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string,",
				"          Hashed_Member_ID as string,",
				"          Hashed_VIP_Code as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> CDMCUSTOMRTMAPPING",
				"source(output(",
				"          member_id as string,",
				"          vip_code as string,",
				"          phone as string,",
				"          email as string,",
				"          addr as string,",
				"          real_name as string,",
				"          nick_name as string,",
				"          en_name as string,",
				"          File_Path as string,",
				"          Insert_Date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> PhoneNumberMapping",
				"RawComMemberIngest, RawComMemberExtendIngest join(RawComMemberIngest@member_id == RawComMemberExtendIngest@member_id,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinComMemberExtend",
				"JoinComMemberExtend select(mapColumn(",
				"          Personal_Customer_ID = RawComMemberIngest@member_id,",
				"          Area_ID = area_id,",
				"          Name_CN = real_name,",
				"          Nick_Name = nick_name,",
				"          Name_EN = en_name,",
				"          Phone_No = phone,",
				"          Phone_Code = phone_code,",
				"          Tel_No = tel,",
				"          Level_ID = level_id,",
				"          Is_Special_Level = is_special_level,",
				"          Union_ID = union_id,",
				"          Is_Marry = is_marry,",
				"          Cycle_At = cycle_at,",
				"          Expire_At = expire_at,",
				"          Issue_At = issue_at,",
				"          reg_at,",
				"          Person_Status = status,",
				"          Res_Zone = zone,",
				"          Res_City = city,",
				"          Res_Province = province,",
				"          Res_Country = country,",
				"          Res_Address = addr,",
				"          Person_Zip = zip,",
				"          Person_Gender = sex,",
				"          Person_Birthday = birthday,",
				"          Birthday_Short = birthday_short,",
				"          Person_Email = email,",
				"          Reg_Origin = reg_origin,",
				"          Reg_Sub_Origin = reg_sub_origin,",
				"          Fav_Prod = fav_prod,",
				"          Person_Hobby = hobby,",
				"          Fav_Item = fav_item,",
				"          Month_Income = month_income,",
				"          Year_Income = year_income,",
				"          Family_Monthly_Income = xf_monthlyincome,",
				"          Person_Address2 = addr2,",
				"          Person_Address3 = addr3,",
				"          Person_Phone2 = phone2,",
				"          Person_QQ = qq,",
				"          Person_Weibo = weibo,",
				"          Person_Company = company,",
				"          Person_Industry = industry,",
				"          Person_Job = job,",
				"          Is_Mail_Market = is_mail_market,",
				"          Company_Size = company_size,",
				"          Edu_Level = xf_educationcode,",
				"          Prefer_Language = xf_language,",
				"          Person_Title = xf_title,",
				"          deleted = RawComMemberIngest@deleted,",
				"          member_Insert_Date = RawComMemberIngest@Insert_Date,",
				"          extend_Insert_Date = RawComMemberExtendIngest@Insert_Date",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectRelatedColumn",
				"SelectRelatedColumn select(mapColumn(",
				"          Personal_Customer_ID,",
				"          Area_ID,",
				"          Name_CN,",
				"          Nick_Name,",
				"          Name_EN,",
				"          Phone_No,",
				"          Phone_Code,",
				"          Tel_No,",
				"          Level_ID,",
				"          Is_Special_Level,",
				"          Union_ID,",
				"          Is_Marry,",
				"          reg_at,",
				"          Cycle_At,",
				"          Expire_At,",
				"          Issue_At,",
				"          Person_Status,",
				"          Res_Zone,",
				"          Res_City,",
				"          Res_Province,",
				"          Res_Country,",
				"          Res_Address,",
				"          Person_Zip,",
				"          Person_Gender,",
				"          Person_Birthday,",
				"          Birthday_Short,",
				"          Person_Email,",
				"          Reg_Origin,",
				"          Reg_Sub_Origin,",
				"          Fav_Prod,",
				"          Person_Hobby,",
				"          Fav_Item,",
				"          Month_Income,",
				"          Year_Income,",
				"          Family_Monthly_Income,",
				"          Person_Address2,",
				"          Person_Address3,",
				"          Person_Phone2,",
				"          Person_QQ,",
				"          Person_Weibo,",
				"          Person_Company,",
				"          Person_Industry,",
				"          Person_Job,",
				"          Is_Mail_Market,",
				"          Company_Size,",
				"          Edu_Level,",
				"          Prefer_Language,",
				"          Person_Title,",
				"          deleted",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectRelatedColumnfromCar",
				"DropFromLevel derive(BU_Source = 'K11 PRC',",
				"          Person_Religion = \"\",",
				"          Person_Ethnic = \"\",",
				"          Cycle_At = toTimestamp((toInteger(toString(Cycle_At))+28800)*1000l,'yyyy-MM-dd HH:mm:ss'),",
				"          Expire_At = toTimestamp((toInteger(toString(Expire_At))+28800)*1000l,'yyyy-MM-dd HH:mm:ss'),",
				"          Issue_At = toTimestamp((toInteger(toString(Issue_At))+28800)*1000l,'yyyy-MM-dd HH:mm:ss'),",
				"          reg_at = toTimestamp((toInteger(toString(reg_at))+28800)*1000l,'yyyy-MM-dd HH:mm:ss'),",
				"          Person_Birthday = case(Person_Birthday==0,toTimestamp(null()),toTimestamp((toInteger(toString(Person_Birthday))+28800)*1000l,'yyyy-MM-dd HH:mm:ss')),",
				"          License_Plate = \"\",",
				"          Start_Date = toDate($Start_Date, 'yyyyMMdd')) ~> AddColumn",
				"SelectRelatedColumnfromCar, FilterNormal join(Level_ID == Tier_Code,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinREFCUSTOMERLEVEL",
				"JoinREFCUSTOMERLEVEL select(mapColumn(",
				"          Personal_Customer_ID,",
				"          Area_ID,",
				"          Name_CN,",
				"          Nick_Name,",
				"          Name_EN,",
				"          Phone_No,",
				"          Phone_Code,",
				"          Tel_No,",
				"          Level_ID,",
				"          Is_Special_Level,",
				"          Union_ID,",
				"          Is_Marry,",
				"          reg_at,",
				"          Cycle_At,",
				"          Expire_At = SelectRelatedColumnfromCar@Expire_At,",
				"          Issue_At,",
				"          Person_Status,",
				"          Res_Zone,",
				"          Res_City,",
				"          Res_Province,",
				"          Res_Country,",
				"          Res_Address,",
				"          Person_Zip,",
				"          Person_Gender,",
				"          Person_Birthday,",
				"          Birthday_Short,",
				"          Person_Email,",
				"          Reg_Origin,",
				"          Reg_Sub_Origin,",
				"          Fav_Prod,",
				"          Person_Hobby,",
				"          Fav_Item,",
				"          Month_Income,",
				"          Year_Income,",
				"          Family_Monthly_Income,",
				"          Person_Address2,",
				"          Person_Address3,",
				"          Person_Phone2,",
				"          Person_QQ,",
				"          Person_Weibo,",
				"          Person_Company,",
				"          Person_Industry,",
				"          Person_Job,",
				"          Is_Mail_Market,",
				"          Company_Size,",
				"          Edu_Level,",
				"          Prefer_Language,",
				"          Person_Title,",
				"          Level_Name = Tier_Name,",
				"          deleted",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropFromLevel",
				"RawREFCUSTOMERLEVEL filter(toInteger(byName(\"Is_Deleted\"))==0) ~> FilterNormal",
				"GetPhoneNumber aggregate(groupBy(Hashed_Member_ID,",
				"          Area_ID,",
				"          BU_Source,",
				"          Name_CN,",
				"          DropFromLevel@Nick_Name,",
				"          Name_EN,",
				"          Person_Title,",
				"          phone,",
				"          Phone_Code,",
				"          Tel_No,",
				"          Level_ID,",
				"          Level_Name,",
				"          Is_Special_Level,",
				"          DropFromLevel@Union_ID,",
				"          Is_Marry,",
				"          Reg_At = reg_at,",
				"          Expire_At,",
				"          Cycle_At,",
				"          Issue_At,",
				"          Person_Status,",
				"          Res_Zone,",
				"          Res_City,",
				"          Res_Province,",
				"          Res_Country,",
				"          Res_Address,",
				"          Person_Zip,",
				"          Person_Gender,",
				"          Person_Birthday,",
				"          Birthday_Short,",
				"          Fav_Prod,",
				"          Person_Hobby,",
				"          Fav_Item,",
				"          Month_Income,",
				"          Year_Income,",
				"          Family_Monthly_Income,",
				"          Person_Address2,",
				"          Person_Address3,",
				"          Person_Phone2,",
				"          Person_Email,",
				"          Person_QQ,",
				"          Person_Weibo,",
				"          Person_Company,",
				"          Person_Industry,",
				"          Person_Job,",
				"          Is_Mail_Market,",
				"          Company_Size,",
				"          Edu_Level,",
				"          Reg_Origin,",
				"          Reg_Sub_Origin,",
				"          License_Plate,",
				"          Prefer_Language,",
				"          Person_Religion,",
				"          Person_Ethnic,",
				"          deleted,",
				"          AddColumn@Start_Date,",
				"          Customer_UID),",
				"     count = count()) ~> Dedup",
				"AddColumn derive(Birthday_Short = Person_Birthday) ~> derivedColumn1",
				"derivedColumn1, CDMCUSTOMRTMAPPING join(Personal_Customer_ID == K11PRC_Member_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinHashed",
				"JoinHashed, GetLatestData join(Hashed_Member_ID == member_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> GetPhoneNumber",
				"PhoneNumberMapping rank(desc(Insert_Date, true),",
				"     output(rank as long)) ~> LatestDataInsert",
				"LatestDataInsert filter(rank==1) ~> GetLatestData",
				"Dedup sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Customer_UID,",
				"          Personal_Customer_ID = Hashed_Member_ID,",
				"          Area_ID,",
				"          BU_Source,",
				"          Name_CN,",
				"          Nick_Name,",
				"          Name_EN,",
				"          Person_Title,",
				"          Phone_No = phone,",
				"          Phone_Code,",
				"          Tel_No,",
				"          Level_ID,",
				"          Level_Name,",
				"          Is_Special_Level,",
				"          Union_ID,",
				"          Is_Marry,",
				"          Expire_At,",
				"          Cycle_At,",
				"          Issue_At,",
				"          reg_at = Reg_At,",
				"          Person_Status,",
				"          Res_Zone,",
				"          Res_City,",
				"          Res_Province,",
				"          Res_Country,",
				"          Res_Address,",
				"          Person_Zip,",
				"          Person_Gender,",
				"          Person_Birthday,",
				"          Birthday_Short,",
				"          Fav_Prod,",
				"          Person_Hobby,",
				"          Fav_Item,",
				"          Month_Income,",
				"          Year_Income,",
				"          Family_Monthly_Income,",
				"          Person_Address2,",
				"          Person_Address3,",
				"          Person_Phone2,",
				"          Person_Email,",
				"          Person_QQ,",
				"          Person_Weibo,",
				"          Person_Company,",
				"          Person_Industry,",
				"          Person_Job,",
				"          Is_Mail_Market,",
				"          Company_Size,",
				"          Edu_Level,",
				"          Reg_Origin,",
				"          Reg_Sub_Origin,",
				"          License_Plate,",
				"          Prefer_Language,",
				"          Person_Religion,",
				"          Person_Ethnic,",
				"          Is_Deleted = deleted,",
				"          Start_Date",
				"     )) ~> SinkPreCDMPERSONALPROFILE"
			]
		}
	}
}