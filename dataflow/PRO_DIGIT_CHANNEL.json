{
	"name": "PRO_DIGIT_CHANNEL",
	"properties": {
		"folder": {
			"name": "Pro"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "raw_mon_channel_log",
						"type": "DatasetReference"
					},
					"name": "IngestRawMonChannelLog"
				},
				{
					"dataset": {
						"referenceName": "PUB_CDM_CUSTOMER_MAPPING",
						"type": "DatasetReference"
					},
					"name": "IngestCDMCUSTOMERMAPPING"
				},
				{
					"dataset": {
						"referenceName": "raw_mon_channel",
						"type": "DatasetReference"
					},
					"name": "IngestMonChannel"
				},
				{
					"dataset": {
						"referenceName": "raw_mon_app",
						"type": "DatasetReference"
					},
					"name": "IngestMonApp"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DIGIT_CHANNEL",
						"type": "DatasetReference"
					},
					"name": "SinkToProcessTable",
					"rejectedDataLinkedService": {
						"referenceName": "1crmTagMgmtRawProd",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "AddColumn"
				},
				{
					"name": "JoinMapping"
				},
				{
					"name": "DropUnwantColumn"
				},
				{
					"name": "JoinMonChannel"
				},
				{
					"name": "DropColumnFromMonChannel"
				},
				{
					"name": "JoinMonApp"
				},
				{
					"name": "DropColumnFromMonApp"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Start_Date as string",
				"}",
				"source(output(",
				"          id as long,",
				"          app_id as long,",
				"          session_id as long,",
				"          visitor_id as long,",
				"          user_id as string,",
				"          channel_id as long,",
				"          channel_level as integer,",
				"          time_of_min as integer,",
				"          time_of_hour as integer,",
				"          time_of_day as long,",
				"          time_of_week as long,",
				"          time_of_month as long,",
				"          createtime as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> IngestRawMonChannelLog",
				"source(output(",
				"          Customer_UID as string,",
				"          K11PRC_Member_ID as string,",
				"          Union_ID as string,",
				"          KDP_ID as string,",
				"          CL_ID as string,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string,",
				"          manual_tag_id as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestCDMCUSTOMERMAPPING",
				"source(output(",
				"          id as long,",
				"          app_id as long,",
				"          channel_key as string,",
				"          channel_name as string,",
				"          channel_level as integer,",
				"          mini_path as string,",
				"          status as integer,",
				"          operator_id as long,",
				"          createtime as integer,",
				"          updatetime as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> IngestMonChannel",
				"source(output(",
				"          id as long,",
				"          account_id as long,",
				"          app_id as long,",
				"          area_id as integer,",
				"          name as string,",
				"          period as integer,",
				"          starttime as long,",
				"          endtime as integer,",
				"          landing_page_url as string,",
				"          budget as integer,",
				"          event_url as string,",
				"          push_url as string,",
				"          desc as string,",
				"          status as integer,",
				"          trigger_switch as integer,",
				"          debug_switch as integer,",
				"          operator_id as long,",
				"          last_operator_id as long,",
				"          createtime as integer,",
				"          updatetime as integer,",
				"          coupon_count as integer,",
				"          app_type as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> IngestMonApp",
				"DropColumnFromMonApp derive(BU_Source = 'K11 PRC',",
				"          Start_Date = toDate($Start_Date, 'yyyyMMdd'),",
				"          End_Date = toTimestamp(toString(null())),",
				"          Is_Current = 1,",
				"          Create_Time = toTimestamp(toLong(toString(createtime))*1000,'yyyy-MM-dd HH:mm:ss')) ~> AddColumn",
				"DropColumnFromMonChannel, IngestCDMCUSTOMERMAPPING join(user_id == K11PRC_Member_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinMapping",
				"JoinMapping select(mapColumn(",
				"          id,",
				"          app_id,",
				"          session_id,",
				"          visitor_id,",
				"          user_id,",
				"          channel_id,",
				"          channel_level,",
				"          createtime,",
				"          channel_name,",
				"          status,",
				"          Customer_UID,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropUnwantColumn",
				"IngestRawMonChannelLog, IngestMonChannel join(channel_id == IngestMonChannel@id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinMonChannel",
				"JoinMonChannel select(mapColumn(",
				"          id = IngestRawMonChannelLog@id,",
				"          app_id = IngestRawMonChannelLog@app_id,",
				"          session_id,",
				"          visitor_id,",
				"          user_id,",
				"          channel_id,",
				"          channel_level = IngestRawMonChannelLog@channel_level,",
				"          createtime = IngestRawMonChannelLog@createtime,",
				"          channel_name,",
				"          status",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropColumnFromMonChannel",
				"DropUnwantColumn, IngestMonApp join(DropUnwantColumn@app_id == IngestMonApp@app_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinMonApp",
				"JoinMonApp select(mapColumn(",
				"          id = DropUnwantColumn@id,",
				"          app_id = DropUnwantColumn@app_id,",
				"          session_id,",
				"          visitor_id,",
				"          user_id,",
				"          channel_id,",
				"          channel_level,",
				"          createtime = DropUnwantColumn@createtime,",
				"          channel_name,",
				"          status = DropUnwantColumn@status,",
				"          Customer_UID,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current,",
				"          App_Name = name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropColumnFromMonApp",
				"AddColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Source_ID as long,",
				"          Customer_UID as string,",
				"          BU_Source as string,",
				"          App_ID as long,",
				"          App_Name as string,",
				"          Session_ID as long,",
				"          Visitor_ID as long,",
				"          Member_ID as string,",
				"          Channel_ID as long,",
				"          Channel_Level as integer,",
				"          Channel_Name as string,",
				"          Rec_Status as integer,",
				"          Create_Time as timestamp,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: false,",
				"     preSQLs:['DELETE FROM DIGIT_CHANNEL WHERE DATEDIFF(day,Start_Date, GETDATE()) >7;\\nDELETE FROM DIGIT_CHANNEL WHERE Start_Date = FORMAT(GetDate(), \\'yyyy-MM-dd\\');'],",
				"     postSQLs:['WITH TEMP AS (\\nSELECT [Source_ID], ROW_NUMBER() OVER (PARTITION BY [Customer_UID]\\n,[BU_Source]\\n,[App_ID]\\n,[App_Name]\\n,[Session_ID]\\n,[Visitor_ID]\\n,[Member_ID]\\n,[Channel_ID]\\n,[Channel_Level]\\n,[Channel_Name]\\n,[Rec_Status]\\n,[Create_Time] ORDER BY Start_Date DESC) AS SEQUENCE \\n FROM [dbo].[DIGIT_CHANNEL])\\n\\nDelete from DIGIT_CHANNEL where CONCAT(Source_ID,START_DATE) in (select CONCAT(Source_ID,START_DATE) from TEMP where SEQUENCE > 1);'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Source_ID = id,",
				"          Customer_UID,",
				"          BU_Source,",
				"          App_ID = app_id,",
				"          Session_ID = session_id,",
				"          Visitor_ID = visitor_id,",
				"          Member_ID = user_id,",
				"          Channel_ID = channel_id,",
				"          Channel_Level = channel_level,",
				"          Channel_Name = channel_name,",
				"          Rec_Status = status,",
				"          Create_Time,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current,",
				"          App_Name",
				"     )) ~> SinkToProcessTable"
			]
		}
	}
}