{
	"name": "SFMC_CS_RETURN",
	"properties": {
		"folder": {
			"name": "SFMC"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "PUB_CS_RETURN",
						"type": "DatasetReference"
					},
					"name": "CSRETURN"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TEMP_SFMC_CS_Return",
						"type": "DatasetReference"
					},
					"name": "SinkToDataLake"
				},
				{
					"dataset": {
						"referenceName": "SFMC_RECORD_COUNT",
						"type": "DatasetReference"
					},
					"name": "SinkToRecordCount"
				}
			],
			"transformations": [
				{
					"name": "RecordCount"
				},
				{
					"name": "AddColumns"
				},
				{
					"name": "nullstring"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Start_Date as string",
				"}",
				"source(output(",
				"          Return_SID as string,",
				"          Order_Code as string,",
				"          Parent_Order_Code as string,",
				"          User_ID as string,",
				"          BU_Source as string,",
				"          Merchant_ID as string,",
				"          Member_ID as string,",
				"          Return_Status as integer,",
				"          Refund_Status as integer,",
				"          Actual_Return_Amount as decimal(18,0),",
				"          Apply_Return_Amount as decimal(18,0),",
				"          Actual_Return_Send_Point as decimal(18,0),",
				"          Return_Remark as string,",
				"          Service_User_ID as string,",
				"          Service_Desc as string,",
				"          Service_Return_Reason as string,",
				"          Apply_Time as timestamp,",
				"          Return_Reason as string,",
				"          Refund_Time as timestamp,",
				"          Refund_Confirm_User_ID as string,",
				"          Refund_No as string,",
				"          Audit_Reason as string,",
				"          Freight_Pay as decimal(18,0),",
				"          Is_Available as string,",
				"          Is_Deleted as string,",
				"          Company_ID as string,",
				"          Audit_Time as timestamp,",
				"          AfterSales_Service_Type as integer,",
				"          Return_Reason_ID as string,",
				"          Return_Code as string,",
				"          Is_Pick_Up as integer,",
				"          Is_Return_Freight as string,",
				"          Distributor_ID as string,",
				"          Apply_Source as string,",
				"          Comp_Amount as decimal(18,0),",
				"          Product_Return_Type as integer,",
				"          Take_Product_Area_Code as string,",
				"          Out_Order_Code as string,",
				"          Out_Return_Code as string,",
				"          Inspect_Result as integer,",
				"          Merchant_Name as string,",
				"          Store_ID as string,",
				"          Store_Name as string,",
				"          Sys_Source as string,",
				"          Equip_Code as string,",
				"          Send_Back_Status as integer,",
				"          Complete_Time as timestamp,",
				"          Deadline_Time as timestamp,",
				"          User_Name as string,",
				"          Exchange_Order_Code as string,",
				"          Create_Time as timestamp,",
				"          Create_Time_DB as timestamp,",
				"          Update_Time as timestamp,",
				"          Update_Time_DB as timestamp,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string,",
				"          Customer_UID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> CSRETURN",
				"CSRETURN aggregate(groupBy({1} = 1),",
				"     Record_Count = count(1)) ~> RecordCount",
				"RecordCount derive(Name = 'Azure_CS_Return',",
				"          Insert_Date = currentUTC()+hours(8)) ~> AddColumns",
				"CSRETURN derive(null_string = toString(null()),",
				"          Return_Remark = replace(replace(regexReplace(regexReplace(Return_Remark, \"\\r\", \"\"),\"\\n\",\"\"), \"|\",\" \"),'\"',\"'\"),",
				"          Audit_Reason = replace(replace(regexReplace(regexReplace(Audit_Reason, \"\\r\", \"\"),\"\\n\",\"\"), \"|\",\" \"),'\"',\"'\")) ~> nullstring",
				"nullstring sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Order_Code,",
				"          Parent_Order_Code,",
				"          User_ID = null_string,",
				"          BU_Source,",
				"          Merchant_ID,",
				"          Member_ID = null_string,",
				"          Return_Status,",
				"          Refund_Status,",
				"          Actual_Return_Amount,",
				"          Apply_Return_Amount,",
				"          Actual_Return_Send_Point,",
				"          Return_Remark,",
				"          Service_User_ID,",
				"          Service_Desc,",
				"          Service_Return_Reason,",
				"          Apply_Time,",
				"          Return_Reason,",
				"          Refund_Time,",
				"          Refund_Confirm_User_ID,",
				"          Refund_No,",
				"          Audit_Reason,",
				"          Freight_Pay,",
				"          Is_Available,",
				"          Is_Deleted,",
				"          Company_ID,",
				"          Audit_Time,",
				"          AfterSales_Service_Type,",
				"          Return_Reason_ID,",
				"          Return_Code,",
				"          Is_Pick_Up,",
				"          Is_Return_Freight,",
				"          Distributor_ID,",
				"          Apply_Source,",
				"          Comp_Amount,",
				"          Product_Return_Type,",
				"          Take_Product_Area_Code,",
				"          Out_Order_Code,",
				"          Out_Return_Code,",
				"          Inspect_Result,",
				"          Merchant_Name,",
				"          Store_ID,",
				"          Store_Name,",
				"          Sys_Source,",
				"          Equip_Code,",
				"          Send_Back_Status,",
				"          Complete_Time,",
				"          Deadline_Time,",
				"          User_Name,",
				"          Exchange_Order_Code,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current,",
				"          Return_SID,",
				"          Customer_UID,",
				"          Create_Time,",
				"          Create_Time_DB,",
				"          Update_Time,",
				"          Update_Time_DB",
				"     )) ~> SinkToDataLake",
				"AddColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Name as string,",
				"          Record_Count as integer,",
				"          Insert_Date as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SinkToRecordCount"
			]
		}
	}
}