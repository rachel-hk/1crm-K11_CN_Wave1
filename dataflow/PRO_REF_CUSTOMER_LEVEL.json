{
	"name": "PRO_REF_CUSTOMER_LEVEL",
	"properties": {
		"folder": {
			"name": "Pro"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "vw_latest_com_member_level",
						"type": "DatasetReference"
					},
					"name": "IngestREFCUSTOMERLEVEL"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "REF_CUSTOMER_LEVEL",
						"type": "DatasetReference"
					},
					"name": "SinkToProcessTable"
				}
			],
			"transformations": [
				{
					"name": "DropUnwantedColumns"
				},
				{
					"name": "AddColumn"
				},
				{
					"name": "FilterLatest"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Start_Date as string",
				"}",
				"source(output(",
				"          id as long,",
				"          level_code as string,",
				"          system_id as integer,",
				"          sort as integer,",
				"          account_id as integer,",
				"          app_id as string,",
				"          card_id as string,",
				"          card_bd as string,",
				"          fenze_name as string,",
				"          name as string,",
				"          valid_type as integer,",
				"          start_at as integer,",
				"          expire_at as integer,",
				"          up_rule as integer,",
				"          up_model as integer,",
				"          trigger_id as integer,",
				"          kpoint_rate as decimal(38,18),",
				"          spoint_rate as decimal(38,18),",
				"          discount as integer,",
				"          is_sync as integer,",
				"          create_at as integer,",
				"          update_at as integer,",
				"          deleted as integer,",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestREFCUSTOMERLEVEL",
				"FilterLatest select(mapColumn(",
				"          Tier_Code = id,",
				"          System_ID = system_id,",
				"          Account_ID = account_id,",
				"          App_ID = app_id,",
				"          Card_ID = card_id,",
				"          Card_BD = card_bd,",
				"          Name_Fenze = fenze_name,",
				"          Tier_Name = name,",
				"          Valid_Type = valid_type,",
				"          Start_At = start_at,",
				"          Expire_At = expire_at,",
				"          Upgrade_Rule = up_rule,",
				"          Upgrade_Model = up_model,",
				"          Kpoint_Rate = kpoint_rate,",
				"          Spoint_Rate = spoint_rate,",
				"          Tier_Discount = discount,",
				"          Is_Sync = is_sync,",
				"          create_at,",
				"          update_at,",
				"          Is_Deleted = deleted",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropUnwantedColumns",
				"DropUnwantedColumns derive(Source_BU = 'K11 PRC',",
				"          Start_Date = toDate($Start_Date, 'yyyyMMdd'),",
				"          End_Date = toDate(toString(null())),",
				"          Is_Current = 1,",
				"          Start_At = toTimestamp((toInteger(toString(Start_At))+28800)*1000l,'yyyy-MM-dd HH:mm:ss'),",
				"          Expire_At = toTimestamp((toInteger(toString(Expire_At))+28800)*1000l,'yyyy-MM-dd HH:mm:ss'),",
				"          Create_At = toTimestamp((toInteger(toString(create_at))+28800)*1000l,'yyyy-MM-dd HH:mm:ss'),",
				"          Update_At = toTimestamp((toInteger(toString(update_at))+28800)*1000l,'yyyy-MM-dd HH:mm:ss')) ~> AddColumn",
				"IngestREFCUSTOMERLEVEL filter(toDate(Insert_Date)>=addDays(toDate(currentUTC()+hours(8)),0)) ~> FilterLatest",
				"AddColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Tier_Code as string,",
				"          System_ID as integer,",
				"          Source_BU as string,",
				"          Account_ID as integer,",
				"          App_ID as string,",
				"          Card_ID as string,",
				"          Card_BD as string,",
				"          Name_Fenze as string,",
				"          Tier_Name as string,",
				"          Valid_Type as integer,",
				"          Start_At as timestamp,",
				"          Expire_At as timestamp,",
				"          Upgrade_Rule as integer,",
				"          Upgrade_Model as integer,",
				"          Kpoint_Rate as decimal(18,0),",
				"          Spoint_Rate as decimal(18,0),",
				"          Tier_Discount as integer,",
				"          Is_Sync as integer,",
				"          Create_At as timestamp,",
				"          Update_At as timestamp,",
				"          Is_Deleted as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: false,",
				"     preSQLs:['TRUNCATE TABLE K11_PRO.REF_CUSTOMER_LEVEL '],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Tier_Code,",
				"          System_ID,",
				"          Source_BU,",
				"          Account_ID,",
				"          App_ID,",
				"          Card_ID,",
				"          Card_BD,",
				"          Name_Fenze,",
				"          Tier_Name,",
				"          Valid_Type,",
				"          Start_At,",
				"          Expire_At,",
				"          Upgrade_Rule,",
				"          Upgrade_Model,",
				"          Kpoint_Rate,",
				"          Spoint_Rate,",
				"          Tier_Discount,",
				"          Is_Sync,",
				"          Create_At = AddColumn@Create_At,",
				"          Update_At = AddColumn@Update_At,",
				"          Is_Deleted,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current",
				"     )) ~> SinkToProcessTable"
			]
		}
	}
}