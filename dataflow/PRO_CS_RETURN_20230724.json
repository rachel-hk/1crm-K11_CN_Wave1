{
	"name": "PRO_CS_RETURN_20230724",
	"properties": {
		"folder": {
			"name": "Pro"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "vw_Latest_so_return",
						"type": "DatasetReference"
					},
					"name": "IngestSoReturn"
				},
				{
					"dataset": {
						"referenceName": "PUB_CDM_CUSTOMER_MAPPING",
						"type": "DatasetReference"
					},
					"name": "IngestCDMCUSTOMERMAPPING"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_PRO_CS_RETURN",
						"type": "DatasetReference"
					},
					"name": "SinkToCSRETURN"
				}
			],
			"transformations": [
				{
					"name": "AddColumn"
				},
				{
					"name": "JoinCDMCUSTOMERMAPPING"
				},
				{
					"name": "FilterLatest"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Start_Date as string",
				"}",
				"source(output(",
				"          id as long,",
				"          parent_order_code as string,",
				"          order_code as string,",
				"          user_id as string,",
				"          merchant_id as long,",
				"          customer_id as long,",
				"          customer_name as string,",
				"          return_status as integer,",
				"          refund_status as integer,",
				"          actual_return_amount as decimal(38,18),",
				"          apply_return_amount as decimal(38,18),",
				"          return_remark as string,",
				"          service_user_id as long,",
				"          service_desc as string,",
				"          service_return_reason as string,",
				"          apply_time as timestamp,",
				"          return_reason as string,",
				"          refund_time as timestamp,",
				"          consignee_warehouse_id as long,",
				"          consignee_address as string,",
				"          consignee_name as string,",
				"          consignee_mobile as string,",
				"          consignee_create_time as timestamp,",
				"          courier_number as string,",
				"          logistics_company as string,",
				"          logistics_company_id as string,",
				"          refund_confirm_user_id as long,",
				"          refund_no as string,",
				"          audit_reason as string,",
				"          audit_user_id as long,",
				"          audit_user_name as string,",
				"          freight as decimal(38,18),",
				"          is_available as integer,",
				"          is_deleted as integer,",
				"          create_userid as long,",
				"          create_username as string,",
				"          create_time as timestamp,",
				"          create_time_db as timestamp,",
				"          server_ip as string,",
				"          update_userid as long,",
				"          update_username as string,",
				"          update_time as timestamp,",
				"          update_time_db as timestamp,",
				"          company_id as long,",
				"          audit_time as timestamp,",
				"          type as integer,",
				"          return_reason_id as string,",
				"          return_code as string,",
				"          settle_code as string,",
				"          settle_status as integer,",
				"          is_pick_up as integer,",
				"          user_courier_number as string,",
				"          user_logistics_company_id as string,",
				"          user_logistics_company as string,",
				"          is_return_freight as string,",
				"          distributor_id as long,",
				"          source as string,",
				"          compensatory_amount as decimal(38,18),",
				"          goods_return_type as integer,",
				"          take_goods_address as string,",
				"          take_goods_name as string,",
				"          take_goods_mobile as string,",
				"          take_goods_province_code as string,",
				"          take_goods_city_code as string,",
				"          take_goods_county_code as string,",
				"          take_goods_area_code as string,",
				"          out_order_code as string,",
				"          out_return_code as string,",
				"          user_good_other_contact_phone as string,",
				"          inspection_result as integer,",
				"          inspection_desc as string,",
				"          inspection_date as timestamp,",
				"          operator_id as long,",
				"          merchant_name as string,",
				"          store_id as long,",
				"          store_name as string,",
				"          is_drop_shipping as integer,",
				"          supplier_id as long,",
				"          supplier_code as string,",
				"          supplier_name as string,",
				"          sys_source as string,",
				"          equip_code as string,",
				"          send_back_status as integer,",
				"          goods_status as integer,",
				"          completion_time as timestamp,",
				"          deadline_time as timestamp,",
				"          user_name as string,",
				"          ext_field1 as string,",
				"          ext_field2 as string,",
				"          ext_field3 as string,",
				"          ext_field4 as string,",
				"          ext_field5 as string,",
				"          exchange_order_code as string,",
				"          actual_return_packaging_fee as decimal(38,18),",
				"          packaging_fee as decimal(38,18),",
				"          apply_union_return_amount as decimal(38,18),",
				"          actual_union_return_amount as decimal(38,18),",
				"          actual_return_points as long,",
				"          actual_return_point_money as decimal(38,18),",
				"          actual_return_commission as decimal(38,18),",
				"          actual_return_gift_card as decimal(38,18),",
				"          actual_return_ext_field1 as decimal(38,18),",
				"          actual_return_ext_field2 as decimal(38,18),",
				"          actual_return_ext_field3 as decimal(38,18),",
				"          actual_return_ext_field4 as decimal(38,18),",
				"          actual_return_ext_field5 as decimal(38,18),",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestSoReturn",
				"source(output(",
				"          Customer_UID as string,",
				"          K11PRC_Member_ID as string,",
				"          Union_ID as string,",
				"          KDP_ID as string,",
				"          CL_ID as string,",
				"          KGO_ID as string,",
				"          New_KGO_ID as string,",
				"          manual_tag_id as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string,",
				"          Hashed_Member_ID as string,",
				"          Hashed_VIP_Code as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestCDMCUSTOMERMAPPING",
				"JoinCDMCUSTOMERMAPPING derive(Start_Date = toDate($Start_Date, 'yyyyMMdd'),",
				"          End_Date = toDate(toString(null())),",
				"          Is_Current = 1,",
				"          BU_Source = 'K11 PRC') ~> AddColumn",
				"FilterLatest, IngestCDMCUSTOMERMAPPING join(user_id == New_KGO_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinCDMCUSTOMERMAPPING",
				"IngestSoReturn filter(toDate(Insert_Date)==addDays(currentDate(),-1)) ~> FilterLatest",
				"AddColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Order_Code = order_code,",
				"          Parent_Order_Code = parent_order_code,",
				"          User_ID = user_id,",
				"          BU_Source,",
				"          Merchant_ID = merchant_id,",
				"          Member_ID = Hashed_Member_ID,",
				"          Return_Status = return_status,",
				"          Refund_Status = refund_status,",
				"          Actual_Return_Amount = actual_return_amount,",
				"          Apply_Return_Amount = apply_return_amount,",
				"          Actual_Return_Send_Point = actual_return_points,",
				"          Return_Remark = return_remark,",
				"          Service_User_ID = service_user_id,",
				"          Service_Desc = service_desc,",
				"          Service_Return_Reason = service_return_reason,",
				"          Apply_Time = apply_time,",
				"          Return_Reason = return_reason,",
				"          Refund_Time = refund_time,",
				"          Refund_Confirm_User_ID = refund_confirm_user_id,",
				"          Refund_No = refund_no,",
				"          Audit_Reason = audit_reason,",
				"          Freight_Pay = freight,",
				"          Is_Available = is_available,",
				"          Is_Deleted = is_deleted,",
				"          Company_ID = company_id,",
				"          Audit_Time = audit_time,",
				"          AfterSales_Service_Type = type,",
				"          Return_Reason_ID = return_reason_id,",
				"          Return_Code = return_code,",
				"          Is_Pick_Up = is_pick_up,",
				"          Is_Return_Freight = is_return_freight,",
				"          Distributor_ID = distributor_id,",
				"          Apply_Source = source,",
				"          Comp_Amount = compensatory_amount,",
				"          Product_Return_Type = goods_return_type,",
				"          Take_Product_Area_Code = take_goods_area_code,",
				"          Out_Order_Code = out_order_code,",
				"          Out_Return_Code = out_return_code,",
				"          Inspect_Result = inspection_result,",
				"          Merchant_Name = merchant_name,",
				"          Store_ID = store_id,",
				"          Store_Name = store_name,",
				"          Sys_Source = sys_source,",
				"          Equip_Code = equip_code,",
				"          Send_Back_Status = send_back_status,",
				"          Complete_Time = completion_time,",
				"          Deadline_Time = deadline_time,",
				"          User_Name = user_name,",
				"          Exchange_Order_Code = exchange_order_code,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current,",
				"          Return_SID = id,",
				"          Create_Time = create_time,",
				"          Create_Time_DB = create_time_db,",
				"          Update_Time = update_time,",
				"          Update_Time_DB = update_time_db,",
				"          Customer_UID",
				"     )) ~> SinkToCSRETURN"
			]
		}
	}
}