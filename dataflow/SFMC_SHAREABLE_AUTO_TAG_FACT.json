{
	"name": "SFMC_SHAREABLE_AUTO_TAG_FACT",
	"properties": {
		"folder": {
			"name": "SFMC"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Par_GROUP_AUTO_TAG",
						"type": "DatasetReference"
					},
					"name": "ParShareableAutoTAG"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_SHAREABLE_AUTO_TAG_FACT",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "SFMC_RECORD_COUNT",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "SelectFact"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Customer_UID as string,",
				"          Member_ID as string,",
				"          Union_ID as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Art_Design} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Beauty} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Dining} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Dressing} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Fashion} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Health_Wellness} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Investment} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Jewelry} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Property} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Shopping} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Sports} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Travel} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Watches} as string,",
				"          {FACT_BASIC_DEMO_INTEREST.Interest_Wine} as string,",
				"          {FACT_BASIC_DEMO_OCCUPATION.Com_District} as string,",
				"          {FACT_BASIC_DEMO_OCCUPATION.Member_Occupation} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Age_Range} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Birth_Month} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Chinese_Tourist} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Edu_level} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Gender} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Res_City} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Res_District} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Res_Province} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Res_Region} as string,",
				"          {FACT_BASIC_DEMO_PERSONAL.Whether_driver} as string,",
				"          {FACT_BASIC_SOCIAL_FAMILY.Marriage_Status} as string,",
				"          {FACT_BASIC_SOCIAL_FAMILY.Number_of_Kids} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Member_Tier_K11} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_Artus} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_BabyKingdom} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_Dpark} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_FTLife} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_FreeDuty} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_GTA} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_HKTicketing} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_Humansa} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_Humansa_Noah} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_KLUB_11_HK} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_KLUB_11_PRC} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_NWC} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_NWCL} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_NWDS} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Date_PassageN} as string,",
				"          {FACT_MEMBER_REGIST_CONSENT.Reg_Source_NWC} as string,",
				"          {FACT_MEMBER_REGIST_PROG.MAtelier_Customer} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_Artists_club} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_Artus} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_BabyKingdom} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_CTF_Edu_Group} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_Dmind} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_Dpark} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_FTLife} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_FreeDuty} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_GTA} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_HKTicketing} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_KLUB_11_HK} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_KLUB_11_PRC} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_NWC} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_NWCL} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_NWDS} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_PassageN} as string,",
				"          {FACT_MEMBER_REGIST_PROG.Member_Prog} as string,",
				"          {FACT_MEMBER_REGIST_PROG.No_Member_Prog_Joined} as string,",
				"          {FACT_MEMBER_TIER.Member_Tier_NWC} as string,",
				"          {FACT_MEMBER_TIER.Member_Tier_NWCL} as string,",
				"          {FACT_PROP_RES_ASSET.No_Res_Prop} as string,",
				"          {FACT_PROP_RES_ASSET.Purchase_Type_Prop1} as string,",
				"          {FACT_PROP_VEHICLE.Whether_Carpark_User} as string,",
				"          {FACT_PROP_VEHICLE.Whether_Has_Car} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ParShareableAutoTAG",
				"ParShareableAutoTAG select(mapColumn(",
				"          Customer_UID,",
				"          Member_ID,",
				"          Union_ID,",
				"          Interest_Art_Design = {FACT_BASIC_DEMO_INTEREST.Interest_Art_Design},",
				"          Interest_Beauty = {FACT_BASIC_DEMO_INTEREST.Interest_Beauty},",
				"          Interest_Dining = {FACT_BASIC_DEMO_INTEREST.Interest_Dining},",
				"          Interest_Dressing = {FACT_BASIC_DEMO_INTEREST.Interest_Dressing},",
				"          Interest_Fashion = {FACT_BASIC_DEMO_INTEREST.Interest_Fashion},",
				"          Interest_Health_Wellness = {FACT_BASIC_DEMO_INTEREST.Interest_Health_Wellness},",
				"          Interest_Investment = {FACT_BASIC_DEMO_INTEREST.Interest_Investment},",
				"          Interest_Jewelry = {FACT_BASIC_DEMO_INTEREST.Interest_Jewelry},",
				"          Interest_Property = {FACT_BASIC_DEMO_INTEREST.Interest_Property},",
				"          Interest_Shopping = {FACT_BASIC_DEMO_INTEREST.Interest_Shopping},",
				"          Interest_Sports = {FACT_BASIC_DEMO_INTEREST.Interest_Sports},",
				"          Interest_Travel = {FACT_BASIC_DEMO_INTEREST.Interest_Travel},",
				"          Interest_Watches = {FACT_BASIC_DEMO_INTEREST.Interest_Watches},",
				"          Interest_Wine = {FACT_BASIC_DEMO_INTEREST.Interest_Wine},",
				"          Com_District = {FACT_BASIC_DEMO_OCCUPATION.Com_District},",
				"          Member_Occupation = {FACT_BASIC_DEMO_OCCUPATION.Member_Occupation},",
				"          Age_Range = {FACT_BASIC_DEMO_PERSONAL.Age_Range},",
				"          Birth_Month = {FACT_BASIC_DEMO_PERSONAL.Birth_Month},",
				"          Chinese_Tourist = {FACT_BASIC_DEMO_PERSONAL.Chinese_Tourist},",
				"          Edu_level = {FACT_BASIC_DEMO_PERSONAL.Edu_level},",
				"          Gender = {FACT_BASIC_DEMO_PERSONAL.Gender},",
				"          Res_City = {FACT_BASIC_DEMO_PERSONAL.Res_City},",
				"          Res_District = {FACT_BASIC_DEMO_PERSONAL.Res_District},",
				"          Res_Province = {FACT_BASIC_DEMO_PERSONAL.Res_Province},",
				"          Res_Region = {FACT_BASIC_DEMO_PERSONAL.Res_Region},",
				"          Whether_driver = {FACT_BASIC_DEMO_PERSONAL.Whether_driver},",
				"          Marriage_Status = {FACT_BASIC_SOCIAL_FAMILY.Marriage_Status},",
				"          Number_of_Kids = {FACT_BASIC_SOCIAL_FAMILY.Number_of_Kids},",
				"          Member_Tier_K11 = {FACT_MEMBER_REGIST_CONSENT.Member_Tier_K11},",
				"          Reg_Date_Artus = {FACT_MEMBER_REGIST_CONSENT.Reg_Date_Artus},",
				"          Reg_Date_BabyKingdom = {FACT_MEMBER_REGIST_CONSENT.Reg_Date_BabyKingdom},",
				"          Reg_Date_Dpark = {FACT_MEMBER_REGIST_CONSENT.Reg_Date_Dpark},",
				"          Reg_Date_FTLife = {FACT_MEMBER_REGIST_CONSENT.Reg_Date_FTLife},",
				"          Reg_Date_FreeDuty = {FACT_MEMBER_REGIST_CONSENT.Reg_Date_FreeDuty},",
				"          Reg_Date_GTA = {FACT_MEMBER_REGIST_CONSENT.Reg_Date_GTA},",
				"          Reg_Date_HKTicketing = {FACT_MEMBER_REGIST_CONSENT.Reg_Date_HKTicketing},",
				"          Reg_Date_Humansa = {FACT_MEMBER_REGIST_CONSENT.Reg_Date_Humansa},",
				"          Reg_Date_Humansa_Noah = {FACT_MEMBER_REGIST_CONSENT.Reg_Date_Humansa_Noah},",
				"          Reg_Date_KLUB_11_HK = {FACT_MEMBER_REGIST_CONSENT.Reg_Date_KLUB_11_HK},",
				"          Reg_Date_KLUB_11_PRC = {FACT_MEMBER_REGIST_CONSENT.Reg_Date_KLUB_11_PRC},",
				"          Reg_Date_NWC = {FACT_MEMBER_REGIST_CONSENT.Reg_Date_NWC},",
				"          Reg_Date_NWCL = {FACT_MEMBER_REGIST_CONSENT.Reg_Date_NWCL},",
				"          Reg_Date_NWDS = {FACT_MEMBER_REGIST_CONSENT.Reg_Date_NWDS},",
				"          Reg_Date_PassageN = {FACT_MEMBER_REGIST_CONSENT.Reg_Date_PassageN},",
				"          Reg_Source_NWC = {FACT_MEMBER_REGIST_CONSENT.Reg_Source_NWC},",
				"          MAtelier_Customer = {FACT_MEMBER_REGIST_PROG.MAtelier_Customer},",
				"          Member_Artists_club = {FACT_MEMBER_REGIST_PROG.Member_Artists_club},",
				"          Member_Artus = {FACT_MEMBER_REGIST_PROG.Member_Artus},",
				"          Member_BabyKingdom = {FACT_MEMBER_REGIST_PROG.Member_BabyKingdom},",
				"          Member_CTF_Edu_Group = {FACT_MEMBER_REGIST_PROG.Member_CTF_Edu_Group},",
				"          Member_Dmind = {FACT_MEMBER_REGIST_PROG.Member_Dmind},",
				"          Member_Dpark = {FACT_MEMBER_REGIST_PROG.Member_Dpark},",
				"          Member_FTLife = {FACT_MEMBER_REGIST_PROG.Member_FTLife},",
				"          Member_FreeDuty = {FACT_MEMBER_REGIST_PROG.Member_FreeDuty},",
				"          Member_GTA = {FACT_MEMBER_REGIST_PROG.Member_GTA},",
				"          Member_HKTicketing = {FACT_MEMBER_REGIST_PROG.Member_HKTicketing},",
				"          Member_KLUB_11_HK = {FACT_MEMBER_REGIST_PROG.Member_KLUB_11_HK},",
				"          Member_KLUB_11_PRC = {FACT_MEMBER_REGIST_PROG.Member_KLUB_11_PRC},",
				"          Member_NWC = {FACT_MEMBER_REGIST_PROG.Member_NWC},",
				"          Member_NWCL = {FACT_MEMBER_REGIST_PROG.Member_NWCL},",
				"          Member_NWDS = {FACT_MEMBER_REGIST_PROG.Member_NWDS},",
				"          Member_PassageN = {FACT_MEMBER_REGIST_PROG.Member_PassageN},",
				"          Member_Prog = {FACT_MEMBER_REGIST_PROG.Member_Prog},",
				"          No_Member_Prog_Joined = {FACT_MEMBER_REGIST_PROG.No_Member_Prog_Joined},",
				"          Member_Tier_NWC = {FACT_MEMBER_TIER.Member_Tier_NWC},",
				"          Member_Tier_NWCL = {FACT_MEMBER_TIER.Member_Tier_NWCL},",
				"          No_Res_Prop = {FACT_PROP_RES_ASSET.No_Res_Prop},",
				"          Purchase_Type_Prop1 = {FACT_PROP_RES_ASSET.Purchase_Type_Prop1},",
				"          Whether_Carpark_User = {FACT_PROP_VEHICLE.Whether_Carpark_User},",
				"          Whether_Has_Car = {FACT_PROP_VEHICLE.Whether_Has_Car}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectFact",
				"SelectFact derive(null_string = toString(null()),",
				"          Customer_UID = concat('K11PRC', Member_ID),",
				"          Update_Time = currentUTC()+hours(8)) ~> derivedColumn1",
				"SelectFact aggregate(groupBy({1} = 1),",
				"     Record_Count = count(1)) ~> aggregate1",
				"aggregate1 derive(Name = 'Shareable_Fact_Tag',",
				"          Insert_Date = currentUTC()+hours(8)) ~> derivedColumn2",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Customer_UID,",
				"          Age_Range,",
				"          Gender,",
				"          Birth_Month,",
				"          Edu_level,",
				"          Whether_driver,",
				"          Res_Region,",
				"          Res_Province,",
				"          Res_City,",
				"          Res_District,",
				"          Com_City = null_string,",
				"          Com_District,",
				"          Member_Occupation,",
				"          Interest_Art_Design,",
				"          Interest_Investment,",
				"          Interest_Property,",
				"          Interest_Dining,",
				"          Interest_Fashion,",
				"          Interest_Jewelry,",
				"          Interest_Watches,",
				"          Interest_Beauty,",
				"          Interest_Sports,",
				"          Interest_Health_Wellness,",
				"          Interest_Wine,",
				"          Interest_Travel,",
				"          Interest_Environment_Protection = null_string,",
				"          Interest_Dressing,",
				"          Interest_Store_Exploration = null_string,",
				"          Interest_Exhibition = null_string,",
				"          Interest_Trendy_Tech = null_string,",
				"          Interest_Shopping,",
				"          Marriage_Status,",
				"          Number_of_Kids,",
				"          Member_Prog,",
				"          No_Member_Prog_Joined,",
				"          Member_CTF_Edu_Group,",
				"          Member_KLUB_11_HK,",
				"          Member_KLUB_11_PRC,",
				"          Member_NWC,",
				"          Member_NWCL,",
				"          Member_Artists_club,",
				"          MAtelier_Customer,",
				"          Member_Dpark,",
				"          Member_FreeDuty,",
				"          Member_NWDS,",
				"          Member_BabyKingdom,",
				"          Member_FTLife,",
				"          Member_HKTicketing,",
				"          Member_GTA,",
				"          Member_Artus,",
				"          Member_Humamsa_Noah = null_string,",
				"          Member_Humamsa = null_string,",
				"          Member_Humamsa_Health = null_string,",
				"          Member_Dmind,",
				"          Member_PassageN,",
				"          Member_The_Forest = null_string,",
				"          Reg_Date_CTF_Edu_Group = null_string,",
				"          Reg_Date_KLUB_11_HK,",
				"          Reg_Date_KLUB_11_PRC,",
				"          Reg_Date_NWC,",
				"          Reg_Date_NWCL,",
				"          Reg_Date_Artists_club = null_string,",
				"          Reg_Date_Dpark,",
				"          Reg_Date_FreeDuty,",
				"          Reg_Date_NWDS,",
				"          Reg_Date_BabyKingdom,",
				"          Reg_Date_FTLife,",
				"          Reg_Date_HKTicketing,",
				"          Reg_Date_GTA,",
				"          Reg_Date_Artus,",
				"          Reg_Date_Humamsa = null_string,",
				"          Reg_Date_Humamsa_Noah = null_string,",
				"          Reg_Date_Humamsa_Health = null_string,",
				"          Reg_Date_Dmind = null_string,",
				"          Reg_Date_PassageN,",
				"          Reg_Date_The_Forest = null_string,",
				"          No_Res_Prop,",
				"          Asset_Value_Range_Prop1_HK = null_string,",
				"          Asset_Value_Range_Prop1_PRC = null_string,",
				"          Purchase_Type_Prop1,",
				"          Whether_Has_Car,",
				"          Whether_Carpark_User,",
				"          Chinese_Tourist,",
				"          Member_Tier_NWC,",
				"          Member_Tier_NWCL,",
				"          Member_Tier_NWDS = null_string,",
				"          Update_Time",
				"     )) ~> sink1",
				"derivedColumn2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Name as string,",
				"          Record_Count as integer,",
				"          Insert_Date as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
			]
		}
	}
}