{
	"name": "PRO_DIGIT_SHARE_20230724",
	"properties": {
		"folder": {
			"name": "Pro"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "vw_latest_mon_share_log",
						"type": "DatasetReference"
					},
					"name": "IngestRawMonChannelLog"
				},
				{
					"dataset": {
						"referenceName": "PUB_CDM_CUSTOMER_MAPPING",
						"type": "DatasetReference"
					},
					"name": "IngestCDMCUSTOMERMAPPING"
				},
				{
					"dataset": {
						"referenceName": "PUB_REF_APP",
						"type": "DatasetReference"
					},
					"name": "IngestMonApp"
				},
				{
					"dataset": {
						"referenceName": "PUB_REF_PAGE",
						"type": "DatasetReference"
					},
					"name": "IngestMonPage"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_PRO_DIGIT_SHARE",
						"type": "DatasetReference"
					},
					"name": "SinkToProcessTable",
					"rejectedDataLinkedService": {
						"referenceName": "1crmTagMgmtRawProd",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "AddColumn"
				},
				{
					"name": "JoinMapping"
				},
				{
					"name": "DropUnwantColumn"
				},
				{
					"name": "JoinMonApp"
				},
				{
					"name": "DropColumnFromMonChannel"
				},
				{
					"name": "JoinMonPage"
				},
				{
					"name": "DropColumnFromMonPage"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "FilterLatest"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Start_Date as string",
				"}",
				"source(output(",
				"          id as long,",
				"          app_id as long,",
				"          session_id as long,",
				"          visitor_id as long,",
				"          user_id as string,",
				"          member_id as string,",
				"          channel_id as long,",
				"          page_id as long,",
				"          share_page_id as long,",
				"          k_id as integer,",
				"          k_type as integer,",
				"          k_index as integer,",
				"          share_id as long,",
				"          from_share_id as long,",
				"          share_level as integer,",
				"          share_from_user_id as string,",
				"          pv_from_share as integer,",
				"          share_by_other as integer,",
				"          time_of_min as integer,",
				"          time_of_hour as integer,",
				"          time_of_day as long,",
				"          time_of_week as long,",
				"          time_of_month as long,",
				"          createtime as integer,",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestRawMonChannelLog",
				"source(output(",
				"          Customer_UID as string,",
				"          K11PRC_Member_ID as string,",
				"          Union_ID as string,",
				"          KDP_ID as string,",
				"          CL_ID as string,",
				"          KGO_ID as string,",
				"          New_KGO_ID as string,",
				"          manual_tag_id as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string,",
				"          Hashed_Member_ID as string,",
				"          Hashed_VIP_Code as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestCDMCUSTOMERMAPPING",
				"source(output(",
				"          App_Unique_ID as integer,",
				"          Account_ID as long,",
				"          App_ID as long,",
				"          Area_ID as integer,",
				"          App_Name as string,",
				"          App_Period as integer,",
				"          Start_Time as timestamp,",
				"          End_Time as timestamp,",
				"          Landing_Page_Url as string,",
				"          App_Budget as integer,",
				"          Event_Url as string,",
				"          App_Desc as string,",
				"          App_Status as integer,",
				"          Trigger_Switch as integer,",
				"          Debug_Switch as integer,",
				"          App_Create_Time as timestamp,",
				"          App_Update_Time as timestamp,",
				"          Coupon_Count as integer,",
				"          App_Type as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string,",
				"          BU_Source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestMonApp",
				"source(output(",
				"          Page_Unique_ID as long,",
				"          App_ID as long,",
				"          Page_ID as long,",
				"          Page_Url as string,",
				"          Title_ID as long,",
				"          Page_Title as string,",
				"          Is_Deleted as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string,",
				"          BU_Source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestMonPage",
				"aggregate1 derive(BU_Source = 'K11 PRC',",
				"          Start_Date = toDate($Start_Date, 'yyyyMMdd'),",
				"          End_Date = toTimestamp(toString(null())),",
				"          Is_Current = 1,",
				"          Create_Time = toTimestamp((toInteger(toString(createtime))+28800)*1000l,'yyyy-MM-dd HH:mm:ss')) ~> AddColumn",
				"DropColumnFromMonPage, IngestCDMCUSTOMERMAPPING join(member_id == K11PRC_Member_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinMapping",
				"JoinMapping select(mapColumn(",
				"          id,",
				"          app_id,",
				"          session_id,",
				"          visitor_id,",
				"          user_id,",
				"          member_id = Hashed_Member_ID,",
				"          channel_id,",
				"          page_id,",
				"          share_page_id,",
				"          k_id,",
				"          k_type,",
				"          k_index,",
				"          share_id,",
				"          from_share_id,",
				"          share_level,",
				"          share_from_user_id,",
				"          pv_from_share,",
				"          share_by_other,",
				"          createtime,",
				"          App_Name,",
				"          Page_Title,",
				"          Customer_UID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropUnwantColumn",
				"FilterLatest, IngestMonApp join(IngestRawMonChannelLog@app_id == IngestMonApp@App_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinMonApp",
				"JoinMonApp select(mapColumn(",
				"          id,",
				"          app_id = IngestRawMonChannelLog@app_id,",
				"          session_id,",
				"          visitor_id,",
				"          user_id,",
				"          member_id,",
				"          channel_id,",
				"          page_id,",
				"          share_page_id,",
				"          k_id,",
				"          k_type,",
				"          k_index,",
				"          share_id,",
				"          from_share_id,",
				"          share_level,",
				"          share_from_user_id,",
				"          pv_from_share,",
				"          share_by_other,",
				"          createtime,",
				"          App_Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropColumnFromMonChannel",
				"DropColumnFromMonChannel, IngestMonPage join(DropColumnFromMonChannel@page_id == IngestMonPage@Page_ID",
				"     && DropColumnFromMonChannel@app_id == IngestMonPage@App_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinMonPage",
				"JoinMonPage select(mapColumn(",
				"          id,",
				"          app_id = DropColumnFromMonChannel@app_id,",
				"          session_id,",
				"          visitor_id,",
				"          user_id,",
				"          member_id,",
				"          channel_id,",
				"          page_id = DropColumnFromMonChannel@page_id,",
				"          share_page_id,",
				"          k_id,",
				"          k_type,",
				"          k_index,",
				"          share_id,",
				"          from_share_id,",
				"          share_level,",
				"          share_from_user_id,",
				"          pv_from_share,",
				"          share_by_other,",
				"          createtime,",
				"          App_Name,",
				"          Page_Title",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropColumnFromMonPage",
				"DropUnwantColumn aggregate(groupBy(id,",
				"          app_id,",
				"          session_id,",
				"          visitor_id,",
				"          user_id,",
				"          member_id,",
				"          channel_id,",
				"          page_id,",
				"          share_page_id,",
				"          k_id,",
				"          k_type,",
				"          k_index,",
				"          share_id,",
				"          from_share_id,",
				"          share_level,",
				"          share_from_user_id,",
				"          pv_from_share,",
				"          share_by_other,",
				"          createtime,",
				"          App_Name,",
				"          Page_Title,",
				"          Customer_UID),",
				"     count = count()) ~> aggregate1",
				"IngestRawMonChannelLog filter(toDate(Insert_Date)==addDays(currentDate(),-1)) ~> FilterLatest",
				"AddColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Share_Unique_ID = id,",
				"          Customer_UID,",
				"          BU_Source,",
				"          App_ID = app_id,",
				"          App_Name,",
				"          Session_ID = session_id,",
				"          Visitor_ID = visitor_id,",
				"          User_ID = user_id,",
				"          Member_ID = member_id,",
				"          Channel_ID = channel_id,",
				"          Page_ID = page_id,",
				"          Page_Title,",
				"          Share_Page_ID = share_page_id,",
				"          Follow_ID = k_id,",
				"          Follow_Type = k_type,",
				"          Follow_Index = k_index,",
				"          Share_ID = share_id,",
				"          From_Share_ID = from_share_id,",
				"          Share_Level = share_level,",
				"          Share_From_User_ID = share_from_user_id,",
				"          Pv_From_Share = pv_from_share,",
				"          Share_By_Other = share_by_other,",
				"          Create_Time,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current",
				"     )) ~> SinkToProcessTable"
			]
		}
	}
}