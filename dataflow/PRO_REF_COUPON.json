{
	"name": "PRO_REF_COUPON",
	"properties": {
		"folder": {
			"name": "Pro"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "vw_Latest_we_card",
						"type": "DatasetReference"
					},
					"name": "IngestREFCOUPON"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_PRO_REF_COUPON",
						"type": "DatasetReference"
					},
					"name": "SinktoProcessTableREFCOUPON"
				}
			],
			"transformations": [
				{
					"name": "DropUnwantedColumns"
				},
				{
					"name": "AddColumn"
				},
				{
					"name": "FilterLatest"
				},
				{
					"name": "TruncateSpace"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Start_Date as string",
				"}",
				"source(output(",
				"          id as long,",
				"          account_id as integer,",
				"          app_id as string,",
				"          card_id as string,",
				"          card_source as integer,",
				"          card_type as string,",
				"          status as string,",
				"          is_put as integer,",
				"          is_api as integer,",
				"          need_push_on_view as integer,",
				"          logo_url as string,",
				"          code_type as string,",
				"          brand_name as string,",
				"          title as string,",
				"          color as string,",
				"          notice as string,",
				"          description as string,",
				"          quantity as integer,",
				"          total_quantity as integer,",
				"          date_info as string,",
				"          begin_timestamp as integer,",
				"          end_timestamp as integer,",
				"          end_time as long,",
				"          use_custom_code as integer,",
				"          bind_openid as integer,",
				"          service_phone as string,",
				"          location_id_list as string,",
				"          use_all_locations as integer,",
				"          center_item as string,",
				"          custom_item as string,",
				"          get_limit as integer,",
				"          get_limit_time as integer,",
				"          use_limit as integer,",
				"          can_share as integer,",
				"          can_give_friend as integer,",
				"          use_condition as string,",
				"          abstract as string,",
				"          text_image_list as string,",
				"          time_limit as string,",
				"          business_service as string,",
				"          create_time as integer,",
				"          update_time as integer,",
				"          reason as string,",
				"          update_at as integer,",
				"          deleted as integer,",
				"          is_primary as integer,",
				"          use_all_app as integer,",
				"          use_all_goods as integer,",
				"          group_id as integer,",
				"          api_key as string,",
				"          app_id_list as string,",
				"          need_verify_member as integer,",
				"          use_refuse as integer,",
				"          can_provide as integer,",
				"          create_uid as integer,",
				"          update_uid as integer,",
				"          File_Path as string,",
				"          Insert_Date as string,",
				"          SEQUENCE as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestREFCOUPON",
				"FilterLatest select(mapColumn(",
				"          account_id,",
				"          id,",
				"          app_id,",
				"          card_id,",
				"          card_source,",
				"          card_type,",
				"          status,",
				"          is_put,",
				"          need_push_on_view,",
				"          code_type,",
				"          brand_name,",
				"          title,",
				"          color,",
				"          notice,",
				"          description,",
				"          quantity,",
				"          total_quantity,",
				"          date_info,",
				"          begin_timestamp,",
				"          end_timestamp,",
				"          end_time,",
				"          use_custom_code,",
				"          bind_openid,",
				"          location_id_list,",
				"          use_all_locations,",
				"          get_limit,",
				"          get_limit_time,",
				"          use_limit,",
				"          can_share,",
				"          can_give_friend,",
				"          use_condition,",
				"          time_limit,",
				"          create_time,",
				"          update_time,",
				"          reason,",
				"          deleted,",
				"          is_primary,",
				"          use_all_app,",
				"          use_refuse,",
				"          can_provide,",
				"          use_all_goods,",
				"          group_id,",
				"          app_id_list,",
				"          need_verify_member",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DropUnwantedColumns",
				"DropUnwantedColumns derive(Source_BU = 'K11 PRC',",
				"          Start_Date = toDate($Start_Date, 'yyyyMMdd'),",
				"          End_Date = toDate(toString(null())),",
				"          Is_Current = 1,",
				"          Create_Time = toTimestamp((toInteger(toString(create_time))+28800)*1000l,'yyyy-MM-dd HH:mm:ss'),",
				"          Update_Time = toTimestamp((toInteger(toString(update_time))+28800)*1000l,'yyyy-MM-dd HH:mm:ss'),",
				"          Begin_Time = toTimestamp((toInteger(toString(begin_timestamp))+28800)*1000l,'yyyy-MM-dd HH:mm:ss'),",
				"          End_Time = toTimestamp((toInteger(toString(end_timestamp))+28800)*1000l,'yyyy-MM-dd HH:mm:ss'),",
				"          Final_End_Time = toTimestamp((toInteger(toString(end_time))+28800)*1000l,'yyyy-MM-dd HH:mm:ss'),",
				"          description = replace(description, \"\\r\\n\", \"\"),",
				"          notice = replace(description, \"notice\", \"\")) ~> AddColumn",
				"IngestREFCOUPON filter(toDate(Insert_Date)>=addDays(toDate(currentUTC()+hours(8)),0)) ~> FilterLatest",
				"AddColumn derive(description = replace(description, \"\\r\\n\", \"\"),",
				"          notice = replace(notice, \"\\r\\n\", \"\")) ~> TruncateSpace",
				"TruncateSpace sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Coupon_ID = card_id,",
				"          Coupon_UID = id,",
				"          Source_BU,",
				"          Account_ID = account_id,",
				"          App_ID = app_id,",
				"          Coupon_Source = card_source,",
				"          Coupon_Type = card_type,",
				"          Coupon_Status = status,",
				"          Is_Put = is_put,",
				"          Push_View = need_push_on_view,",
				"          Code_Type = code_type,",
				"          Brand_Name = brand_name,",
				"          Coupon_Title = title,",
				"          Coupon_Color = color,",
				"          Coupon_Notice = notice,",
				"          Coupon_Desc = description,",
				"          Coupon_Quan = quantity,",
				"          Total_Quan = total_quantity,",
				"          Avail_Date = date_info,",
				"          Begin_Time,",
				"          End_Time,",
				"          Final_End_Time,",
				"          Custom_Code = use_custom_code,",
				"          Bind_Open_ID = bind_openid,",
				"          Location_ID_List = location_id_list,",
				"          All_Location = use_all_locations,",
				"          Get_Limit_Quan = get_limit,",
				"          Get_Limit_Time = get_limit_time,",
				"          Use_Limit_Quan = use_limit,",
				"          Can_Share = can_share,",
				"          Can_Give_Friend = can_give_friend,",
				"          Use_Con = use_condition,",
				"          Time_Limit = time_limit,",
				"          Create_Time,",
				"          Update_Time,",
				"          Rej_Reason = reason,",
				"          Is_Deleted = deleted,",
				"          Is_Primary = is_primary,",
				"          All_App = use_all_app,",
				"          All_Product = use_all_goods,",
				"          Group_ID = group_id,",
				"          App_ID_List = app_id_list,",
				"          Ver_Customer = need_verify_member,",
				"          Use_Refuse = use_refuse,",
				"          Can_Provide = can_provide,",
				"          Start_Date,",
				"          End_Date,",
				"          Is_Current",
				"     )) ~> SinktoProcessTableREFCOUPON"
			]
		}
	}
}