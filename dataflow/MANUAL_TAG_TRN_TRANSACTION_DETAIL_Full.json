{
	"name": "MANUAL_TAG_TRN_TRANSACTION_DETAIL_Full",
	"properties": {
		"folder": {
			"name": "Manual_Tag"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "PUB_TRAN_ORDER",
						"type": "DatasetReference"
					},
					"name": "IngestTranOrder"
				},
				{
					"dataset": {
						"referenceName": "PUB_TRAN_ORDER_DETAILS",
						"type": "DatasetReference"
					},
					"name": "IngestTranOrderDetail"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Par_MANUAL_TAG_TRN_TRANSACTION_DETAIL",
						"type": "DatasetReference"
					},
					"name": "SinkToManualTagTable"
				}
			],
			"transformations": [
				{
					"name": "JoinOrderDetail"
				},
				{
					"name": "AddColumn"
				},
				{
					"name": "SelectColumn"
				},
				{
					"name": "Dedup"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				},
				{
					"name": "window1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Order_SID as integer,",
				"          Order_Code as string,",
				"          Customer_UID as string,",
				"          Member_ID as string,",
				"          BU_Source as string,",
				"          Union_ID as string,",
				"          Tier_ID as integer,",
				"          Special_Tier_ID as integer,",
				"          Provider_Key as string,",
				"          Trans_Channel as integer,",
				"          Special_Level_Time as timestamp,",
				"          Order_Channel as string,",
				"          Area_ID as integer,",
				"          Origin_Order_Code as string,",
				"          Origin_Parent_Order_Code as string,",
				"          Wechat_Pay_Code as string,",
				"          Store_Code as string,",
				"          Store_Name as string,",
				"          Origin_Amount as decimal(18,4),",
				"          Not_Discount_Amount as decimal(18,4),",
				"          Sales_Amount as decimal(18,4),",
				"          Real_Amount as decimal(18,4),",
				"          Kpoint_Amount as decimal(18,4),",
				"          GV_Amount as decimal(18,4),",
				"          Bonus_Point as integer,",
				"          Bonus_Type as string,",
				"          Order_At as timestamp,",
				"          Order_Source as integer,",
				"          Order_Status as integer,",
				"          Cancel_At as timestamp,",
				"          Order_Remark as string,",
				"          Return_Amount as decimal(18,4),",
				"          Return_Bonus_Point as integer,",
				"          Central_Store_Code as string,",
				"          Online_Type as string,",
				"          KPos_Input as integer,",
				"          Order_Prom_Discount as decimal(18,4),",
				"          Order_Delivery_Fee as decimal(18,4),",
				"          Pay_Type as string,",
				"          Used_Kpoint as integer,",
				"          Prom_ID as integer,",
				"          Prom_Name as string,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestTranOrder",
				"source(output(",
				"          Order_SID as long,",
				"          Order_Code as string,",
				"          Customer_UID as string,",
				"          Source_Type as string,",
				"          BU_Source as string,",
				"          User_ID as long,",
				"          Merchant_ID as long,",
				"          Product_ID as long,",
				"          Mp_ID as long,",
				"          Store_Mp_ID as long,",
				"          Item_Status as string,",
				"          Warehouse_Type as integer,",
				"          Store_ID as string,",
				"          Settle_Method as integer,",
				"          Settle_Status as integer,",
				"          Settle_No as decimal(18,0),",
				"          Product_Item_Amount as decimal(18,0),",
				"          Product_Pur_No as decimal(18,0),",
				"          Product_Name_CN as string,",
				"          Product_Sale_Type as integer,",
				"          Product_Price_Original as decimal(18,0),",
				"          Product_Price_Market as decimal(18,0),",
				"          Product_Price_Sale as decimal(18,0),",
				"          Product_Price_Point as integer,",
				"          Pur_Price as decimal(18,0),",
				"          Buy_Type as integer,",
				"          Product_Gross_Weight as decimal(18,0),",
				"          Parent_Order_Code as string,",
				"          Product_Item_Before_Amount as decimal(18,0),",
				"          Product_Code as string,",
				"          Third_Merchant_Product_Code as string,",
				"          Product_Unit as string,",
				"          Sale_Unit as string,",
				"          Place_Origin as string,",
				"          Ext_Info as string,",
				"          Product_Standard as string,",
				"          Product_Material as string,",
				"          Product_Price_Before_Final as decimal(18,0),",
				"          Comment_Status as integer,",
				"          Series_Parent_ID as long,",
				"          Brand_ID as long,",
				"          Brand_Name as string,",
				"          Cate_ID as long,",
				"          Cate_Name as string,",
				"          Whole_Cate_ID as string,",
				"          Whole_Cate_Name as string,",
				"          Relation_Mp_ID as long,",
				"          Product_Type as integer,",
				"          Art_No as string,",
				"          Delivery_No as decimal(18,0),",
				"          Product_Price_Final as decimal(18,0),",
				"          Setmeal_Code as string,",
				"          Waiter_Code as string,",
				"          Setmeal_Name as string,",
				"          Support_Invoice as integer,",
				"          Setmeal_No as integer,",
				"          Product_Remark as string,",
				"          Gift_Card_Code as string,",
				"          Live_ID as long,",
				"          Send_Coupon as string,",
				"          Is_Available as integer,",
				"          Is_Deleted as integer,",
				"          Version_No as integer,",
				"          Create_Time as timestamp,",
				"          Create_Time_DB as timestamp,",
				"          Update_Time as timestamp,",
				"          Update_Time_DB as timestamp,",
				"          Company_ID as long,",
				"          Out_Order_Code as string,",
				"          Is_Inner_Supplier as integer,",
				"          Supplier_Name as string,",
				"          Supplier_ID as long,",
				"          Is_Drop_Shipping as integer,",
				"          Supplier_Code as string,",
				"          Package_Fee as decimal(18,0),",
				"          Auto_Refund as integer,",
				"          Refund_ID as integer,",
				"          Expiry_Time as timestamp,",
				"          Series_Product_Code as string,",
				"          Service_Date_Time as string,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> IngestTranOrderDetail",
				"IngestTranOrder, IngestTranOrderDetail join(Origin_Order_Code == IngestTranOrderDetail@Order_Code,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinOrderDetail",
				"JoinOrderDetail derive(active_flag = 1,",
				"          create_by = 1,",
				"          create_date = currentUTC(),",
				"          tenant_id = 1,",
				"          channel_id = iif(toString(Order_Source)==\"Offline Transaction\", 2, 1),",
				"          quantity = 1) ~> AddColumn",
				"AddColumn select(mapColumn(",
				"          channel_id,",
				"          transaction_id = IngestTranOrder@Order_SID,",
				"          product_id = Product_ID,",
				"          quantity,",
				"          unit_price = Product_Price_Original,",
				"          real_price = Real_Amount,",
				"          real_amount = Settle_No,",
				"          active_flag,",
				"          create_by,",
				"          create_date,",
				"          tenant_id,",
				"          original_invoice_no = IngestTranOrder@Order_Code,",
				"          product_code = Product_Code,",
				"          product_name = Product_Name_CN,",
				"          Source_Type,",
				"          Order_SID = IngestTranOrderDetail@Order_SID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumn",
				"select1 aggregate(groupBy(id,",
				"          channel_id,",
				"          transaction_id,",
				"          product_id,",
				"          quantity,",
				"          unit_price,",
				"          real_price,",
				"          real_amount,",
				"          active_flag,",
				"          create_by,",
				"          create_date,",
				"          tenant_id,",
				"          original_invoice_no,",
				"          product_code,",
				"          product_name),",
				"     count = count()) ~> Dedup",
				"window1 derive(id = toLong(\r",
				"    concat(toString(transaction_id),toString(row_number),toString(000000))\r",
				"    )) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          channel_id,",
				"          transaction_id,",
				"          product_id,",
				"          quantity,",
				"          unit_price,",
				"          real_price,",
				"          real_amount,",
				"          active_flag,",
				"          create_by,",
				"          create_date,",
				"          tenant_id,",
				"          original_invoice_no,",
				"          product_code,",
				"          product_name,",
				"          id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"SelectColumn window(over(original_invoice_no),",
				"     asc(original_invoice_no, true),",
				"     row_number = rowNumber()) ~> window1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          id,",
				"          channel_id,",
				"          transaction_id,",
				"          product_id,",
				"          quantity,",
				"          unit_price,",
				"          real_price,",
				"          real_amount,",
				"          active_flag,",
				"          create_by,",
				"          create_date,",
				"          tenant_id,",
				"          original_invoice_no,",
				"          product_code,",
				"          product_name",
				"     )) ~> SinkToManualTagTable"
			]
		}
	}
}