{
	"name": "SFMC_CDM_PERSONAL_PROFILE_EXTRA",
	"properties": {
		"folder": {
			"name": "SFMC"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "PUB_CDM_PERSONAL_PROFILE_EXTRA",
						"type": "DatasetReference"
					},
					"name": "CDMPERSONALPROFILEEXTRA"
				},
				{
					"dataset": {
						"referenceName": "PUB_CDM_PERSONAL_PROFILE",
						"type": "DatasetReference"
					},
					"name": "CDMPERSONALPROFILE"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SFMC_RECORD_COUNT",
						"type": "DatasetReference"
					},
					"name": "SinkToRecordCount"
				}
			],
			"transformations": [
				{
					"name": "RecordCount"
				},
				{
					"name": "AddColumns"
				},
				{
					"name": "join1"
				},
				{
					"name": "filterSH"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Start_Date as string",
				"}",
				"source(output(",
				"          Record_ID as string,",
				"          Customer_UID as string,",
				"          Personal_Customer_ID as string,",
				"          BU_Source as string,",
				"          VIP_Code as string,",
				"          Union_ID as string,",
				"          First_Pay as timestamp,",
				"          Last_Pay as timestamp,",
				"          Is_K11 as integer,",
				"          From_Know as string,",
				"          Is_Main_Card as integer,",
				"          Card_Type as integer,",
				"          VIP_Card_Type as integer,",
				"          Up_Origin as integer,",
				"          Operator_Type as integer,",
				"          Member_Kpoint as integer,",
				"          Expire_Kpoint as timestamp,",
				"          Clear_Kpoint as timestamp,",
				"          Member_Spoint as integer,",
				"          Expire_Spoint as timestamp,",
				"          Clear_Spoint as timestamp,",
				"          Spoint_Times as integer,",
				"          Member_Balance as integer,",
				"          Sales_Total as decimal(18,0),",
				"          Sales_Times as integer,",
				"          Create_At as timestamp,",
				"          Member_Deleted as integer,",
				"          Update_Operator as string,",
				"          Upgrade_Type as integer,",
				"          Is_HK_Member as integer,",
				"          To_China_Times as string,",
				"          To_China_Reason as string,",
				"          Name_On_Card as string,",
				"          Visit_K11_Reason as string,",
				"          Company_Share_Info as string,",
				"          Member_References as string,",
				"          VIP_Club as string,",
				"          Join_Club_Date as timestamp,",
				"          SMS_Contact as string,",
				"          Email_Contact as integer,",
				"          Phone_Contact as integer,",
				"          Post_Contact as integer,",
				"          Allow_EDM as string,",
				"          Allow_Share_Info as string,",
				"          EDM_Type as string,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> CDMPERSONALPROFILEEXTRA",
				"source(output(",
				"          Customer_UID as string,",
				"          Personal_Customer_ID as string,",
				"          Area_ID as integer,",
				"          BU_Source as string,",
				"          Name_Cn as string,",
				"          Nick_Name as string,",
				"          Name_En as string,",
				"          Person_Title as string,",
				"          Phone_No as string,",
				"          Phone_Code as string,",
				"          Tel_No as string,",
				"          Level_ID as integer,",
				"          Level_Name as string,",
				"          Is_Special_Level as integer,",
				"          Union_ID as string,",
				"          Is_Marry as integer,",
				"          Expire_At as timestamp,",
				"          Cycle_At as timestamp,",
				"          Issue_At as timestamp,",
				"          Person_Status as integer,",
				"          Res_Zone as string,",
				"          Res_City as string,",
				"          Res_Province as string,",
				"          Res_Country as string,",
				"          Res_Address as string,",
				"          Person_Zip as string,",
				"          Person_Gender as integer,",
				"          Person_Birthday as timestamp,",
				"          Birthday_Short as timestamp,",
				"          Fav_Prod as string,",
				"          Person_Hobby as string,",
				"          Fav_Item as string,",
				"          Month_Income as integer,",
				"          Year_Income as integer,",
				"          Family_Monthly_Income as integer,",
				"          Person_Address2 as string,",
				"          Person_Address3 as string,",
				"          Person_Phone2 as string,",
				"          Person_Email as string,",
				"          Person_QQ as string,",
				"          Person_Weibo as string,",
				"          Person_Company as string,",
				"          Person_Industry as string,",
				"          Person_Job as string,",
				"          Is_Mail_Market as string,",
				"          Company_Size as integer,",
				"          Edu_Level as string,",
				"          Reg_Origin as integer,",
				"          Reg_Sub_Origin as integer,",
				"          License_Plate as string,",
				"          Prefer_language as long,",
				"          Person_Religion as string,",
				"          Person_Ethnic as string,",
				"          Is_Deleted as integer,",
				"          Start_Date as timestamp,",
				"          End_Date as timestamp,",
				"          Is_Current as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: false) ~> CDMPERSONALPROFILE",
				"filterSH aggregate(groupBy({1} = 1),",
				"     Record_Count = count(1)) ~> RecordCount",
				"RecordCount derive(Name = 'Azure_Personal_Profile_Extra',",
				"          Insert_Date = currentUTC()+hours(8)) ~> AddColumns",
				"CDMPERSONALPROFILEEXTRA, CDMPERSONALPROFILE join(CDMPERSONALPROFILEEXTRA@Customer_UID == CDMPERSONALPROFILE@Customer_UID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 filter(Area_ID == 13 || Area_ID == 2) ~> filterSH",
				"AddColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Name as string,",
				"          Record_Count as integer,",
				"          Insert_Date as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SinkToRecordCount"
			]
		}
	}
}